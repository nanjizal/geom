// Generated by Haxe 4.0.5
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = "EReg";
EReg.prototype = {
	r: null
	,match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = "HxOverrides";
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return js_Lib.get_undefined();
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
IntIterator.__name__ = "IntIterator";
IntIterator.prototype = {
	min: null
	,max: null
	,hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
var Lambda = function() { };
Lambda.__name__ = "Lambda";
Lambda.array = function(it) {
	var a = [];
	var i = $getIterator(it);
	while(i.hasNext()) {
		var i1 = i.next();
		a.push(i1);
	}
	return a;
};
Lambda.has = function(it,elt) {
	var x = $getIterator(it);
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Math.__name__ = "Math";
var Reflect = function() { };
Reflect.__name__ = "Reflect";
Reflect.hasField = function(o,field) {
	return Object.prototype.hasOwnProperty.call(o,field);
};
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + field];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[field];
		}
	}
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(js_Boot.isClass(f) || js_Boot.isEnum(f));
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isObject = function(v) {
	if(v == null) {
		return false;
	}
	var t = typeof(v);
	if(!(t == "string" || t == "object" && v.__enum__ == null)) {
		if(t == "function") {
			return (js_Boot.isClass(v) || js_Boot.isEnum(v)) != null;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
var Std = function() { };
Std.__name__ = "Std";
Std.is = function(v,t) {
	return js_Boot.__instanceof(v,t);
};
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.int = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	if(x != null) {
		var _g = 0;
		var _g1 = x.length;
		while(_g < _g1) {
			var i = _g++;
			var c = StringTools.fastCodeAt(x,i);
			if(c <= 8 || c >= 14 && c != 32 && c != 45) {
				var v = parseInt(x, (x[(i + 1)]=="x" || x[(i + 1)]=="X") ? 16 : 10);
				if(isNaN(v)) {
					return null;
				} else {
					return v;
				}
			}
		}
	}
	return null;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = "StringBuf";
StringBuf.prototype = {
	b: null
	,add: function(x) {
		this.b += Std.string(x);
	}
	,addChar: function(c) {
		this.b += String.fromCodePoint(c);
	}
	,toString: function() {
		return this.b;
	}
	,__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = "StringTools";
StringTools.htmlEscape = function(s,quotes) {
	var buf = new StringBuf();
	var code = new haxe_iterators_StringIteratorUnicode(s);
	while(code.hasNext()) {
		var code1 = code.next();
		switch(code1) {
		case 34:
			if(quotes) {
				buf.add("&quot;");
			} else {
				buf.addChar(code1);
			}
			break;
		case 38:
			buf.add("&amp;");
			break;
		case 39:
			if(quotes) {
				buf.add("&#039;");
			} else {
				buf.addChar(code1);
			}
			break;
		case 60:
			buf.add("&lt;");
			break;
		case 62:
			buf.add("&gt;");
			break;
		default:
			buf.addChar(code1);
		}
	}
	return buf.toString();
};
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return s.lastIndexOf(start,0) == 0;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
StringTools.utf16CodePointAt = function(s,index) {
	var c = StringTools.fastCodeAt(s,index);
	if(c >= 55296 && c <= 56319) {
		c = c - 55232 << 10 | StringTools.fastCodeAt(s,index + 1) & 1023;
	}
	return c;
};
var ValueType = $hxEnums["ValueType"] = { __ename__ : "ValueType", __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"]
	,TNull: {_hx_index:0,__enum__:"ValueType",toString:$estr}
	,TInt: {_hx_index:1,__enum__:"ValueType",toString:$estr}
	,TFloat: {_hx_index:2,__enum__:"ValueType",toString:$estr}
	,TBool: {_hx_index:3,__enum__:"ValueType",toString:$estr}
	,TObject: {_hx_index:4,__enum__:"ValueType",toString:$estr}
	,TFunction: {_hx_index:5,__enum__:"ValueType",toString:$estr}
	,TClass: ($_=function(c) { return {_hx_index:6,c:c,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TEnum: ($_=function(e) { return {_hx_index:7,e:e,__enum__:"ValueType",toString:$estr}; },$_.__params__ = ["e"],$_)
	,TUnknown: {_hx_index:8,__enum__:"ValueType",toString:$estr}
};
var Type = function() { };
Type.__name__ = "Type";
Type.getClass = function(o) {
	return js_Boot.getClass(o);
};
Type.getEnum = function(o) {
	if(o == null) {
		return null;
	}
	return $hxEnums[o.__enum__];
};
Type.getClassName = function(c) {
	return c.__name__;
};
Type.getEnumName = function(e) {
	return e.__ename__;
};
Type.getInstanceFields = function(c) {
	var a = [];
	for(var i in c.prototype) a.push(i);
	HxOverrides.remove(a,"__class__");
	HxOverrides.remove(a,"__properties__");
	return a;
};
Type.typeof = function(v) {
	switch(typeof(v)) {
	case "boolean":
		return ValueType.TBool;
	case "function":
		if(js_Boot.isClass(v) || js_Boot.isEnum(v)) {
			return ValueType.TObject;
		}
		return ValueType.TFunction;
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) {
			return ValueType.TInt;
		}
		return ValueType.TFloat;
	case "object":
		if(v == null) {
			return ValueType.TNull;
		}
		var e = v.__enum__;
		if(e != null) {
			return ValueType.TEnum($hxEnums[e]);
		}
		var c = js_Boot.getClass(v);
		if(c != null) {
			return ValueType.TClass(c);
		}
		return ValueType.TObject;
	case "string":
		return ValueType.TClass(String);
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var ctorName = enm.__constructs__[a._hx_index];
		var params = enm[ctorName].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( e1 ) {
		haxe_CallStack.lastException = e1;
		var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
		return false;
	}
	return true;
};
Type.enumConstructor = function(e) {
	return $hxEnums[e.__enum__].__constructs__[e._hx_index];
};
Type.enumParameters = function(e) {
	var enm = $hxEnums[e.__enum__];
	var ctorName = enm.__constructs__[e._hx_index];
	var params = enm[ctorName].__params__;
	if(params != null) {
		var _g = [];
		var _g1 = 0;
		while(_g1 < params.length) {
			var p = params[_g1];
			++_g1;
			_g.push(e[p]);
		}
		return _g;
	} else {
		return [];
	}
};
Type.enumIndex = function(e) {
	return e._hx_index;
};
var equals_Equal = function() { };
equals_Equal.__name__ = "equals.Equal";
equals_Equal.isNull = function(a) {
	if(Type.typeof(a)._hx_index == 0) {
		return true;
	} else {
		return false;
	}
};
equals_Equal.isFunction = function(a) {
	if(Type.typeof(a)._hx_index == 5) {
		return true;
	} else {
		return false;
	}
};
equals_Equal.equals = function(a,b) {
	if(a == b) {
		return true;
	}
	if(equals_Equal.isNull(a) || equals_Equal.isNull(b)) {
		return false;
	}
	var _g = Type.typeof(a);
	switch(_g._hx_index) {
	case 2:
		if(isNaN(a)) {
			return isNaN(b);
		} else {
			return false;
		}
		break;
	case 0:case 1:case 3:case 8:
		return a == b;
	case 4:
		break;
	case 5:
		return Reflect.compareMethods(a,b);
	case 6:
		var _g2 = _g.c;
		if(((a) instanceof Array)) {
			var a1 = js_Boot.__cast(a , Array);
			var b1 = js_Boot.__cast(b , Array);
			if(a1.length != b1.length) {
				return false;
			}
			var _g1 = 0;
			var _g11 = a1.length;
			while(_g1 < _g11) {
				var i = _g1++;
				if(!equals_Equal.equals(a1[i],b1[i])) {
					return false;
				}
			}
			return true;
		}
		if(js_Boot.__implements(a,haxe_IMap)) {
			var a2 = js_Boot.__cast(a , haxe_IMap);
			var b2 = js_Boot.__cast(b , haxe_IMap);
			var _g3 = [];
			var key = a2.keys();
			while(key.hasNext()) {
				var key1 = key.next();
				_g3.push(key1);
			}
			var a_keys = _g3;
			var _g12 = [];
			var key2 = b2.keys();
			while(key2.hasNext()) {
				var key3 = key2.next();
				_g12.push(key3);
			}
			var b_keys = _g12;
			if(!equals_Equal.equals(a_keys,b_keys)) {
				return false;
			}
			var _g21 = 0;
			while(_g21 < a_keys.length) {
				var key4 = a_keys[_g21];
				++_g21;
				if(!equals_Equal.equals(a2.get(key4),b2.get(key4))) {
					return false;
				}
			}
			return true;
		}
		if(((a) instanceof Date)) {
			return (js_Boot.__cast(a , Date)).getTime() == (js_Boot.__cast(b , Date)).getTime();
		}
		if(((a) instanceof haxe_io_Bytes)) {
			return equals_Equal.equals((js_Boot.__cast(a , haxe_io_Bytes)).getData(),(js_Boot.__cast(b , haxe_io_Bytes)).getData());
		}
		break;
	case 7:
		var _g13 = _g.e;
		if(Type.enumIndex(a) != Type.enumIndex(b)) {
			return false;
		}
		var a_args = Type.enumParameters(a);
		var b_args = Type.enumParameters(b);
		return equals_Equal.equals(a_args,b_args);
	}
	var _g31 = 0;
	var _g4 = Reflect.fields(a);
	while(_g31 < _g4.length) {
		var field = _g4[_g31];
		++_g31;
		var pa = Reflect.field(a,field);
		var pb = Reflect.field(b,field);
		if(equals_Equal.isFunction(pa)) {
			if(equals_Equal.isNull(pa) != equals_Equal.isNull(pb)) {
				return false;
			}
			continue;
		}
		if(!equals_Equal.equals(pa,pb)) {
			return false;
		}
	}
	return true;
};
var utest_ITest = function() { };
utest_ITest.__name__ = "utest.ITest";
utest_ITest.__isInterface__ = true;
var utest_Test = function() {
};
utest_Test.__name__ = "utest.Test";
utest_Test.__interfaces__ = [utest_ITest];
utest_Test.prototype = {
	__initializeUtest__: function() {
		var init = { tests : [], accessories : { }};
		return init;
	}
	,__class__: utest_Test
};
var geom_GeomTest = function() {
	utest_Test.call(this);
};
geom_GeomTest.__name__ = "geom.GeomTest";
geom_GeomTest.main = function() {
	var runner = new utest_Runner();
	runner.addCase(new geom_GeomTest());
	utest_ui_Report.create(runner);
	runner.run();
};
geom_GeomTest.__super__ = utest_Test;
geom_GeomTest.prototype = $extend(utest_Test.prototype,{
	testMultiVector2_1: function() {
		var left;
		try {
			var this1 = new geom_structure_MVec2(0.,0.,0.,0.);
			left = this1;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			var this2 = new geom_structure_MVec2(0.,0.,0.,0.);
			right = this2;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("MultiVector2.hx:12 [OK] MultiVector2.zero == new MultiVector2({ s:0., x:0., y:0., xy:0. })",{ lineNumber : 12, fileName : "src/geom/ga/MultiVector2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("MultiVector2.zero == new MultiVector2({ s:0., x:0., y:0., xy:0. }) --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 12, fileName : "src/geom/ga/MultiVector2.hx", className : "", methodName : ""});
		}
	}
	,testMultiVector3_1: function() {
		var left;
		try {
			var this1 = new geom_structure_MVec3(0.,0.,0.,0.,0.,0.,0.,0.);
			left = this1;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			var this2 = new geom_structure_MVec3(0.,0.,0.,0.,0.,0.,0.,0.);
			right = this2;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("MultiVector3.hx:11 [OK] MultiVector3.zero == new MultiVector3({ s:0., x:0., y:0., z:0., xy:0., zx:0., yz:0., xyz:0. })",{ lineNumber : 11, fileName : "src/geom/ga/MultiVector3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("MultiVector3.zero == new MultiVector3({ s:0., x:0., y:0., z:0., xy:0., zx:0., yz:0., xyz:0. }) --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 11, fileName : "src/geom/ga/MultiVector3.hx", className : "", methodName : ""});
		}
	}
	,testComplex_1: function() {
		var left;
		try {
			var removeI = HxOverrides.substr("1 + 2i",0,"1 + 2i".length - 1);
			var split = removeI.split("+");
			var this1 = new geom_structure_Mat1x2(0.,0.);
			var c = this1;
			var v = Std.parseFloat(split[0]);
			c.x = v;
			var v1 = Std.parseFloat(split[1]);
			c.y = v1;
			var c0 = c;
			var this2 = new geom_structure_Mat1x2(1.,2.);
			var c1 = this2;
			var delta = 0.0000001;
			left = !(Math.abs(c1.x - c0.x) >= delta || Math.abs(c1.y - c0.y) >= delta);
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			right = true;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("Complex.hx:34 [OK] ({\nvar c0: Complex = '1 + 2i';\nvar c1 = new Complex({ x: 1., y: 2. });\nc1 == c0; }) == true",{ lineNumber : 34, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar c0: Complex = '1 + 2i';\nvar c1 = new Complex({ x: 1., y: 2. });\nc1 == c0; }) == true --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 34, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left1;
		try {
			var c_real = 1.;
			var c_imaginary = 2.;
			var this3 = new geom_structure_Mat1x2(c_real,c_imaginary);
			var c01 = this3;
			var this4 = new geom_structure_Mat1x2(1.,2.);
			var c11 = this4;
			var delta1 = 0.0000001;
			left1 = !(Math.abs(c11.x - c01.x) >= delta1 || Math.abs(c11.y - c01.y) >= delta1);
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			right1 = true;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left1,right1)) {
			utest_Assert.pass("Complex.hx:52 [OK] ({\nvar c0: Complex = { real: 1., imaginary: 2. };\nvar c1 = new Complex({ x: 1., y: 2. });\nc1 == c0; }) == true",{ lineNumber : 52, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar c0: Complex = { real: 1., imaginary: 2. };\nvar c1 = new Complex({ x: 1., y: 2. });\nc1 == c0; }) == true --> Left side `" + Std.string(left1) + "` does not equal `" + Std.string(right1) + "`.",{ lineNumber : 52, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left2;
		try {
			var c_r = 1.;
			var c_i = 2.;
			var this5 = new geom_structure_Mat1x2(c_r,c_i);
			var c02 = this5;
			var this6 = new geom_structure_Mat1x2(1.,2.);
			var c12 = this6;
			var delta2 = 0.0000001;
			left2 = !(Math.abs(c12.x - c02.x) >= delta2 || Math.abs(c12.y - c02.y) >= delta2);
		} catch( ex4 ) {
			haxe_CallStack.lastException = ex4;
			left2 = "exception: " + Std.string(((ex4) instanceof js__$Boot_HaxeError) ? ex4.val : ex4) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right2;
		try {
			right2 = true;
		} catch( ex5 ) {
			haxe_CallStack.lastException = ex5;
			right2 = "exception: " + Std.string(((ex5) instanceof js__$Boot_HaxeError) ? ex5.val : ex5) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left2,right2)) {
			utest_Assert.pass("Complex.hx:65 [OK] ({\nvar c0: Complex = { r: 1., i: 2. };\nvar c1 = new Complex({ x: 1., y: 2. });\nc1 == c0; }) == true",{ lineNumber : 65, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar c0: Complex = { r: 1., i: 2. };\nvar c1 = new Complex({ x: 1., y: 2. });\nc1 == c0; }) == true --> Left side `" + Std.string(left2) + "` does not equal `" + Std.string(right2) + "`.",{ lineNumber : 65, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left3;
		try {
			var c_real1 = 1.;
			var c_i1 = 2.;
			var this7 = new geom_structure_Mat1x2(c_real1,c_i1);
			var c03 = this7;
			var this8 = new geom_structure_Mat1x2(1.,2.);
			var c13 = this8;
			var delta3 = 0.0000001;
			left3 = !(Math.abs(c13.x - c03.x) >= delta3 || Math.abs(c13.y - c03.y) >= delta3);
		} catch( ex6 ) {
			haxe_CallStack.lastException = ex6;
			left3 = "exception: " + Std.string(((ex6) instanceof js__$Boot_HaxeError) ? ex6.val : ex6) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right3;
		try {
			right3 = true;
		} catch( ex7 ) {
			haxe_CallStack.lastException = ex7;
			right3 = "exception: " + Std.string(((ex7) instanceof js__$Boot_HaxeError) ? ex7.val : ex7) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left3,right3)) {
			utest_Assert.pass("Complex.hx:78 [OK] ({\nvar c0: Complex = { real: 1., i: 2. };\nvar c1 = new Complex({ x: 1., y: 2. });\nc1 == c0; }) == true",{ lineNumber : 78, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar c0: Complex = { real: 1., i: 2. };\nvar c1 = new Complex({ x: 1., y: 2. });\nc1 == c0; }) == true --> Left side `" + Std.string(left3) + "` does not equal `" + Std.string(right3) + "`.",{ lineNumber : 78, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left4;
		try {
			var c_r1 = 1.;
			var c_i2 = 2.;
			var this9 = new geom_structure_Mat1x2(c_r1,c_i2);
			var c2 = this9;
			var r = c2.x;
			var i = c2.y;
			var s = "" + r + " + " + i + " i";
			left4 = s == "1. + 2. i" || s == "1 + 2 i";
		} catch( ex8 ) {
			haxe_CallStack.lastException = ex8;
			left4 = "exception: " + Std.string(((ex8) instanceof js__$Boot_HaxeError) ? ex8.val : ex8) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right4;
		try {
			right4 = true;
		} catch( ex9 ) {
			haxe_CallStack.lastException = ex9;
			right4 = "exception: " + Std.string(((ex9) instanceof js__$Boot_HaxeError) ? ex9.val : ex9) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left4,right4)) {
			utest_Assert.pass("Complex.hx:91 [OK] ({\nvar c: Complex = { r: 1., i: 2. };\nvar s: String = c;\n// js seems to remove the .'s from the numbers not sure on other targets\ns == '1. + 2. i' || s == '1 + 2 i'; }) == true",{ lineNumber : 91, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar c: Complex = { r: 1., i: 2. };\nvar s: String = c;\n// js seems to remove the .'s from the numbers not sure on other targets\ns == '1. + 2. i' || s == '1 + 2 i'; }) == true --> Left side `" + Std.string(left4) + "` does not equal `" + Std.string(right4) + "`.",{ lineNumber : 91, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left5;
		try {
			var this10 = new geom_structure_Mat1x2(0.,0.);
			var a = this10;
			var this11 = new geom_structure_Mat1x2(0.,0.);
			var b = this11;
			var delta4 = 0.0000001;
			left5 = !(Math.abs(a.x - b.x) >= delta4 || Math.abs(a.y - b.y) >= delta4);
		} catch( ex10 ) {
			haxe_CallStack.lastException = ex10;
			left5 = "exception: " + Std.string(((ex10) instanceof js__$Boot_HaxeError) ? ex10.val : ex10) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right5;
		try {
			right5 = true;
		} catch( ex11 ) {
			haxe_CallStack.lastException = ex11;
			right5 = "exception: " + Std.string(((ex11) instanceof js__$Boot_HaxeError) ? ex11.val : ex11) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left5,right5)) {
			utest_Assert.pass("Complex.hx:109 [OK] ({\nComplex.zero == new Complex({x:0.\n, y:0.});\n}) == true",{ lineNumber : 109, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.zero == new Complex({x:0.\n, y:0.});\n}) == true --> Left side `" + Std.string(left5) + "` does not equal `" + Std.string(right5) + "`.",{ lineNumber : 109, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left6;
		try {
			var this12 = new geom_structure_Mat1x2(1.,0.);
			var a1 = this12;
			var this13 = new geom_structure_Mat1x2(1.,0.);
			var b1 = this13;
			var delta5 = 0.0000001;
			left6 = !(Math.abs(a1.x - b1.x) >= delta5 || Math.abs(a1.y - b1.y) >= delta5);
		} catch( ex12 ) {
			haxe_CallStack.lastException = ex12;
			left6 = "exception: " + Std.string(((ex12) instanceof js__$Boot_HaxeError) ? ex12.val : ex12) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right6;
		try {
			right6 = true;
		} catch( ex13 ) {
			haxe_CallStack.lastException = ex13;
			right6 = "exception: " + Std.string(((ex13) instanceof js__$Boot_HaxeError) ? ex13.val : ex13) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left6,right6)) {
			utest_Assert.pass("Complex.hx:122 [OK] ({\nComplex.one == new Complex({x:1.\n, y:0.});\n}) == true",{ lineNumber : 122, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.one == new Complex({x:1.\n, y:0.});\n}) == true --> Left side `" + Std.string(left6) + "` does not equal `" + Std.string(right6) + "`.",{ lineNumber : 122, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left7;
		try {
			var this14 = new geom_structure_Mat1x2(-1.,0.);
			var a2 = this14;
			var this15 = new geom_structure_Mat1x2(-1.,0.);
			var b2 = this15;
			var delta6 = 0.0000001;
			left7 = !(Math.abs(a2.x - b2.x) >= delta6 || Math.abs(a2.y - b2.y) >= delta6);
		} catch( ex14 ) {
			haxe_CallStack.lastException = ex14;
			left7 = "exception: " + Std.string(((ex14) instanceof js__$Boot_HaxeError) ? ex14.val : ex14) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right7;
		try {
			right7 = true;
		} catch( ex15 ) {
			haxe_CallStack.lastException = ex15;
			right7 = "exception: " + Std.string(((ex15) instanceof js__$Boot_HaxeError) ? ex15.val : ex15) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left7,right7)) {
			utest_Assert.pass("Complex.hx:135 [OK] ({\nComplex.minus1 == new Complex({x: -1.\n, y: 0.});\n}) == true",{ lineNumber : 135, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.minus1 == new Complex({x: -1.\n, y: 0.});\n}) == true --> Left side `" + Std.string(left7) + "` does not equal `" + Std.string(right7) + "`.",{ lineNumber : 135, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left8;
		try {
			var this16 = new geom_structure_Mat1x2(1.,1.);
			var a3 = this16;
			var this17 = new geom_structure_Mat1x2(1.,1.);
			var b3 = this17;
			var delta7 = 0.0000001;
			left8 = !(Math.abs(a3.x - b3.x) >= delta7 || Math.abs(a3.y - b3.y) >= delta7);
		} catch( ex16 ) {
			haxe_CallStack.lastException = ex16;
			left8 = "exception: " + Std.string(((ex16) instanceof js__$Boot_HaxeError) ? ex16.val : ex16) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right8;
		try {
			right8 = true;
		} catch( ex17 ) {
			haxe_CallStack.lastException = ex17;
			right8 = "exception: " + Std.string(((ex17) instanceof js__$Boot_HaxeError) ? ex17.val : ex17) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left8,right8)) {
			utest_Assert.pass("Complex.hx:148 [OK] ({\nComplex.unit == new Complex({x: 1.\n, y: 1.});\n}) == true",{ lineNumber : 148, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.unit == new Complex({x: 1.\n, y: 1.});\n}) == true --> Left side `" + Std.string(left8) + "` does not equal `" + Std.string(right8) + "`.",{ lineNumber : 148, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left9;
		try {
			var this18 = new geom_structure_Mat1x2(0.,1.);
			var a4 = this18;
			var this19 = new geom_structure_Mat1x2(0.,1.);
			var b4 = this19;
			var delta8 = 0.0000001;
			left9 = !(Math.abs(a4.x - b4.x) >= delta8 || Math.abs(a4.y - b4.y) >= delta8);
		} catch( ex18 ) {
			haxe_CallStack.lastException = ex18;
			left9 = "exception: " + Std.string(((ex18) instanceof js__$Boot_HaxeError) ? ex18.val : ex18) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right9;
		try {
			right9 = true;
		} catch( ex19 ) {
			haxe_CallStack.lastException = ex19;
			right9 = "exception: " + Std.string(((ex19) instanceof js__$Boot_HaxeError) ? ex19.val : ex19) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left9,right9)) {
			utest_Assert.pass("Complex.hx:161 [OK] ({\nComplex.i1 == new Complex({x: 0.\n, y: 1.});\n}) == true",{ lineNumber : 161, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.i1 == new Complex({x: 0.\n, y: 1.});\n}) == true --> Left side `" + Std.string(left9) + "` does not equal `" + Std.string(right9) + "`.",{ lineNumber : 161, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left10;
		try {
			var this20 = new geom_structure_Mat1x2(0.,-1.);
			var a5 = this20;
			var this21 = new geom_structure_Mat1x2(0.,-1.);
			var b5 = this21;
			var delta9 = 0.0000001;
			left10 = !(Math.abs(a5.x - b5.x) >= delta9 || Math.abs(a5.y - b5.y) >= delta9);
		} catch( ex20 ) {
			haxe_CallStack.lastException = ex20;
			left10 = "exception: " + Std.string(((ex20) instanceof js__$Boot_HaxeError) ? ex20.val : ex20) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right10;
		try {
			right10 = true;
		} catch( ex21 ) {
			haxe_CallStack.lastException = ex21;
			right10 = "exception: " + Std.string(((ex21) instanceof js__$Boot_HaxeError) ? ex21.val : ex21) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left10,right10)) {
			utest_Assert.pass("Complex.hx:174 [OK] ({\nComplex.iMinus1 == new Complex({x: 0.\n, y: -1.});\n}) == true",{ lineNumber : 174, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.iMinus1 == new Complex({x: 0.\n, y: -1.});\n}) == true --> Left side `" + Std.string(left10) + "` does not equal `" + Std.string(right10) + "`.",{ lineNumber : 174, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left11;
		try {
			var this22 = new geom_structure_Mat1x2(-1.,-1.);
			var a6 = this22;
			var this23 = new geom_structure_Mat1x2(-1.,-1.);
			var b6 = this23;
			var delta10 = 0.0000001;
			left11 = !(Math.abs(a6.x - b6.x) >= delta10 || Math.abs(a6.y - b6.y) >= delta10);
		} catch( ex22 ) {
			haxe_CallStack.lastException = ex22;
			left11 = "exception: " + Std.string(((ex22) instanceof js__$Boot_HaxeError) ? ex22.val : ex22) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right11;
		try {
			right11 = true;
		} catch( ex23 ) {
			haxe_CallStack.lastException = ex23;
			right11 = "exception: " + Std.string(((ex23) instanceof js__$Boot_HaxeError) ? ex23.val : ex23) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left11,right11)) {
			utest_Assert.pass("Complex.hx:187 [OK] ({\nComplex.minusUnit == new Complex({x: -1.\n, y: -1.});\n}) == true",{ lineNumber : 187, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.minusUnit == new Complex({x: -1.\n, y: -1.});\n}) == true --> Left side `" + Std.string(left11) + "` does not equal `" + Std.string(right11) + "`.",{ lineNumber : 187, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left12;
		try {
			var this24 = new geom_structure_Mat1x2(Infinity,Infinity);
			var a7 = this24;
			var this25 = new geom_structure_Mat1x2(Infinity,Infinity);
			var b7 = this25;
			var delta11 = 0.0000001;
			left12 = !(Math.abs(a7.x - b7.x) >= delta11 || Math.abs(a7.y - b7.y) >= delta11);
		} catch( ex24 ) {
			haxe_CallStack.lastException = ex24;
			left12 = "exception: " + Std.string(((ex24) instanceof js__$Boot_HaxeError) ? ex24.val : ex24) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right12;
		try {
			right12 = true;
		} catch( ex25 ) {
			haxe_CallStack.lastException = ex25;
			right12 = "exception: " + Std.string(((ex25) instanceof js__$Boot_HaxeError) ? ex25.val : ex25) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left12,right12)) {
			utest_Assert.pass("Complex.hx:200 [OK] ({\nComplex.unitInfinity == new Complex({x:Math.POSITIVE_INFINITY\n, y:Math.POSITIVE_INFINITY});\n}) == true",{ lineNumber : 200, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.unitInfinity == new Complex({x:Math.POSITIVE_INFINITY\n, y:Math.POSITIVE_INFINITY});\n}) == true --> Left side `" + Std.string(left12) + "` does not equal `" + Std.string(right12) + "`.",{ lineNumber : 200, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left13;
		try {
			var this26 = new geom_structure_Mat1x2(-Infinity,-Infinity);
			var a8 = this26;
			var this27 = new geom_structure_Mat1x2(-Infinity,-Infinity);
			var b8 = this27;
			var delta12 = 0.0000001;
			left13 = !(Math.abs(a8.x - b8.x) >= delta12 || Math.abs(a8.y - b8.y) >= delta12);
		} catch( ex26 ) {
			haxe_CallStack.lastException = ex26;
			left13 = "exception: " + Std.string(((ex26) instanceof js__$Boot_HaxeError) ? ex26.val : ex26) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right13;
		try {
			right13 = true;
		} catch( ex27 ) {
			haxe_CallStack.lastException = ex27;
			right13 = "exception: " + Std.string(((ex27) instanceof js__$Boot_HaxeError) ? ex27.val : ex27) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left13,right13)) {
			utest_Assert.pass("Complex.hx:213 [OK] ({\nComplex.unitMinusInfinity == new Complex({x:Math.NEGATIVE_INFINITY\n, y:Math.NEGATIVE_INFINITY});\n}) == true",{ lineNumber : 213, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.unitMinusInfinity == new Complex({x:Math.NEGATIVE_INFINITY\n, y:Math.NEGATIVE_INFINITY});\n}) == true --> Left side `" + Std.string(left13) + "` does not equal `" + Std.string(right13) + "`.",{ lineNumber : 213, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left14;
		try {
			var this28 = new geom_structure_Mat1x2(Infinity,0.);
			var a9 = this28;
			var this29 = new geom_structure_Mat1x2(Infinity,0.);
			var b9 = this29;
			var delta13 = 0.0000001;
			left14 = !(Math.abs(a9.x - b9.x) >= delta13 || Math.abs(a9.y - b9.y) >= delta13);
		} catch( ex28 ) {
			haxe_CallStack.lastException = ex28;
			left14 = "exception: " + Std.string(((ex28) instanceof js__$Boot_HaxeError) ? ex28.val : ex28) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right14;
		try {
			right14 = true;
		} catch( ex29 ) {
			haxe_CallStack.lastException = ex29;
			right14 = "exception: " + Std.string(((ex29) instanceof js__$Boot_HaxeError) ? ex29.val : ex29) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left14,right14)) {
			utest_Assert.pass("Complex.hx:225 [OK] ({\nComplex.realInfinity == new Complex({x:Math.POSITIVE_INFINITY\n, y:0.});\n}) == true",{ lineNumber : 225, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.realInfinity == new Complex({x:Math.POSITIVE_INFINITY\n, y:0.});\n}) == true --> Left side `" + Std.string(left14) + "` does not equal `" + Std.string(right14) + "`.",{ lineNumber : 225, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left15;
		try {
			var this30 = new geom_structure_Mat1x2(-Infinity,0.);
			var a10 = this30;
			var this31 = new geom_structure_Mat1x2(-Infinity,0.);
			var b10 = this31;
			var delta14 = 0.0000001;
			left15 = !(Math.abs(a10.x - b10.x) >= delta14 || Math.abs(a10.y - b10.y) >= delta14);
		} catch( ex30 ) {
			haxe_CallStack.lastException = ex30;
			left15 = "exception: " + Std.string(((ex30) instanceof js__$Boot_HaxeError) ? ex30.val : ex30) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right15;
		try {
			right15 = true;
		} catch( ex31 ) {
			haxe_CallStack.lastException = ex31;
			right15 = "exception: " + Std.string(((ex31) instanceof js__$Boot_HaxeError) ? ex31.val : ex31) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left15,right15)) {
			utest_Assert.pass("Complex.hx:238 [OK] ({\nComplex.minusInfinity == new Complex({x:Math.NEGATIVE_INFINITY\n, y:0.});\n}) == true",{ lineNumber : 238, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.minusInfinity == new Complex({x:Math.NEGATIVE_INFINITY\n, y:0.});\n}) == true --> Left side `" + Std.string(left15) + "` does not equal `" + Std.string(right15) + "`.",{ lineNumber : 238, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left16;
		try {
			var this32 = new geom_structure_Mat1x2(0.,Infinity);
			var a11 = this32;
			var this33 = new geom_structure_Mat1x2(0.,Infinity);
			var b11 = this33;
			var delta15 = 0.0000001;
			left16 = !(Math.abs(a11.x - b11.x) >= delta15 || Math.abs(a11.y - b11.y) >= delta15);
		} catch( ex32 ) {
			haxe_CallStack.lastException = ex32;
			left16 = "exception: " + Std.string(((ex32) instanceof js__$Boot_HaxeError) ? ex32.val : ex32) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right16;
		try {
			right16 = true;
		} catch( ex33 ) {
			haxe_CallStack.lastException = ex33;
			right16 = "exception: " + Std.string(((ex33) instanceof js__$Boot_HaxeError) ? ex33.val : ex33) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left16,right16)) {
			utest_Assert.pass("Complex.hx:251 [OK] ({\nComplex.iInfinity == new Complex({x:0.\n, y:Math.POSITIVE_INFINITY});\n}) == true",{ lineNumber : 251, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.iInfinity == new Complex({x:0.\n, y:Math.POSITIVE_INFINITY});\n}) == true --> Left side `" + Std.string(left16) + "` does not equal `" + Std.string(right16) + "`.",{ lineNumber : 251, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left17;
		try {
			var this34 = new geom_structure_Mat1x2(0.,-Infinity);
			var a12 = this34;
			var this35 = new geom_structure_Mat1x2(0.,-Infinity);
			var b12 = this35;
			var delta16 = 0.0000001;
			left17 = !(Math.abs(a12.x - b12.x) >= delta16 || Math.abs(a12.y - b12.y) >= delta16);
		} catch( ex34 ) {
			haxe_CallStack.lastException = ex34;
			left17 = "exception: " + Std.string(((ex34) instanceof js__$Boot_HaxeError) ? ex34.val : ex34) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right17;
		try {
			right17 = true;
		} catch( ex35 ) {
			haxe_CallStack.lastException = ex35;
			right17 = "exception: " + Std.string(((ex35) instanceof js__$Boot_HaxeError) ? ex35.val : ex35) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left17,right17)) {
			utest_Assert.pass("Complex.hx:264 [OK] ({\nComplex.iMinusInfinity == new Complex({x:0.\n, y:Math.NEGATIVE_INFINITY});\n}) == true",{ lineNumber : 264, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.iMinusInfinity == new Complex({x:0.\n, y:Math.NEGATIVE_INFINITY});\n}) == true --> Left side `" + Std.string(left17) + "` does not equal `" + Std.string(right17) + "`.",{ lineNumber : 264, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left18;
		try {
			var this36 = new geom_structure_Mat1x2(Infinity,-Infinity);
			var a13 = this36;
			var this37 = new geom_structure_Mat1x2(Infinity,-Infinity);
			var b13 = this37;
			var delta17 = 0.0000001;
			left18 = !(Math.abs(a13.x - b13.x) >= delta17 || Math.abs(a13.y - b13.y) >= delta17);
		} catch( ex36 ) {
			haxe_CallStack.lastException = ex36;
			left18 = "exception: " + Std.string(((ex36) instanceof js__$Boot_HaxeError) ? ex36.val : ex36) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right18;
		try {
			right18 = true;
		} catch( ex37 ) {
			haxe_CallStack.lastException = ex37;
			right18 = "exception: " + Std.string(((ex37) instanceof js__$Boot_HaxeError) ? ex37.val : ex37) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left18,right18)) {
			utest_Assert.pass("Complex.hx:277 [OK] ({\nComplex.posNegInfinity == new Complex({x:Math.POSITIVE_INFINITY\n, y:Math.NEGATIVE_INFINITY});\n}) == true",{ lineNumber : 277, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.posNegInfinity == new Complex({x:Math.POSITIVE_INFINITY\n, y:Math.NEGATIVE_INFINITY});\n}) == true --> Left side `" + Std.string(left18) + "` does not equal `" + Std.string(right18) + "`.",{ lineNumber : 277, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left19;
		try {
			var this38 = new geom_structure_Mat1x2(-Infinity,Infinity);
			var a14 = this38;
			var this39 = new geom_structure_Mat1x2(-Infinity,Infinity);
			var b14 = this39;
			var delta18 = 0.0000001;
			left19 = !(Math.abs(a14.x - b14.x) >= delta18 || Math.abs(a14.y - b14.y) >= delta18);
		} catch( ex38 ) {
			haxe_CallStack.lastException = ex38;
			left19 = "exception: " + Std.string(((ex38) instanceof js__$Boot_HaxeError) ? ex38.val : ex38) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right19;
		try {
			right19 = true;
		} catch( ex39 ) {
			haxe_CallStack.lastException = ex39;
			right19 = "exception: " + Std.string(((ex39) instanceof js__$Boot_HaxeError) ? ex39.val : ex39) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left19,right19)) {
			utest_Assert.pass("Complex.hx:290 [OK] ({\nComplex.negPosInfinity == new Complex({x:Math.NEGATIVE_INFINITY\n, y:Math.POSITIVE_INFINITY});\n}) == true",{ lineNumber : 290, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.negPosInfinity == new Complex({x:Math.NEGATIVE_INFINITY\n, y:Math.POSITIVE_INFINITY});\n}) == true --> Left side `" + Std.string(left19) + "` does not equal `" + Std.string(right19) + "`.",{ lineNumber : 290, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left20;
		try {
			var this40 = new geom_structure_Mat1x2(Math.PI,0.);
			var a15 = this40;
			var this41 = new geom_structure_Mat1x2(Math.PI,0.);
			var b15 = this41;
			var delta19 = 0.0000001;
			left20 = !(Math.abs(a15.x - b15.x) >= delta19 || Math.abs(a15.y - b15.y) >= delta19);
		} catch( ex40 ) {
			haxe_CallStack.lastException = ex40;
			left20 = "exception: " + Std.string(((ex40) instanceof js__$Boot_HaxeError) ? ex40.val : ex40) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right20;
		try {
			right20 = true;
		} catch( ex41 ) {
			haxe_CallStack.lastException = ex41;
			right20 = "exception: " + Std.string(((ex41) instanceof js__$Boot_HaxeError) ? ex41.val : ex41) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left20,right20)) {
			utest_Assert.pass("Complex.hx:303 [OK] ({\nComplex.realPi == new Complex({x:(Math.PI)\n, y:0.});\n}) == true",{ lineNumber : 303, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.realPi == new Complex({x:(Math.PI)\n, y:0.});\n}) == true --> Left side `" + Std.string(left20) + "` does not equal `" + Std.string(right20) + "`.",{ lineNumber : 303, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left21;
		try {
			var this42 = new geom_structure_Mat1x2(0.,Math.PI);
			var a16 = this42;
			var this43 = new geom_structure_Mat1x2(0.,Math.PI);
			var b16 = this43;
			var delta20 = 0.0000001;
			left21 = !(Math.abs(a16.x - b16.x) >= delta20 || Math.abs(a16.y - b16.y) >= delta20);
		} catch( ex42 ) {
			haxe_CallStack.lastException = ex42;
			left21 = "exception: " + Std.string(((ex42) instanceof js__$Boot_HaxeError) ? ex42.val : ex42) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right21;
		try {
			right21 = true;
		} catch( ex43 ) {
			haxe_CallStack.lastException = ex43;
			right21 = "exception: " + Std.string(((ex43) instanceof js__$Boot_HaxeError) ? ex43.val : ex43) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left21,right21)) {
			utest_Assert.pass("Complex.hx:316 [OK] ({\nComplex.iPi == new Complex({x:0.\n, y:(Math.PI)});\n}) == true",{ lineNumber : 316, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.iPi == new Complex({x:0.\n, y:(Math.PI)});\n}) == true --> Left side `" + Std.string(left21) + "` does not equal `" + Std.string(right21) + "`.",{ lineNumber : 316, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left22;
		try {
			var this44 = new geom_structure_Mat1x2(Math.PI,Math.PI);
			var a17 = this44;
			var this45 = new geom_structure_Mat1x2(Math.PI,Math.PI);
			var b17 = this45;
			var delta21 = 0.0000001;
			left22 = !(Math.abs(a17.x - b17.x) >= delta21 || Math.abs(a17.y - b17.y) >= delta21);
		} catch( ex44 ) {
			haxe_CallStack.lastException = ex44;
			left22 = "exception: " + Std.string(((ex44) instanceof js__$Boot_HaxeError) ? ex44.val : ex44) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right22;
		try {
			right22 = true;
		} catch( ex45 ) {
			haxe_CallStack.lastException = ex45;
			right22 = "exception: " + Std.string(((ex45) instanceof js__$Boot_HaxeError) ? ex45.val : ex45) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left22,right22)) {
			utest_Assert.pass("Complex.hx:329 [OK] ({\nComplex.unitPi == new Complex({x:(Math.PI)\n, y:(Math.PI)});\n}) == true",{ lineNumber : 329, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.unitPi == new Complex({x:(Math.PI)\n, y:(Math.PI)});\n}) == true --> Left side `" + Std.string(left22) + "` does not equal `" + Std.string(right22) + "`.",{ lineNumber : 329, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left23;
		try {
			var this46 = new geom_structure_Mat1x2(-Math.PI,-Math.PI);
			var a18 = this46;
			var this47 = new geom_structure_Mat1x2(-Math.PI,-Math.PI);
			var b18 = this47;
			var delta22 = 0.0000001;
			left23 = !(Math.abs(a18.x - b18.x) >= delta22 || Math.abs(a18.y - b18.y) >= delta22);
		} catch( ex46 ) {
			haxe_CallStack.lastException = ex46;
			left23 = "exception: " + Std.string(((ex46) instanceof js__$Boot_HaxeError) ? ex46.val : ex46) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right23;
		try {
			right23 = true;
		} catch( ex47 ) {
			haxe_CallStack.lastException = ex47;
			right23 = "exception: " + Std.string(((ex47) instanceof js__$Boot_HaxeError) ? ex47.val : ex47) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left23,right23)) {
			utest_Assert.pass("Complex.hx:342 [OK] ({\nComplex.unitMinusPi == new Complex({x:(-Math.PI)\n, y:(-Math.PI)});\n}) == true",{ lineNumber : 342, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.unitMinusPi == new Complex({x:(-Math.PI)\n, y:(-Math.PI)});\n}) == true --> Left side `" + Std.string(left23) + "` does not equal `" + Std.string(right23) + "`.",{ lineNumber : 342, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left24;
		try {
			var this48 = new geom_structure_Mat1x2(0.,-Math.PI);
			var a19 = this48;
			var this49 = new geom_structure_Mat1x2(0.,-Math.PI);
			var b19 = this49;
			var delta23 = 0.0000001;
			left24 = !(Math.abs(a19.x - b19.x) >= delta23 || Math.abs(a19.y - b19.y) >= delta23);
		} catch( ex48 ) {
			haxe_CallStack.lastException = ex48;
			left24 = "exception: " + Std.string(((ex48) instanceof js__$Boot_HaxeError) ? ex48.val : ex48) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right24;
		try {
			right24 = true;
		} catch( ex49 ) {
			haxe_CallStack.lastException = ex49;
			right24 = "exception: " + Std.string(((ex49) instanceof js__$Boot_HaxeError) ? ex49.val : ex49) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left24,right24)) {
			utest_Assert.pass("Complex.hx:355 [OK] ({\nComplex.iMinusPi == new Complex({x:0.\n, y:(-Math.PI)});\n}) == true",{ lineNumber : 355, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.iMinusPi == new Complex({x:0.\n, y:(-Math.PI)});\n}) == true --> Left side `" + Std.string(left24) + "` does not equal `" + Std.string(right24) + "`.",{ lineNumber : 355, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left25;
		try {
			var this50 = new geom_structure_Mat1x2(-Math.PI,0.);
			var a20 = this50;
			var this51 = new geom_structure_Mat1x2(-Math.PI,0.);
			var b20 = this51;
			var delta24 = 0.0000001;
			left25 = !(Math.abs(a20.x - b20.x) >= delta24 || Math.abs(a20.y - b20.y) >= delta24);
		} catch( ex50 ) {
			haxe_CallStack.lastException = ex50;
			left25 = "exception: " + Std.string(((ex50) instanceof js__$Boot_HaxeError) ? ex50.val : ex50) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right25;
		try {
			right25 = true;
		} catch( ex51 ) {
			haxe_CallStack.lastException = ex51;
			right25 = "exception: " + Std.string(((ex51) instanceof js__$Boot_HaxeError) ? ex51.val : ex51) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left25,right25)) {
			utest_Assert.pass("Complex.hx:368 [OK] ({\nComplex.minusPi == new Complex({x:(-Math.PI)\n, y:0.});\n}) == true",{ lineNumber : 368, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.minusPi == new Complex({x:(-Math.PI)\n, y:0.});\n}) == true --> Left side `" + Std.string(left25) + "` does not equal `" + Std.string(right25) + "`.",{ lineNumber : 368, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left26;
		try {
			var this52 = new geom_structure_Mat1x2(Math.PI,-Math.PI);
			var a21 = this52;
			var this53 = new geom_structure_Mat1x2(Math.PI,-Math.PI);
			var b21 = this53;
			var delta25 = 0.0000001;
			left26 = !(Math.abs(a21.x - b21.x) >= delta25 || Math.abs(a21.y - b21.y) >= delta25);
		} catch( ex52 ) {
			haxe_CallStack.lastException = ex52;
			left26 = "exception: " + Std.string(((ex52) instanceof js__$Boot_HaxeError) ? ex52.val : ex52) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right26;
		try {
			right26 = true;
		} catch( ex53 ) {
			haxe_CallStack.lastException = ex53;
			right26 = "exception: " + Std.string(((ex53) instanceof js__$Boot_HaxeError) ? ex53.val : ex53) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left26,right26)) {
			utest_Assert.pass("Complex.hx:381 [OK] ({\nComplex.posNegPi == new Complex({x:(Math.PI)\n, y:(-Math.PI)});\n}) == true",{ lineNumber : 381, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.posNegPi == new Complex({x:(Math.PI)\n, y:(-Math.PI)});\n}) == true --> Left side `" + Std.string(left26) + "` does not equal `" + Std.string(right26) + "`.",{ lineNumber : 381, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left27;
		try {
			var this54 = new geom_structure_Mat1x2(-Math.PI,Math.PI);
			var a22 = this54;
			var this55 = new geom_structure_Mat1x2(-Math.PI,Math.PI);
			var b22 = this55;
			var delta26 = 0.0000001;
			left27 = !(Math.abs(a22.x - b22.x) >= delta26 || Math.abs(a22.y - b22.y) >= delta26);
		} catch( ex54 ) {
			haxe_CallStack.lastException = ex54;
			left27 = "exception: " + Std.string(((ex54) instanceof js__$Boot_HaxeError) ? ex54.val : ex54) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right27;
		try {
			right27 = true;
		} catch( ex55 ) {
			haxe_CallStack.lastException = ex55;
			right27 = "exception: " + Std.string(((ex55) instanceof js__$Boot_HaxeError) ? ex55.val : ex55) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left27,right27)) {
			utest_Assert.pass("Complex.hx:394 [OK] ({\nComplex.negPosPi == new Complex({x:(-Math.PI)\n, y:(Math.PI)});\n}) == true",{ lineNumber : 394, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.negPosPi == new Complex({x:(-Math.PI)\n, y:(Math.PI)});\n}) == true --> Left side `" + Std.string(left27) + "` does not equal `" + Std.string(right27) + "`.",{ lineNumber : 394, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left28;
		try {
			var this56 = new geom_structure_Mat1x2(Math.PI * 2,0.);
			var a23 = this56;
			var this57 = new geom_structure_Mat1x2(Math.PI * 2,0.);
			var b23 = this57;
			var delta27 = 0.0000001;
			left28 = !(Math.abs(a23.x - b23.x) >= delta27 || Math.abs(a23.y - b23.y) >= delta27);
		} catch( ex56 ) {
			haxe_CallStack.lastException = ex56;
			left28 = "exception: " + Std.string(((ex56) instanceof js__$Boot_HaxeError) ? ex56.val : ex56) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right28;
		try {
			right28 = true;
		} catch( ex57 ) {
			haxe_CallStack.lastException = ex57;
			right28 = "exception: " + Std.string(((ex57) instanceof js__$Boot_HaxeError) ? ex57.val : ex57) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left28,right28)) {
			utest_Assert.pass("Complex.hx:407 [OK] ({\nComplex.realTau == new Complex({x:(Math.PI*2)\n, y:0.});\n}) == true",{ lineNumber : 407, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.realTau == new Complex({x:(Math.PI*2)\n, y:0.});\n}) == true --> Left side `" + Std.string(left28) + "` does not equal `" + Std.string(right28) + "`.",{ lineNumber : 407, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left29;
		try {
			var this58 = new geom_structure_Mat1x2(0.,Math.PI * 2);
			var a24 = this58;
			var this59 = new geom_structure_Mat1x2(0.,Math.PI * 2);
			var b24 = this59;
			var delta28 = 0.0000001;
			left29 = !(Math.abs(a24.x - b24.x) >= delta28 || Math.abs(a24.y - b24.y) >= delta28);
		} catch( ex58 ) {
			haxe_CallStack.lastException = ex58;
			left29 = "exception: " + Std.string(((ex58) instanceof js__$Boot_HaxeError) ? ex58.val : ex58) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right29;
		try {
			right29 = true;
		} catch( ex59 ) {
			haxe_CallStack.lastException = ex59;
			right29 = "exception: " + Std.string(((ex59) instanceof js__$Boot_HaxeError) ? ex59.val : ex59) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left29,right29)) {
			utest_Assert.pass("Complex.hx:420 [OK] ({\nComplex.iTau == new Complex({x:0.\n, y:(Math.PI*2)});\n}) == true",{ lineNumber : 420, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.iTau == new Complex({x:0.\n, y:(Math.PI*2)});\n}) == true --> Left side `" + Std.string(left29) + "` does not equal `" + Std.string(right29) + "`.",{ lineNumber : 420, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left30;
		try {
			var this60 = new geom_structure_Mat1x2(Math.PI * 2,Math.PI * 2);
			var a25 = this60;
			var this61 = new geom_structure_Mat1x2(Math.PI * 2,Math.PI * 2);
			var b25 = this61;
			var delta29 = 0.0000001;
			left30 = !(Math.abs(a25.x - b25.x) >= delta29 || Math.abs(a25.y - b25.y) >= delta29);
		} catch( ex60 ) {
			haxe_CallStack.lastException = ex60;
			left30 = "exception: " + Std.string(((ex60) instanceof js__$Boot_HaxeError) ? ex60.val : ex60) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right30;
		try {
			right30 = true;
		} catch( ex61 ) {
			haxe_CallStack.lastException = ex61;
			right30 = "exception: " + Std.string(((ex61) instanceof js__$Boot_HaxeError) ? ex61.val : ex61) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left30,right30)) {
			utest_Assert.pass("Complex.hx:433 [OK] ({\nComplex.unitTau == new Complex({x:(Math.PI*2)\n, y:(Math.PI*2)});\n}) == true",{ lineNumber : 433, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.unitTau == new Complex({x:(Math.PI*2)\n, y:(Math.PI*2)});\n}) == true --> Left side `" + Std.string(left30) + "` does not equal `" + Std.string(right30) + "`.",{ lineNumber : 433, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left31;
		try {
			var this62 = new geom_structure_Mat1x2(-Math.PI * 2,-Math.PI * 2);
			var a26 = this62;
			var this63 = new geom_structure_Mat1x2(-Math.PI * 2,-Math.PI * 2);
			var b26 = this63;
			var delta30 = 0.0000001;
			left31 = !(Math.abs(a26.x - b26.x) >= delta30 || Math.abs(a26.y - b26.y) >= delta30);
		} catch( ex62 ) {
			haxe_CallStack.lastException = ex62;
			left31 = "exception: " + Std.string(((ex62) instanceof js__$Boot_HaxeError) ? ex62.val : ex62) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right31;
		try {
			right31 = true;
		} catch( ex63 ) {
			haxe_CallStack.lastException = ex63;
			right31 = "exception: " + Std.string(((ex63) instanceof js__$Boot_HaxeError) ? ex63.val : ex63) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left31,right31)) {
			utest_Assert.pass("Complex.hx:446 [OK] ({\nComplex.unitMinusTau == new Complex({x:(-Math.PI*2)\n, y:(-Math.PI*2)});\n}) == true",{ lineNumber : 446, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.unitMinusTau == new Complex({x:(-Math.PI*2)\n, y:(-Math.PI*2)});\n}) == true --> Left side `" + Std.string(left31) + "` does not equal `" + Std.string(right31) + "`.",{ lineNumber : 446, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left32;
		try {
			var this64 = new geom_structure_Mat1x2(0.,-Math.PI * 2);
			var a27 = this64;
			var this65 = new geom_structure_Mat1x2(0.,-Math.PI * 2);
			var b27 = this65;
			var delta31 = 0.0000001;
			left32 = !(Math.abs(a27.x - b27.x) >= delta31 || Math.abs(a27.y - b27.y) >= delta31);
		} catch( ex64 ) {
			haxe_CallStack.lastException = ex64;
			left32 = "exception: " + Std.string(((ex64) instanceof js__$Boot_HaxeError) ? ex64.val : ex64) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right32;
		try {
			right32 = true;
		} catch( ex65 ) {
			haxe_CallStack.lastException = ex65;
			right32 = "exception: " + Std.string(((ex65) instanceof js__$Boot_HaxeError) ? ex65.val : ex65) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left32,right32)) {
			utest_Assert.pass("Complex.hx:459 [OK] ({\nComplex.iMinusTau == new Complex({x:0.\n, y:(-Math.PI*2)});\n}) == true",{ lineNumber : 459, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.iMinusTau == new Complex({x:0.\n, y:(-Math.PI*2)});\n}) == true --> Left side `" + Std.string(left32) + "` does not equal `" + Std.string(right32) + "`.",{ lineNumber : 459, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left33;
		try {
			var this66 = new geom_structure_Mat1x2(-Math.PI * 2,0.);
			var a28 = this66;
			var this67 = new geom_structure_Mat1x2(-Math.PI * 2,0.);
			var b28 = this67;
			var delta32 = 0.0000001;
			left33 = !(Math.abs(a28.x - b28.x) >= delta32 || Math.abs(a28.y - b28.y) >= delta32);
		} catch( ex66 ) {
			haxe_CallStack.lastException = ex66;
			left33 = "exception: " + Std.string(((ex66) instanceof js__$Boot_HaxeError) ? ex66.val : ex66) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right33;
		try {
			right33 = true;
		} catch( ex67 ) {
			haxe_CallStack.lastException = ex67;
			right33 = "exception: " + Std.string(((ex67) instanceof js__$Boot_HaxeError) ? ex67.val : ex67) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left33,right33)) {
			utest_Assert.pass("Complex.hx:472 [OK] ({\nComplex.minusTau == new Complex({x:(-Math.PI*2)\n, y:0.});\n}) == true",{ lineNumber : 472, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.minusTau == new Complex({x:(-Math.PI*2)\n, y:0.});\n}) == true --> Left side `" + Std.string(left33) + "` does not equal `" + Std.string(right33) + "`.",{ lineNumber : 472, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left34;
		try {
			var this68 = new geom_structure_Mat1x2(Math.PI * 2,-Math.PI * 2);
			var a29 = this68;
			var this69 = new geom_structure_Mat1x2(Math.PI * 2,-Math.PI * 2);
			var b29 = this69;
			var delta33 = 0.0000001;
			left34 = !(Math.abs(a29.x - b29.x) >= delta33 || Math.abs(a29.y - b29.y) >= delta33);
		} catch( ex68 ) {
			haxe_CallStack.lastException = ex68;
			left34 = "exception: " + Std.string(((ex68) instanceof js__$Boot_HaxeError) ? ex68.val : ex68) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right34;
		try {
			right34 = true;
		} catch( ex69 ) {
			haxe_CallStack.lastException = ex69;
			right34 = "exception: " + Std.string(((ex69) instanceof js__$Boot_HaxeError) ? ex69.val : ex69) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left34,right34)) {
			utest_Assert.pass("Complex.hx:485 [OK] ({\nComplex.posNegTau == new Complex({x:(Math.PI*2)\n, y:(-Math.PI*2)});\n}) == true",{ lineNumber : 485, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.posNegTau == new Complex({x:(Math.PI*2)\n, y:(-Math.PI*2)});\n}) == true --> Left side `" + Std.string(left34) + "` does not equal `" + Std.string(right34) + "`.",{ lineNumber : 485, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left35;
		try {
			var this70 = new geom_structure_Mat1x2(-Math.PI * 2,Math.PI * 2);
			var a30 = this70;
			var this71 = new geom_structure_Mat1x2(-Math.PI * 2,Math.PI * 2);
			var b30 = this71;
			var delta34 = 0.0000001;
			left35 = !(Math.abs(a30.x - b30.x) >= delta34 || Math.abs(a30.y - b30.y) >= delta34);
		} catch( ex70 ) {
			haxe_CallStack.lastException = ex70;
			left35 = "exception: " + Std.string(((ex70) instanceof js__$Boot_HaxeError) ? ex70.val : ex70) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right35;
		try {
			right35 = true;
		} catch( ex71 ) {
			haxe_CallStack.lastException = ex71;
			right35 = "exception: " + Std.string(((ex71) instanceof js__$Boot_HaxeError) ? ex71.val : ex71) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left35,right35)) {
			utest_Assert.pass("Complex.hx:498 [OK] ({\nComplex.negPosTau == new Complex({x:(-Math.PI*2)\n, y:(Math.PI*2)});\n}) == true",{ lineNumber : 498, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nComplex.negPosTau == new Complex({x:(-Math.PI*2)\n, y:(Math.PI*2)});\n}) == true --> Left side `" + Std.string(left35) + "` does not equal `" + Std.string(right35) + "`.",{ lineNumber : 498, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left36;
		try {
			var this72 = new geom_structure_Mat1x2(1.,2.);
			var a31 = this72;
			left36 = a31.y == 2.;
		} catch( ex72 ) {
			haxe_CallStack.lastException = ex72;
			left36 = "exception: " + Std.string(((ex72) instanceof js__$Boot_HaxeError) ? ex72.val : ex72) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right36;
		try {
			right36 = true;
		} catch( ex73 ) {
			haxe_CallStack.lastException = ex73;
			right36 = "exception: " + Std.string(((ex73) instanceof js__$Boot_HaxeError) ? ex73.val : ex73) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left36,right36)) {
			utest_Assert.pass("Complex.hx:511 [OK] ({\nvar a = new Complex({ x: 1., y: 2. });\na.i == 2.; }) == true",{ lineNumber : 511, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 1., y: 2. });\na.i == 2.; }) == true --> Left side `" + Std.string(left36) + "` does not equal `" + Std.string(right36) + "`.",{ lineNumber : 511, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left37;
		try {
			var this73 = new geom_structure_Mat1x2(1.,2.);
			var a32 = this73;
			left37 = a32.x == 1.;
		} catch( ex74 ) {
			haxe_CallStack.lastException = ex74;
			left37 = "exception: " + Std.string(((ex74) instanceof js__$Boot_HaxeError) ? ex74.val : ex74) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right37;
		try {
			right37 = true;
		} catch( ex75 ) {
			haxe_CallStack.lastException = ex75;
			right37 = "exception: " + Std.string(((ex75) instanceof js__$Boot_HaxeError) ? ex75.val : ex75) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left37,right37)) {
			utest_Assert.pass("Complex.hx:528 [OK] ({\nvar a = new Complex({ x: 1., y: 2. });\na.real == 1.; }) == true",{ lineNumber : 528, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 1., y: 2. });\na.real == 1.; }) == true --> Left side `" + Std.string(left37) + "` does not equal `" + Std.string(right37) + "`.",{ lineNumber : 528, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left38;
		try {
			var this74 = new geom_structure_Mat1x2(1.,2.);
			var a33 = this74;
			var this75 = new geom_structure_Mat1x2(a33.x,a33.y);
			var a34 = this75;
			var delta35 = 0.0000001;
			left38 = !(Math.abs(a34.x - a33.x) >= delta35 || Math.abs(a34.y - a33.y) >= delta35);
		} catch( ex76 ) {
			haxe_CallStack.lastException = ex76;
			left38 = "exception: " + Std.string(((ex76) instanceof js__$Boot_HaxeError) ? ex76.val : ex76) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right38;
		try {
			right38 = true;
		} catch( ex77 ) {
			haxe_CallStack.lastException = ex77;
			right38 = "exception: " + Std.string(((ex77) instanceof js__$Boot_HaxeError) ? ex77.val : ex77) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left38,right38)) {
			utest_Assert.pass("Complex.hx:543 [OK] ({\nvar a = new Complex({ x: 1., y: 2. });\na.clone() == a; }) == true",{ lineNumber : 543, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 1., y: 2. });\na.clone() == a; }) == true --> Left side `" + Std.string(left38) + "` does not equal `" + Std.string(right38) + "`.",{ lineNumber : 543, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left39;
		try {
			var this76 = new geom_structure_Mat1x2(1.,2.);
			var a35 = this76;
			var this77 = new geom_structure_Mat1x2(2.,1.);
			var b31 = this77;
			var this78 = new geom_structure_Mat1x2(a35.y,a35.x);
			var a36 = this78;
			var delta36 = 0.0000001;
			left39 = !(Math.abs(a36.x - b31.x) >= delta36 || Math.abs(a36.y - b31.y) >= delta36);
		} catch( ex78 ) {
			haxe_CallStack.lastException = ex78;
			left39 = "exception: " + Std.string(((ex78) instanceof js__$Boot_HaxeError) ? ex78.val : ex78) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right39;
		try {
			right39 = true;
		} catch( ex79 ) {
			haxe_CallStack.lastException = ex79;
			right39 = "exception: " + Std.string(((ex79) instanceof js__$Boot_HaxeError) ? ex79.val : ex79) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left39,right39)) {
			utest_Assert.pass("Complex.hx:554 [OK] ({\nvar a = new Complex({ x: 1., y: 2. });\nvar b = new Complex({ x: 2., y: 1. });\na.swap() == b; }) == true",{ lineNumber : 554, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 1., y: 2. });\nvar b = new Complex({ x: 2., y: 1. });\na.swap() == b; }) == true --> Left side `" + Std.string(left39) + "` does not equal `" + Std.string(right39) + "`.",{ lineNumber : 554, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left40;
		try {
			var this79 = new geom_structure_Mat1x2(1.,2.);
			var a37 = this79;
			var this80 = new geom_structure_Mat1x2(1.,2.);
			var b32 = this80;
			var delta37 = 0.0000001;
			left40 = !(Math.abs(a37.x - b32.x) >= delta37 || Math.abs(a37.y - b32.y) >= delta37);
		} catch( ex80 ) {
			haxe_CallStack.lastException = ex80;
			left40 = "exception: " + Std.string(((ex80) instanceof js__$Boot_HaxeError) ? ex80.val : ex80) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right40;
		try {
			right40 = true;
		} catch( ex81 ) {
			haxe_CallStack.lastException = ex81;
			right40 = "exception: " + Std.string(((ex81) instanceof js__$Boot_HaxeError) ? ex81.val : ex81) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left40,right40)) {
			utest_Assert.pass("Complex.hx:566 [OK] ({\nvar a = new Complex({ x: 1., y: 2. });\nvar b = new Complex({ x: 1., y: 2. });\na == b; }) == true",{ lineNumber : 566, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 1., y: 2. });\nvar b = new Complex({ x: 1., y: 2. });\na == b; }) == true --> Left side `" + Std.string(left40) + "` does not equal `" + Std.string(right40) + "`.",{ lineNumber : 566, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left41;
		try {
			var this81 = new geom_structure_Mat1x2(1.,2.);
			var a38 = this81;
			var this82 = new geom_structure_Mat1x2(1.,1.);
			var b33 = this82;
			var delta38 = 0.0000001;
			left41 = !(!(Math.abs(a38.x - b33.x) >= delta38 || Math.abs(a38.y - b33.y) >= delta38));
		} catch( ex82 ) {
			haxe_CallStack.lastException = ex82;
			left41 = "exception: " + Std.string(((ex82) instanceof js__$Boot_HaxeError) ? ex82.val : ex82) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right41;
		try {
			right41 = true;
		} catch( ex83 ) {
			haxe_CallStack.lastException = ex83;
			right41 = "exception: " + Std.string(((ex83) instanceof js__$Boot_HaxeError) ? ex83.val : ex83) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left41,right41)) {
			utest_Assert.pass("Complex.hx:582 [OK] ({\nvar a = new Complex({ x: 1., y: 2. });\nvar b = new Complex({ x: 1., y: 1. });\na != b; }) == true",{ lineNumber : 582, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 1., y: 2. });\nvar b = new Complex({ x: 1., y: 1. });\na != b; }) == true --> Left side `" + Std.string(left41) + "` does not equal `" + Std.string(right41) + "`.",{ lineNumber : 582, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left42;
		try {
			var this83 = new geom_structure_Mat1x2(1.,1.);
			var a39 = this83;
			var this84 = new geom_structure_Mat1x2(a39.x + a39.x,a39.y + a39.y);
			var a40 = this84;
			var this85 = new geom_structure_Mat1x2(2.,2.);
			var b34 = this85;
			var delta39 = 0.0000001;
			left42 = !(Math.abs(a40.x - b34.x) >= delta39 || Math.abs(a40.y - b34.y) >= delta39);
		} catch( ex84 ) {
			haxe_CallStack.lastException = ex84;
			left42 = "exception: " + Std.string(((ex84) instanceof js__$Boot_HaxeError) ? ex84.val : ex84) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right42;
		try {
			right42 = true;
		} catch( ex85 ) {
			haxe_CallStack.lastException = ex85;
			right42 = "exception: " + Std.string(((ex85) instanceof js__$Boot_HaxeError) ? ex85.val : ex85) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left42,right42)) {
			utest_Assert.pass("Complex.hx:594 [OK] ({\nvar a = Complex.unit;\na + a == new Complex({ x: 2., y: 2. });\n}) == true",{ lineNumber : 594, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Complex.unit;\na + a == new Complex({ x: 2., y: 2. });\n}) == true --> Left side `" + Std.string(left42) + "` does not equal `" + Std.string(right42) + "`.",{ lineNumber : 594, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left43;
		try {
			var this86 = new geom_structure_Mat1x2(1.,1.);
			var a41 = this86;
			var this87 = new geom_structure_Mat1x2(a41.x - a41.x,a41.y - a41.y);
			var a42 = this87;
			var this88 = new geom_structure_Mat1x2(0.,0.);
			var b35 = this88;
			var delta40 = 0.0000001;
			left43 = !(Math.abs(a42.x - b35.x) >= delta40 || Math.abs(a42.y - b35.y) >= delta40);
		} catch( ex86 ) {
			haxe_CallStack.lastException = ex86;
			left43 = "exception: " + Std.string(((ex86) instanceof js__$Boot_HaxeError) ? ex86.val : ex86) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right43;
		try {
			right43 = true;
		} catch( ex87 ) {
			haxe_CallStack.lastException = ex87;
			right43 = "exception: " + Std.string(((ex87) instanceof js__$Boot_HaxeError) ? ex87.val : ex87) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left43,right43)) {
			utest_Assert.pass("Complex.hx:606 [OK] ({\nvar a = Complex.unit;\na - a == Complex.zero;\n}) == true",{ lineNumber : 606, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Complex.unit;\na - a == Complex.zero;\n}) == true --> Left side `" + Std.string(left43) + "` does not equal `" + Std.string(right43) + "`.",{ lineNumber : 606, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left44;
		try {
			var a43 = 10.;
			var this89 = new geom_structure_Mat1x2(1.,7.);
			var b36 = this89;
			var this90 = new geom_structure_Mat1x2(a43 * b36.x,a43 * b36.y);
			var a44 = this90;
			var this91 = new geom_structure_Mat1x2(10,70.);
			var b37 = this91;
			var delta41 = 0.0000001;
			left44 = !(Math.abs(a44.x - b37.x) >= delta41 || Math.abs(a44.y - b37.y) >= delta41);
		} catch( ex88 ) {
			haxe_CallStack.lastException = ex88;
			left44 = "exception: " + Std.string(((ex88) instanceof js__$Boot_HaxeError) ? ex88.val : ex88) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right44;
		try {
			right44 = true;
		} catch( ex89 ) {
			haxe_CallStack.lastException = ex89;
			right44 = "exception: " + Std.string(((ex89) instanceof js__$Boot_HaxeError) ? ex89.val : ex89) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left44,right44)) {
			utest_Assert.pass("Complex.hx:617 [OK] ({\nvar a = 10.;\nvar b = new Complex({ x: 1., y: 7. });\na * b == new Complex({ x: 10, y: 70. });\n}) == true",{ lineNumber : 617, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = 10.;\nvar b = new Complex({ x: 1., y: 7. });\na * b == new Complex({ x: 10, y: 70. });\n}) == true --> Left side `" + Std.string(left44) + "` does not equal `" + Std.string(right44) + "`.",{ lineNumber : 617, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left45;
		try {
			var this92 = new geom_structure_Mat1x2(3.,2.);
			var a45 = this92;
			var this93 = new geom_structure_Mat1x2(1.,7.);
			var b38 = this93;
			var this94 = new geom_structure_Mat1x2(a45.x * b38.x - a45.y * b38.y,a45.x * b38.y + a45.y * b38.x);
			var a46 = this94;
			var this95 = new geom_structure_Mat1x2(-11.,23.);
			var b39 = this95;
			var delta42 = 0.0000001;
			left45 = !(Math.abs(a46.x - b39.x) >= delta42 || Math.abs(a46.y - b39.y) >= delta42);
		} catch( ex90 ) {
			haxe_CallStack.lastException = ex90;
			left45 = "exception: " + Std.string(((ex90) instanceof js__$Boot_HaxeError) ? ex90.val : ex90) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right45;
		try {
			right45 = true;
		} catch( ex91 ) {
			haxe_CallStack.lastException = ex91;
			right45 = "exception: " + Std.string(((ex91) instanceof js__$Boot_HaxeError) ? ex91.val : ex91) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left45,right45)) {
			utest_Assert.pass("Complex.hx:630 [OK] ({\nvar a = new Complex({ x: 3., y: 2. });\nvar b = new Complex({ x: 1., y: 7. });\na * b == new Complex({ x: -11., y: 23. });\n}) == true",{ lineNumber : 630, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 3., y: 2. });\nvar b = new Complex({ x: 1., y: 7. });\na * b == new Complex({ x: -11., y: 23. });\n}) == true --> Left side `" + Std.string(left45) + "` does not equal `" + Std.string(right45) + "`.",{ lineNumber : 630, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left46;
		try {
			var this96 = new geom_structure_Mat1x2(3.,2.);
			var a47 = this96;
			left46 = a47.x + a47.y == 5;
		} catch( ex92 ) {
			haxe_CallStack.lastException = ex92;
			left46 = "exception: " + Std.string(((ex92) instanceof js__$Boot_HaxeError) ? ex92.val : ex92) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right46;
		try {
			right46 = true;
		} catch( ex93 ) {
			haxe_CallStack.lastException = ex93;
			right46 = "exception: " + Std.string(((ex93) instanceof js__$Boot_HaxeError) ? ex93.val : ex93) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left46,right46)) {
			utest_Assert.pass("Complex.hx:643 [OK] ({\nvar a = new Complex({ x: 3., y: 2. });\na.addExponents() == 5;\n}) == true",{ lineNumber : 643, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 3., y: 2. });\na.addExponents() == 5;\n}) == true --> Left side `" + Std.string(left46) + "` does not equal `" + Std.string(right46) + "`.",{ lineNumber : 643, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left47;
		try {
			var this97 = new geom_structure_Mat1x2(1.,2.);
			var a48 = this97;
			var this98 = new geom_structure_Mat1x2(a48.x,-a48.y);
			var b40 = this98;
			var this99 = new geom_structure_Mat1x2(1.,-2.);
			var b41 = this99;
			var delta43 = 0.0000001;
			left47 = !(Math.abs(b40.x - b41.x) >= delta43 || Math.abs(b40.y - b41.y) >= delta43);
		} catch( ex94 ) {
			haxe_CallStack.lastException = ex94;
			left47 = "exception: " + Std.string(((ex94) instanceof js__$Boot_HaxeError) ? ex94.val : ex94) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right47;
		try {
			right47 = true;
		} catch( ex95 ) {
			haxe_CallStack.lastException = ex95;
			right47 = "exception: " + Std.string(((ex95) instanceof js__$Boot_HaxeError) ? ex95.val : ex95) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left47,right47)) {
			utest_Assert.pass("Complex.hx:655 [OK] ({\nvar a = new Complex({ x: 1., y: 2. });\nvar b = ~a;\nb == new Complex({ x: 1., y: -2. }); }) == true",{ lineNumber : 655, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 1., y: 2. });\nvar b = ~a;\nb == new Complex({ x: 1., y: -2. }); }) == true --> Left side `" + Std.string(left47) + "` does not equal `" + Std.string(right47) + "`.",{ lineNumber : 655, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left48;
		try {
			var this100 = new geom_structure_Mat1x2(1.,-3.);
			var a49 = this100;
			var this101 = new geom_structure_Mat1x2(1.,2.);
			var b42 = this101;
			var this102 = new geom_structure_Mat1x2(b42.x,-b42.y);
			var conj = this102;
			var this103 = new geom_structure_Mat1x2(a49.x * conj.x - a49.y * conj.y,a49.x * conj.y + a49.y * conj.x);
			var numr = this103;
			var this104 = new geom_structure_Mat1x2(b42.x * conj.x - b42.y * conj.y,b42.x * conj.y + b42.y * conj.x);
			var demr = this104;
			var dval = demr.x + demr.y;
			var this105 = new geom_structure_Mat1x2(numr.x / dval,numr.y / dval);
			var a50 = this105;
			var this106 = new geom_structure_Mat1x2(-1,-1);
			var b43 = this106;
			var delta44 = 0.0000001;
			left48 = !(Math.abs(a50.x - b43.x) >= delta44 || Math.abs(a50.y - b43.y) >= delta44);
		} catch( ex96 ) {
			haxe_CallStack.lastException = ex96;
			left48 = "exception: " + Std.string(((ex96) instanceof js__$Boot_HaxeError) ? ex96.val : ex96) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right48;
		try {
			right48 = true;
		} catch( ex97 ) {
			haxe_CallStack.lastException = ex97;
			right48 = "exception: " + Std.string(((ex97) instanceof js__$Boot_HaxeError) ? ex97.val : ex97) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left48,right48)) {
			utest_Assert.pass("Complex.hx:667 [OK] ({\nvar a = new Complex({ x: 1., y: -3. });\nvar b = new Complex({ x: 1., y: 2. });\na / b == new Complex({ x:-1, y: -1 });\n}) == true",{ lineNumber : 667, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 1., y: -3. });\nvar b = new Complex({ x: 1., y: 2. });\na / b == new Complex({ x:-1, y: -1 });\n}) == true --> Left side `" + Std.string(left48) + "` does not equal `" + Std.string(right48) + "`.",{ lineNumber : 667, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left49;
		try {
			var this107 = new geom_structure_Mat1x2(1.,2.);
			var a51 = this107;
			var this108 = new geom_structure_Mat1x2(-a51.x,-a51.y);
			var b44 = this108;
			var this109 = new geom_structure_Mat1x2(-1.,-2.);
			var b45 = this109;
			var delta45 = 0.0000001;
			left49 = !(Math.abs(b44.x - b45.x) >= delta45 || Math.abs(b44.y - b45.y) >= delta45);
		} catch( ex98 ) {
			haxe_CallStack.lastException = ex98;
			left49 = "exception: " + Std.string(((ex98) instanceof js__$Boot_HaxeError) ? ex98.val : ex98) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right49;
		try {
			right49 = true;
		} catch( ex99 ) {
			haxe_CallStack.lastException = ex99;
			right49 = "exception: " + Std.string(((ex99) instanceof js__$Boot_HaxeError) ? ex99.val : ex99) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left49,right49)) {
			utest_Assert.pass("Complex.hx:699 [OK] ({\nvar a = new Complex({ x: 1., y: 2. });\nvar b = -a;\nb == new Complex({ x: -1., y: -2. }); }) == true",{ lineNumber : 699, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 1., y: 2. });\nvar b = -a;\nb == new Complex({ x: -1., y: -2. }); }) == true --> Left side `" + Std.string(left49) + "` does not equal `" + Std.string(right49) + "`.",{ lineNumber : 699, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left50;
		try {
			var this110 = new geom_structure_Mat1x2(2.,4.);
			var a52 = this110;
			left50 = a52.x * a52.x + a52.y * a52.y == 20.;
		} catch( ex100 ) {
			haxe_CallStack.lastException = ex100;
			left50 = "exception: " + Std.string(((ex100) instanceof js__$Boot_HaxeError) ? ex100.val : ex100) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right50;
		try {
			right50 = true;
		} catch( ex101 ) {
			haxe_CallStack.lastException = ex101;
			right50 = "exception: " + Std.string(((ex101) instanceof js__$Boot_HaxeError) ? ex101.val : ex101) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left50,right50)) {
			utest_Assert.pass("Complex.hx:711 [OK] ({\nvar a = new Complex({ x: 2., y: 4. });\na.magnitudeSquared() == 4. + 16.; }) == true",{ lineNumber : 711, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 2., y: 4. });\na.magnitudeSquared() == 4. + 16.; }) == true --> Left side `" + Std.string(left50) + "` does not equal `" + Std.string(right50) + "`.",{ lineNumber : 711, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left51;
		try {
			var this111 = new geom_structure_Mat1x2(3,4);
			var a53 = this111;
			left51 = Math.sqrt(a53.x * a53.x + a53.y * a53.y) == 5.;
		} catch( ex102 ) {
			haxe_CallStack.lastException = ex102;
			left51 = "exception: " + Std.string(((ex102) instanceof js__$Boot_HaxeError) ? ex102.val : ex102) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right51;
		try {
			right51 = true;
		} catch( ex103 ) {
			haxe_CallStack.lastException = ex103;
			right51 = "exception: " + Std.string(((ex103) instanceof js__$Boot_HaxeError) ? ex103.val : ex103) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left51,right51)) {
			utest_Assert.pass("Complex.hx:723 [OK] ({\nvar a = new Complex({ x: 3, y: 4});\na.magnitude == 5.; }) == true",{ lineNumber : 723, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 3, y: 4});\na.magnitude == 5.; }) == true --> Left side `" + Std.string(left51) + "` does not equal `" + Std.string(right51) + "`.",{ lineNumber : 723, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left52;
		try {
			var this112 = new geom_structure_Mat1x2(1.,0.);
			var a54 = this112;
			left52 = a54.y == 0 == true;
		} catch( ex104 ) {
			haxe_CallStack.lastException = ex104;
			left52 = "exception: " + Std.string(((ex104) instanceof js__$Boot_HaxeError) ? ex104.val : ex104) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right52;
		try {
			right52 = true;
		} catch( ex105 ) {
			haxe_CallStack.lastException = ex105;
			right52 = "exception: " + Std.string(((ex105) instanceof js__$Boot_HaxeError) ? ex105.val : ex105) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left52,right52)) {
			utest_Assert.pass("Complex.hx:751 [OK] ({\nvar a = Complex.one;\na.isReal() == true; }) == true",{ lineNumber : 751, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Complex.one;\na.isReal() == true; }) == true --> Left side `" + Std.string(left52) + "` does not equal `" + Std.string(right52) + "`.",{ lineNumber : 751, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left53;
		try {
			var this113 = new geom_structure_Mat1x2(0.,1.);
			var a55 = this113;
			left53 = a55.x == 0 == true;
		} catch( ex106 ) {
			haxe_CallStack.lastException = ex106;
			left53 = "exception: " + Std.string(((ex106) instanceof js__$Boot_HaxeError) ? ex106.val : ex106) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right53;
		try {
			right53 = true;
		} catch( ex107 ) {
			haxe_CallStack.lastException = ex107;
			right53 = "exception: " + Std.string(((ex107) instanceof js__$Boot_HaxeError) ? ex107.val : ex107) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left53,right53)) {
			utest_Assert.pass("Complex.hx:762 [OK] ({\nvar a = Complex.i1;\na.isImaginary() == true; }) == true",{ lineNumber : 762, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Complex.i1;\na.isImaginary() == true; }) == true --> Left side `" + Std.string(left53) + "` does not equal `" + Std.string(right53) + "`.",{ lineNumber : 762, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left54;
		try {
			var r1 = 12;
			var theta = Math.PI / 4;
			var cis = geom_matrix__$Complex_Complex_$Impl_$.cis;
			var square = geom_matrix__$Complex_Complex_$Impl_$.square;
			var b46 = cis(theta);
			var this114 = new geom_structure_Mat1x2(r1 * b46.x,r1 * b46.y);
			var a56 = square(this114);
			var a57 = r1 * r1;
			var b47 = cis(2 * theta);
			var this115 = new geom_structure_Mat1x2(a57 * b47.x,a57 * b47.y);
			var b48 = this115;
			var delta46 = 0.0000001;
			left54 = !(Math.abs(a56.x - b48.x) >= delta46 || Math.abs(a56.y - b48.y) >= delta46);
		} catch( ex108 ) {
			haxe_CallStack.lastException = ex108;
			left54 = "exception: " + Std.string(((ex108) instanceof js__$Boot_HaxeError) ? ex108.val : ex108) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right54;
		try {
			right54 = true;
		} catch( ex109 ) {
			haxe_CallStack.lastException = ex109;
			right54 = "exception: " + Std.string(((ex109) instanceof js__$Boot_HaxeError) ? ex109.val : ex109) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left54,right54)) {
			utest_Assert.pass("Complex.hx:773 [OK] ({\nvar r = 12;\nvar theta = Math.PI/4;\nvar cis = Complex.cis;\nvar square = Complex.square;\nsquare(r*cis( theta )) == r*r*cis( 2*theta ); }) == true",{ lineNumber : 773, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar r = 12;\nvar theta = Math.PI/4;\nvar cis = Complex.cis;\nvar square = Complex.square;\nsquare(r*cis( theta )) == r*r*cis( 2*theta ); }) == true --> Left side `" + Std.string(left54) + "` does not equal `" + Std.string(right54) + "`.",{ lineNumber : 773, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left55;
		try {
			var r2 = 12;
			var theta1 = Math.PI / 4;
			var cis1 = geom_matrix__$Complex_Complex_$Impl_$.cis;
			var square1 = geom_matrix__$Complex_Complex_$Impl_$.square;
			var fromCircle = geom_matrix__$Complex_Complex_$Impl_$.fromCircle;
			var a58 = square1(fromCircle(r2,theta1));
			var b49 = fromCircle(r2 * r2,2 * theta1);
			var delta47 = 0.0000001;
			left55 = !(Math.abs(a58.x - b49.x) >= delta47 || Math.abs(a58.y - b49.y) >= delta47);
		} catch( ex110 ) {
			haxe_CallStack.lastException = ex110;
			left55 = "exception: " + Std.string(((ex110) instanceof js__$Boot_HaxeError) ? ex110.val : ex110) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right55;
		try {
			right55 = true;
		} catch( ex111 ) {
			haxe_CallStack.lastException = ex111;
			right55 = "exception: " + Std.string(((ex111) instanceof js__$Boot_HaxeError) ? ex111.val : ex111) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left55,right55)) {
			utest_Assert.pass("Complex.hx:788 [OK] ({\nvar r = 12;\nvar theta = Math.PI/4;\nvar cis = Complex.cis;\nvar square = Complex.square;\nvar fromCircle = Complex.fromCircle;\nsquare(fromCircle(r,theta)) == fromCircle( r*r, 2*theta ); }) == true",{ lineNumber : 788, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar r = 12;\nvar theta = Math.PI/4;\nvar cis = Complex.cis;\nvar square = Complex.square;\nvar fromCircle = Complex.fromCircle;\nsquare(fromCircle(r,theta)) == fromCircle( r*r, 2*theta ); }) == true --> Left side `" + Std.string(left55) + "` does not equal `" + Std.string(right55) + "`.",{ lineNumber : 788, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left56;
		try {
			var r3 = 12;
			var theta2 = Math.PI / 4;
			var cis2 = geom_matrix__$Complex_Complex_$Impl_$.cis;
			var square2 = geom_matrix__$Complex_Complex_$Impl_$.square;
			var fromCircle1 = geom_matrix__$Complex_Complex_$Impl_$.fromCircle;
			var a59 = square2(fromCircle1(r3,theta2));
			var b50 = fromCircle1(r3 * r3,2 * theta2);
			var delta48 = 0.0000001;
			left56 = !(Math.abs(a59.x - b50.x) >= delta48 || Math.abs(a59.y - b50.y) >= delta48);
		} catch( ex112 ) {
			haxe_CallStack.lastException = ex112;
			left56 = "exception: " + Std.string(((ex112) instanceof js__$Boot_HaxeError) ? ex112.val : ex112) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right56;
		try {
			right56 = true;
		} catch( ex113 ) {
			haxe_CallStack.lastException = ex113;
			right56 = "exception: " + Std.string(((ex113) instanceof js__$Boot_HaxeError) ? ex113.val : ex113) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left56,right56)) {
			utest_Assert.pass("Complex.hx:803 [OK] ({\nvar r = 12;\nvar theta = Math.PI/4;\nvar cis = Complex.cis;\nvar square = Complex.square;\nvar fromCircle = Complex.fromCircle;\nsquare(fromCircle(r,theta)) == fromCircle( r*r, 2*theta ); }) == true",{ lineNumber : 803, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar r = 12;\nvar theta = Math.PI/4;\nvar cis = Complex.cis;\nvar square = Complex.square;\nvar fromCircle = Complex.fromCircle;\nsquare(fromCircle(r,theta)) == fromCircle( r*r, 2*theta ); }) == true --> Left side `" + Std.string(left56) + "` does not equal `" + Std.string(right56) + "`.",{ lineNumber : 803, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left57;
		try {
			var r4 = 12;
			var theta3 = Math.PI / 4;
			var cis3 = geom_matrix__$Complex_Complex_$Impl_$.cis;
			var fromCircle2 = geom_matrix__$Complex_Complex_$Impl_$.fromCircle;
			var exp = geom_matrix__$Complex_Complex_$Impl_$.exp;
			var a60 = fromCircle2(r4,theta3);
			var this116 = new geom_structure_Mat1x2(0,theta3);
			var b51 = exp(this116);
			var this117 = new geom_structure_Mat1x2(r4 * b51.x,r4 * b51.y);
			var b52 = this117;
			var delta49 = 0.0000001;
			left57 = !(Math.abs(a60.x - b52.x) >= delta49 || Math.abs(a60.y - b52.y) >= delta49);
		} catch( ex114 ) {
			haxe_CallStack.lastException = ex114;
			left57 = "exception: " + Std.string(((ex114) instanceof js__$Boot_HaxeError) ? ex114.val : ex114) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right57;
		try {
			right57 = true;
		} catch( ex115 ) {
			haxe_CallStack.lastException = ex115;
			right57 = "exception: " + Std.string(((ex115) instanceof js__$Boot_HaxeError) ? ex115.val : ex115) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left57,right57)) {
			utest_Assert.pass("Complex.hx:825 [OK] ({\nvar r = 12;\nvar theta = Math.PI/4;\nvar cis = Complex.cis;\nvar fromCircle = Complex.fromCircle;\nvar exp = Complex.exp;\nfromCircle(r,theta) == r*exp( new Complex({ x: 0, y: theta }) ); }) == true",{ lineNumber : 825, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar r = 12;\nvar theta = Math.PI/4;\nvar cis = Complex.cis;\nvar fromCircle = Complex.fromCircle;\nvar exp = Complex.exp;\nfromCircle(r,theta) == r*exp( new Complex({ x: 0, y: theta }) ); }) == true --> Left side `" + Std.string(left57) + "` does not equal `" + Std.string(right57) + "`.",{ lineNumber : 825, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left58;
		try {
			var this118 = new geom_structure_Mat1x2(3,4);
			var a61 = this118;
			var this119 = new geom_structure_Mat1x2(6,8);
			var b53 = this119;
			var ln = geom_matrix__$Complex_Complex_$Impl_$.ln;
			var this120 = new geom_structure_Mat1x2(a61.x * b53.x - a61.y * b53.y,a61.x * b53.y + a61.y * b53.x);
			var a62 = ln(this120);
			var a63 = ln(a61);
			var b54 = ln(b53);
			var this121 = new geom_structure_Mat1x2(a63.x + b54.x,a63.y + b54.y);
			var b55 = this121;
			var delta50 = 0.0000001;
			left58 = !(Math.abs(a62.x - b55.x) >= delta50 || Math.abs(a62.y - b55.y) >= delta50);
		} catch( ex116 ) {
			haxe_CallStack.lastException = ex116;
			left58 = "exception: " + Std.string(((ex116) instanceof js__$Boot_HaxeError) ? ex116.val : ex116) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right58;
		try {
			right58 = true;
		} catch( ex117 ) {
			haxe_CallStack.lastException = ex117;
			right58 = "exception: " + Std.string(((ex117) instanceof js__$Boot_HaxeError) ? ex117.val : ex117) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left58,right58)) {
			utest_Assert.pass("Complex.hx:844 [OK] ({\nvar a = new Complex({ x: 3, y: 4});\nvar b = new Complex({ x: 6, y: 8});\nvar ln = Complex.ln;\nln( a*b ) == ln( a ) + ln( b ); }) == true",{ lineNumber : 844, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 3, y: 4});\nvar b = new Complex({ x: 6, y: 8});\nvar ln = Complex.ln;\nln( a*b ) == ln( a ) + ln( b ); }) == true --> Left side `" + Std.string(left58) + "` does not equal `" + Std.string(right58) + "`.",{ lineNumber : 844, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
		var left59;
		try {
			var this122 = new geom_structure_Mat1x2(3,4);
			var a64 = this122;
			var this123 = new geom_structure_Mat1x2(6,8);
			var b56 = this123;
			var arg = geom_matrix__$Complex_Complex_$Impl_$.arg;
			var this124 = new geom_structure_Mat1x2(a64.x * b56.x - a64.y * b56.y,a64.x * b56.y + a64.y * b56.x);
			left59 = arg(this124) == arg(a64) + arg(b56);
		} catch( ex118 ) {
			haxe_CallStack.lastException = ex118;
			left59 = "exception: " + Std.string(((ex118) instanceof js__$Boot_HaxeError) ? ex118.val : ex118) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right59;
		try {
			right59 = true;
		} catch( ex119 ) {
			haxe_CallStack.lastException = ex119;
			right59 = "exception: " + Std.string(((ex119) instanceof js__$Boot_HaxeError) ? ex119.val : ex119) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left59,right59)) {
			utest_Assert.pass("Complex.hx:862 [OK] ({\nvar a = new Complex({ x: 3, y: 4});\nvar b = new Complex({ x: 6, y: 8});\nvar arg = Complex.arg;\narg( a*b ) == arg( a ) + arg( b ); }) == true",{ lineNumber : 862, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Complex({ x: 3, y: 4});\nvar b = new Complex({ x: 6, y: 8});\nvar arg = Complex.arg;\narg( a*b ) == arg( a ) + arg( b ); }) == true --> Left side `" + Std.string(left59) + "` does not equal `" + Std.string(right59) + "`.",{ lineNumber : 862, fileName : "src/geom/matrix/Complex.hx", className : "", methodName : ""});
		}
	}
	,testDualQuaternion_1: function() {
		var left;
		try {
			var this1 = new geom_structure_Mat1x4(0.,0.,0.,1.);
			var this2 = new geom_structure_Mat1x4(0.,0.,0.,1.);
			var this3 = new geom_structure_DualQ(this1,this2);
			left = this3;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			var this4 = new geom_structure_DualQ(new geom_structure_Mat1x4(0.,0.,0.,1.),new geom_structure_Mat1x4(0.,0.,0.,1.));
			right = this4;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("DualQuaternion.hx:15 [OK] DualQuaternion.zero == new DualQuaternion({real:{ x: 0., y: 0., z: 0., w: 1. },dual:{x:0.,y:0.,z:0.,w:1.}})",{ lineNumber : 15, fileName : "src/geom/matrix/DualQuaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("DualQuaternion.zero == new DualQuaternion({real:{ x: 0., y: 0., z: 0., w: 1. },dual:{x:0.,y:0.,z:0.,w:1.}}) --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 15, fileName : "src/geom/matrix/DualQuaternion.hx", className : "", methodName : ""});
		}
		var left1;
		try {
			var this5 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a = this5;
			var this6 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var b = this6;
			var this7 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var c = this7;
			var this8 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var d = this8;
			var this9 = new geom_structure_DualQ(a,b);
			var e = this9;
			var this10 = new geom_structure_DualQ(c,d);
			var f = this10;
			var a1 = e.real;
			var b1 = f.real;
			var delta = 0.0000001;
			if(!(Math.abs(a1.x - b1.x) >= delta || Math.abs(a1.y - b1.y) >= delta || Math.abs(a1.z - b1.z) >= delta || Math.abs(a1.w - b1.w) >= delta)) {
				var a2 = e.dual;
				var b2 = f.dual;
				var delta1 = 0.0000001;
				left1 = !(Math.abs(a2.x - b2.x) >= delta1 || Math.abs(a2.y - b2.y) >= delta1 || Math.abs(a2.z - b2.z) >= delta1 || Math.abs(a2.w - b2.w) >= delta1);
			} else {
				left1 = false;
			}
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			right1 = true;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left1,right1)) {
			utest_Assert.pass("DualQuaternion.hx:30 [OK] ({\nvar a = new Quaternion( { x: 1., y: 2., z: 3., w: 1. } );\nvar b = new Quaternion( { x: 1., y: 2., z: 3., w: 1. } );\nvar c = new Quaternion( { x: 1., y: 2., z: 3., w: 1. } );\nvar d = new Quaternion( { x: 1., y: 2., z: 3., w: 1. } );\nvar e = new DualQuaternion( { real: a, dual: b } );\nvar f = new DualQuaternion( { real: c, dual: d } );\ne == f; }) == true",{ lineNumber : 30, fileName : "src/geom/matrix/DualQuaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Quaternion( { x: 1., y: 2., z: 3., w: 1. } );\nvar b = new Quaternion( { x: 1., y: 2., z: 3., w: 1. } );\nvar c = new Quaternion( { x: 1., y: 2., z: 3., w: 1. } );\nvar d = new Quaternion( { x: 1., y: 2., z: 3., w: 1. } );\nvar e = new DualQuaternion( { real: a, dual: b } );\nvar f = new DualQuaternion( { real: c, dual: d } );\ne == f; }) == true --> Left side `" + Std.string(left1) + "` does not equal `" + Std.string(right1) + "`.",{ lineNumber : 30, fileName : "src/geom/matrix/DualQuaternion.hx", className : "", methodName : ""});
		}
		var left2;
		try {
			var this11 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a3 = this11;
			var this12 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var b3 = this12;
			var this13 = new geom_structure_Mat1x4(1.,2.,4.,1.);
			var c1 = this13;
			var this14 = new geom_structure_Mat1x4(1.,2.,4.,1.);
			var d1 = this14;
			var this15 = new geom_structure_DualQ(a3,b3);
			var e1 = this15;
			var this16 = new geom_structure_DualQ(c1,d1);
			var f1 = this16;
			var left3;
			var a4 = e1.real;
			var b4 = f1.real;
			var delta2 = 0.0000001;
			if(!(Math.abs(a4.x - b4.x) >= delta2 || Math.abs(a4.y - b4.y) >= delta2 || Math.abs(a4.z - b4.z) >= delta2 || Math.abs(a4.w - b4.w) >= delta2)) {
				var a5 = e1.dual;
				var b5 = f1.dual;
				var delta3 = 0.0000001;
				left3 = !(Math.abs(a5.x - b5.x) >= delta3 || Math.abs(a5.y - b5.y) >= delta3 || Math.abs(a5.z - b5.z) >= delta3 || Math.abs(a5.w - b5.w) >= delta3);
			} else {
				left3 = false;
			}
			left2 = !left3;
		} catch( ex4 ) {
			haxe_CallStack.lastException = ex4;
			left2 = "exception: " + Std.string(((ex4) instanceof js__$Boot_HaxeError) ? ex4.val : ex4) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right2;
		try {
			right2 = true;
		} catch( ex5 ) {
			haxe_CallStack.lastException = ex5;
			right2 = "exception: " + Std.string(((ex5) instanceof js__$Boot_HaxeError) ? ex5.val : ex5) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left2,right2)) {
			utest_Assert.pass("DualQuaternion.hx:46 [OK] ({\nvar a = new Quaternion( { x: 1., y: 2., z: 3., w: 1. } );\nvar b = new Quaternion( { x: 1., y: 2., z: 3., w: 1. } );\nvar c = new Quaternion( { x: 1., y: 2., z: 4., w: 1. } );\nvar d = new Quaternion( { x: 1., y: 2., z: 4., w: 1. } );\nvar e = new DualQuaternion( { real: a, dual: b } );\nvar f = new DualQuaternion( { real: c, dual: d } );\ne != f; }) == true",{ lineNumber : 46, fileName : "src/geom/matrix/DualQuaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Quaternion( { x: 1., y: 2., z: 3., w: 1. } );\nvar b = new Quaternion( { x: 1., y: 2., z: 3., w: 1. } );\nvar c = new Quaternion( { x: 1., y: 2., z: 4., w: 1. } );\nvar d = new Quaternion( { x: 1., y: 2., z: 4., w: 1. } );\nvar e = new DualQuaternion( { real: a, dual: b } );\nvar f = new DualQuaternion( { real: c, dual: d } );\ne != f; }) == true --> Left side `" + Std.string(left2) + "` does not equal `" + Std.string(right2) + "`.",{ lineNumber : 46, fileName : "src/geom/matrix/DualQuaternion.hx", className : "", methodName : ""});
		}
		var left4;
		try {
			var this17 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a6 = this17;
			var this18 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var b6 = this18;
			var this19 = new geom_structure_DualQ(a6,b6);
			var c2 = this19;
			var a7 = c2.real;
			var b7 = c2.real;
			var this20 = new geom_structure_Mat1x4(a7.x + b7.x,a7.y + b7.y,a7.z + b7.z,a7.w + b7.w);
			var a8 = c2.dual;
			var b8 = c2.dual;
			var this21 = new geom_structure_Mat1x4(a8.x + b8.x,a8.y + b8.y,a8.z + b8.z,a8.w + b8.w);
			var this22 = new geom_structure_DualQ(this20,this21);
			var a9 = this22;
			var this23 = new geom_structure_DualQ(new geom_structure_Mat1x4(2.,2.,2.,2.),new geom_structure_Mat1x4(2.,2.,2.,2.));
			var b9 = this23;
			var a10 = a9.real;
			var b10 = b9.real;
			var delta4 = 0.0000001;
			if(!(Math.abs(a10.x - b10.x) >= delta4 || Math.abs(a10.y - b10.y) >= delta4 || Math.abs(a10.z - b10.z) >= delta4 || Math.abs(a10.w - b10.w) >= delta4)) {
				var a11 = a9.dual;
				var b11 = b9.dual;
				var delta5 = 0.0000001;
				left4 = !(Math.abs(a11.x - b11.x) >= delta5 || Math.abs(a11.y - b11.y) >= delta5 || Math.abs(a11.z - b11.z) >= delta5 || Math.abs(a11.w - b11.w) >= delta5);
			} else {
				left4 = false;
			}
		} catch( ex6 ) {
			haxe_CallStack.lastException = ex6;
			left4 = "exception: " + Std.string(((ex6) instanceof js__$Boot_HaxeError) ? ex6.val : ex6) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right3;
		try {
			right3 = true;
		} catch( ex7 ) {
			haxe_CallStack.lastException = ex7;
			right3 = "exception: " + Std.string(((ex7) instanceof js__$Boot_HaxeError) ? ex7.val : ex7) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left4,right3)) {
			utest_Assert.pass("DualQuaternion.hx:70 [OK] ({\nvar a = Quaternion.unit;\nvar b = Quaternion.unit;\nvar c = new DualQuaternion( { real: a, dual: b } );\nc + c == new DualQuaternion( { real:{ x: 2., y: 2., z: 2., w: 2. }, dual: { x: 2., y: 2., z: 2., w: 2. } } );\n}) == true",{ lineNumber : 70, fileName : "src/geom/matrix/DualQuaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Quaternion.unit;\nvar b = Quaternion.unit;\nvar c = new DualQuaternion( { real: a, dual: b } );\nc + c == new DualQuaternion( { real:{ x: 2., y: 2., z: 2., w: 2. }, dual: { x: 2., y: 2., z: 2., w: 2. } } );\n}) == true --> Left side `" + Std.string(left4) + "` does not equal `" + Std.string(right3) + "`.",{ lineNumber : 70, fileName : "src/geom/matrix/DualQuaternion.hx", className : "", methodName : ""});
		}
		var left5;
		try {
			var this24 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a12 = this24;
			var this25 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var b12 = this25;
			var this26 = new geom_structure_DualQ(a12,b12);
			var c3 = this26;
			var a13 = c3.real;
			var b13 = c3.real;
			var this27 = new geom_structure_Mat1x4(a13.x - b13.x,a13.y - b13.y,a13.z - b13.z,a13.w - b13.w);
			var a14 = c3.dual;
			var b14 = c3.dual;
			var this28 = new geom_structure_Mat1x4(a14.x - b14.x,a14.y - b14.y,a14.z - b14.z,a14.w - b14.w);
			var this29 = new geom_structure_DualQ(this27,this28);
			var a15 = this29;
			var this30 = new geom_structure_Mat1x4(0.,0.,0.,0.);
			var this31 = new geom_structure_Mat1x4(0.,0.,0.,0.);
			var this32 = new geom_structure_DualQ(this30,this31);
			var b15 = this32;
			var a16 = a15.real;
			var b16 = b15.real;
			var delta6 = 0.0000001;
			if(!(Math.abs(a16.x - b16.x) >= delta6 || Math.abs(a16.y - b16.y) >= delta6 || Math.abs(a16.z - b16.z) >= delta6 || Math.abs(a16.w - b16.w) >= delta6)) {
				var a17 = a15.dual;
				var b17 = b15.dual;
				var delta7 = 0.0000001;
				left5 = !(Math.abs(a17.x - b17.x) >= delta7 || Math.abs(a17.y - b17.y) >= delta7 || Math.abs(a17.z - b17.z) >= delta7 || Math.abs(a17.w - b17.w) >= delta7);
			} else {
				left5 = false;
			}
		} catch( ex8 ) {
			haxe_CallStack.lastException = ex8;
			left5 = "exception: " + Std.string(((ex8) instanceof js__$Boot_HaxeError) ? ex8.val : ex8) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right4;
		try {
			right4 = true;
		} catch( ex9 ) {
			haxe_CallStack.lastException = ex9;
			right4 = "exception: " + Std.string(((ex9) instanceof js__$Boot_HaxeError) ? ex9.val : ex9) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left5,right4)) {
			utest_Assert.pass("DualQuaternion.hx:84 [OK] ({\nvar a = Quaternion.unit;\nvar b = Quaternion.unit;\nvar c = new DualQuaternion( { real: a, dual: b } );\nc - c == new DualQuaternion( { real: Quaternion.zero, dual: Quaternion.zero } );\n}) == true",{ lineNumber : 84, fileName : "src/geom/matrix/DualQuaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Quaternion.unit;\nvar b = Quaternion.unit;\nvar c = new DualQuaternion( { real: a, dual: b } );\nc - c == new DualQuaternion( { real: Quaternion.zero, dual: Quaternion.zero } );\n}) == true --> Left side `" + Std.string(left5) + "` does not equal `" + Std.string(right4) + "`.",{ lineNumber : 84, fileName : "src/geom/matrix/DualQuaternion.hx", className : "", methodName : ""});
		}
		var left6;
		try {
			var this33 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a18 = this33;
			var this34 = new geom_structure_DualQ(a18,a18);
			var c4 = this34;
			var a19 = c4.real;
			var this35 = new geom_structure_Mat1x4(-a19.x,-a19.y,-a19.z,-a19.w);
			var a20 = c4.dual;
			var this36 = new geom_structure_Mat1x4(-a20.x,-a20.y,-a20.z,-a20.w);
			var this37 = new geom_structure_DualQ(this35,this36);
			var b18 = this37;
			var this38 = new geom_structure_Mat1x4(-1.,-2.,-3.,-1.);
			var e2 = this38;
			var this39 = new geom_structure_DualQ(e2,e2);
			var f2 = this39;
			var a21 = b18.real;
			var b19 = f2.real;
			var delta8 = 0.0000001;
			if(!(Math.abs(a21.x - b19.x) >= delta8 || Math.abs(a21.y - b19.y) >= delta8 || Math.abs(a21.z - b19.z) >= delta8 || Math.abs(a21.w - b19.w) >= delta8)) {
				var a22 = b18.dual;
				var b20 = f2.dual;
				var delta9 = 0.0000001;
				left6 = !(Math.abs(a22.x - b20.x) >= delta9 || Math.abs(a22.y - b20.y) >= delta9 || Math.abs(a22.z - b20.z) >= delta9 || Math.abs(a22.w - b20.w) >= delta9);
			} else {
				left6 = false;
			}
		} catch( ex10 ) {
			haxe_CallStack.lastException = ex10;
			left6 = "exception: " + Std.string(((ex10) instanceof js__$Boot_HaxeError) ? ex10.val : ex10) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right5;
		try {
			right5 = true;
		} catch( ex11 ) {
			haxe_CallStack.lastException = ex11;
			right5 = "exception: " + Std.string(((ex11) instanceof js__$Boot_HaxeError) ? ex11.val : ex11) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left6,right5)) {
			utest_Assert.pass("DualQuaternion.hx:98 [OK] ({\nvar a = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\nvar c = new DualQuaternion({ real: a, dual: a } );\nvar b = -c;\nvar e = new Quaternion({ x: -1., y: -2., z: -3., w: -1. });\nvar f = new DualQuaternion({ real: e, dual: e });\nb == f; }) == true",{ lineNumber : 98, fileName : "src/geom/matrix/DualQuaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\nvar c = new DualQuaternion({ real: a, dual: a } );\nvar b = -c;\nvar e = new Quaternion({ x: -1., y: -2., z: -3., w: -1. });\nvar f = new DualQuaternion({ real: e, dual: e });\nb == f; }) == true --> Left side `" + Std.string(left6) + "` does not equal `" + Std.string(right5) + "`.",{ lineNumber : 98, fileName : "src/geom/matrix/DualQuaternion.hx", className : "", methodName : ""});
		}
	}
	,testMatrix1x2_1: function() {
		var left;
		try {
			var this1 = new geom_structure_Mat1x2(1.,2.);
			left = this1;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			var this2 = new geom_structure_Mat1x2(1.,2.);
			var this3 = this2;
			var this4 = new geom_structure_Mat1x2(this3.x,this3.y);
			right = this4;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("Matrix1x2.hx:20 [OK] Matrix1x2.counting == Matrix1x2.counting.clone()",{ lineNumber : 20, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.counting == Matrix1x2.counting.clone() --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 20, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left1;
		try {
			var this5 = new geom_structure_Mat1x2(1.,2.);
			var m = this5;
			var arr = [];
			var i = HxOverrides.iter([m.x,m.y]);
			while(i.hasNext()) {
				var i1 = i.next();
				arr.push(i1);
			}
			left1 = [1.,2.].toString() == arr.toString();
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			right1 = true;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left1,right1)) {
			utest_Assert.pass("Matrix1x2.hx:29 [OK] ({\nvar m = Matrix1x2.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.].toString() == arr.toString(); }) == true",{ lineNumber : 29, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar m = Matrix1x2.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.].toString() == arr.toString(); }) == true --> Left side `" + Std.string(left1) + "` does not equal `" + Std.string(right1) + "`.",{ lineNumber : 29, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left2;
		try {
			var this6 = new geom_structure_Mat1x2(4.,3.);
			var this7 = this6;
			left2 = Math.sqrt(this7.x * this7.x + this7.y * this7.y);
		} catch( ex4 ) {
			haxe_CallStack.lastException = ex4;
			left2 = "exception: " + Std.string(((ex4) instanceof js__$Boot_HaxeError) ? ex4.val : ex4) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right2;
		try {
			right2 = 5;
		} catch( ex5 ) {
			haxe_CallStack.lastException = ex5;
			right2 = "exception: " + Std.string(((ex5) instanceof js__$Boot_HaxeError) ? ex5.val : ex5) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left2,right2)) {
			utest_Assert.pass("Matrix1x2.hx:50 [OK] ( new Matrix1x2( { x: 4., y: 3. } ) ).magnitude == 5",{ lineNumber : 50, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("( new Matrix1x2( { x: 4., y: 3. } ) ).magnitude == 5 --> Left side `" + Std.string(left2) + "` does not equal `" + Std.string(right2) + "`.",{ lineNumber : 50, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left3;
		try {
			var this8 = new geom_structure_Mat1x2(9.,12.);
			var m1 = this8;
			var currentLength = Math.sqrt(m1.x * m1.x + m1.y * m1.y);
			if(currentLength != 0) {
				var mul = 5 / currentLength;
				m1.x *= mul;
				m1.y *= mul;
				var left4 = m1.x * m1.x + m1.y * m1.y;
			}
			left3 = (m1.x == 3. && m1.y == 4.) == true;
		} catch( ex6 ) {
			haxe_CallStack.lastException = ex6;
			left3 = "exception: " + Std.string(((ex6) instanceof js__$Boot_HaxeError) ? ex6.val : ex6) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right3;
		try {
			right3 = true;
		} catch( ex7 ) {
			haxe_CallStack.lastException = ex7;
			right3 = "exception: " + Std.string(((ex7) instanceof js__$Boot_HaxeError) ? ex7.val : ex7) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left3,right3)) {
			utest_Assert.pass("Matrix1x2.hx:60 [OK] ({\nvar m = new Matrix1x2( { x: 9., y: 12. } );\nm.magnitude = 5;\n( m.x == 3. && m.y == 4. ) == true;\n}) == true",{ lineNumber : 60, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar m = new Matrix1x2( { x: 9., y: 12. } );\nm.magnitude = 5;\n( m.x == 3. && m.y == 4. ) == true;\n}) == true --> Left side `" + Std.string(left3) + "` does not equal `" + Std.string(right3) + "`.",{ lineNumber : 60, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left5;
		try {
			haxe_Log.trace("\"normalize\" untested",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x2_1"});
			left5 = true;
		} catch( ex8 ) {
			haxe_CallStack.lastException = ex8;
			left5 = "exception: " + Std.string(((ex8) instanceof js__$Boot_HaxeError) ? ex8.val : ex8) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right4;
		try {
			right4 = true;
		} catch( ex9 ) {
			haxe_CallStack.lastException = ex9;
			right4 = "exception: " + Std.string(((ex9) instanceof js__$Boot_HaxeError) ? ex9.val : ex9) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left5,right4)) {
			utest_Assert.pass("Matrix1x2.hx:81 [OK] ({ trace('\"normalize\" untested'); true; }) == true",{ lineNumber : 81, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"normalize\" untested'); true; }) == true --> Left side `" + Std.string(left5) + "` does not equal `" + Std.string(right4) + "`.",{ lineNumber : 81, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left6;
		try {
			var this9 = new geom_structure_Mat1x2(0.,0.);
			left6 = this9;
		} catch( ex10 ) {
			haxe_CallStack.lastException = ex10;
			left6 = "exception: " + Std.string(((ex10) instanceof js__$Boot_HaxeError) ? ex10.val : ex10) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right5;
		try {
			var this10 = new geom_structure_Mat1x2(0.,0.);
			right5 = this10;
		} catch( ex11 ) {
			haxe_CallStack.lastException = ex11;
			right5 = "exception: " + Std.string(((ex11) instanceof js__$Boot_HaxeError) ? ex11.val : ex11) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left6,right5)) {
			utest_Assert.pass("Matrix1x2.hx:94 [OK] Matrix1x2.zero == new Matrix1x2({ x: 0., y: 0. })",{ lineNumber : 94, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.zero == new Matrix1x2({ x: 0., y: 0. }) --> Left side `" + Std.string(left6) + "` does not equal `" + Std.string(right5) + "`.",{ lineNumber : 94, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left7;
		try {
			var this11 = new geom_structure_Mat1x2(1.,1.);
			left7 = this11;
		} catch( ex12 ) {
			haxe_CallStack.lastException = ex12;
			left7 = "exception: " + Std.string(((ex12) instanceof js__$Boot_HaxeError) ? ex12.val : ex12) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right6;
		try {
			var this12 = new geom_structure_Mat1x2(1.,1.);
			right6 = this12;
		} catch( ex13 ) {
			haxe_CallStack.lastException = ex13;
			right6 = "exception: " + Std.string(((ex13) instanceof js__$Boot_HaxeError) ? ex13.val : ex13) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left7,right6)) {
			utest_Assert.pass("Matrix1x2.hx:109 [OK] Matrix1x2.unit == new Matrix1x2({ x: 1., y: 1. })",{ lineNumber : 109, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.unit == new Matrix1x2({ x: 1., y: 1. }) --> Left side `" + Std.string(left7) + "` does not equal `" + Std.string(right6) + "`.",{ lineNumber : 109, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left8;
		try {
			var this13 = new geom_structure_Mat1x2(1.,1.);
			var a = this13;
			var this14 = new geom_structure_Mat1x2(-a.x,-a.y);
			left8 = this14;
		} catch( ex14 ) {
			haxe_CallStack.lastException = ex14;
			left8 = "exception: " + Std.string(((ex14) instanceof js__$Boot_HaxeError) ? ex14.val : ex14) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right7;
		try {
			var this15 = new geom_structure_Mat1x2(-1.,-1.);
			right7 = this15;
		} catch( ex15 ) {
			haxe_CallStack.lastException = ex15;
			right7 = "exception: " + Std.string(((ex15) instanceof js__$Boot_HaxeError) ? ex15.val : ex15) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left8,right7)) {
			utest_Assert.pass("Matrix1x2.hx:124 [OK] Matrix1x2.minus1 == new Matrix1x2({ x: -1., y: -1. })",{ lineNumber : 124, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.minus1 == new Matrix1x2({ x: -1., y: -1. }) --> Left side `" + Std.string(left8) + "` does not equal `" + Std.string(right7) + "`.",{ lineNumber : 124, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left9;
		try {
			var this16 = new geom_structure_Mat1x2(1.,2.);
			left9 = this16;
		} catch( ex16 ) {
			haxe_CallStack.lastException = ex16;
			left9 = "exception: " + Std.string(((ex16) instanceof js__$Boot_HaxeError) ? ex16.val : ex16) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right8;
		try {
			var this17 = new geom_structure_Mat1x2(1.,2.);
			right8 = this17;
		} catch( ex17 ) {
			haxe_CallStack.lastException = ex17;
			right8 = "exception: " + Std.string(((ex17) instanceof js__$Boot_HaxeError) ? ex17.val : ex17) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left9,right8)) {
			utest_Assert.pass("Matrix1x2.hx:134 [OK] Matrix1x2.counting == new Matrix1x2({ x: 1., y: 2. })",{ lineNumber : 134, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.counting == new Matrix1x2({ x: 1., y: 2. }) --> Left side `" + Std.string(left9) + "` does not equal `" + Std.string(right8) + "`.",{ lineNumber : 134, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left10;
		try {
			var this18 = new geom_structure_Mat1x2(1.,2.);
			var a1 = this18;
			var this19 = new geom_structure_Mat1x2(-a1.x,-a1.y);
			var b = this19;
			var this20 = new geom_structure_Mat1x2(-1.,-2.);
			var b1 = this20;
			left10 = b.x == b1.x && b.y == b1.y;
		} catch( ex18 ) {
			haxe_CallStack.lastException = ex18;
			left10 = "exception: " + Std.string(((ex18) instanceof js__$Boot_HaxeError) ? ex18.val : ex18) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right9;
		try {
			right9 = true;
		} catch( ex19 ) {
			haxe_CallStack.lastException = ex19;
			right9 = "exception: " + Std.string(((ex19) instanceof js__$Boot_HaxeError) ? ex19.val : ex19) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left10,right9)) {
			utest_Assert.pass("Matrix1x2.hx:152 [OK] ({\nvar a = new Matrix1x2({ x: 1., y: 2. });\nvar b = -a;\nb == new Matrix1x2({ x: -1., y: -2. }); }) == true",{ lineNumber : 152, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x2({ x: 1., y: 2. });\nvar b = -a;\nb == new Matrix1x2({ x: -1., y: -2. }); }) == true --> Left side `" + Std.string(left10) + "` does not equal `" + Std.string(right9) + "`.",{ lineNumber : 152, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left11;
		try {
			var this21 = new geom_structure_Mat1x2(1.,1.);
			var a2 = this21;
			var this22 = new geom_structure_Mat1x2(1.,1.);
			var b2 = this22;
			var this23 = new geom_structure_Mat1x2(a2.x + b2.x,a2.y + b2.y);
			left11 = this23;
		} catch( ex20 ) {
			haxe_CallStack.lastException = ex20;
			left11 = "exception: " + Std.string(((ex20) instanceof js__$Boot_HaxeError) ? ex20.val : ex20) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right10;
		try {
			var this24 = new geom_structure_Mat1x2(2.,2.);
			right10 = this24;
		} catch( ex21 ) {
			haxe_CallStack.lastException = ex21;
			right10 = "exception: " + Std.string(((ex21) instanceof js__$Boot_HaxeError) ? ex21.val : ex21) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left11,right10)) {
			utest_Assert.pass("Matrix1x2.hx:168 [OK] Matrix1x2.unit + Matrix1x2.unit == new Matrix1x2( { x: 2., y: 2. } )",{ lineNumber : 168, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.unit + Matrix1x2.unit == new Matrix1x2( { x: 2., y: 2. } ) --> Left side `" + Std.string(left11) + "` does not equal `" + Std.string(right10) + "`.",{ lineNumber : 168, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left12;
		try {
			var this25 = new geom_structure_Mat1x2(1.,1.);
			var a3 = this25;
			var this26 = new geom_structure_Mat1x2(1.,1.);
			var b3 = this26;
			var this27 = new geom_structure_Mat1x2(a3.x - b3.x,a3.y - b3.y);
			left12 = this27;
		} catch( ex22 ) {
			haxe_CallStack.lastException = ex22;
			left12 = "exception: " + Std.string(((ex22) instanceof js__$Boot_HaxeError) ? ex22.val : ex22) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right11;
		try {
			var this28 = new geom_structure_Mat1x2(0.,0.);
			right11 = this28;
		} catch( ex23 ) {
			haxe_CallStack.lastException = ex23;
			right11 = "exception: " + Std.string(((ex23) instanceof js__$Boot_HaxeError) ? ex23.val : ex23) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left12,right11)) {
			utest_Assert.pass("Matrix1x2.hx:183 [OK] Matrix1x2.unit - Matrix1x2.unit == new Matrix1x2( { x: 0., y: 0. } )",{ lineNumber : 183, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.unit - Matrix1x2.unit == new Matrix1x2( { x: 0., y: 0. } ) --> Left side `" + Std.string(left12) + "` does not equal `" + Std.string(right11) + "`.",{ lineNumber : 183, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left13;
		try {
			var this29 = new geom_structure_Mat1x2(7.,6.);
			var a4 = this29;
			var this30 = new geom_structure_Mat1x2(7.,6.);
			var b4 = this30;
			left13 = a4.x == b4.x && a4.y == b4.y;
		} catch( ex24 ) {
			haxe_CallStack.lastException = ex24;
			left13 = "exception: " + Std.string(((ex24) instanceof js__$Boot_HaxeError) ? ex24.val : ex24) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right12;
		try {
			right12 = true;
		} catch( ex25 ) {
			haxe_CallStack.lastException = ex25;
			right12 = "exception: " + Std.string(((ex25) instanceof js__$Boot_HaxeError) ? ex25.val : ex25) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left13,right12)) {
			utest_Assert.pass("Matrix1x2.hx:197 [OK] ({\nvar a = new Matrix1x2( { x: 7., y: 6. } );\nvar b = new Matrix1x2( { x: 7., y: 6. } );\na == b;\n}) == true",{ lineNumber : 197, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x2( { x: 7., y: 6. } );\nvar b = new Matrix1x2( { x: 7., y: 6. } );\na == b;\n}) == true --> Left side `" + Std.string(left13) + "` does not equal `" + Std.string(right12) + "`.",{ lineNumber : 197, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left14;
		try {
			var this31 = new geom_structure_Mat1x2(1.,1.);
			var a5 = this31;
			var this32 = new geom_structure_Mat1x2(a5.x * 2,a5.y * 2);
			left14 = this32;
		} catch( ex26 ) {
			haxe_CallStack.lastException = ex26;
			left14 = "exception: " + Std.string(((ex26) instanceof js__$Boot_HaxeError) ? ex26.val : ex26) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right13;
		try {
			var this33 = new geom_structure_Mat1x2(2.,2.);
			right13 = this33;
		} catch( ex27 ) {
			haxe_CallStack.lastException = ex27;
			right13 = "exception: " + Std.string(((ex27) instanceof js__$Boot_HaxeError) ? ex27.val : ex27) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left14,right13)) {
			utest_Assert.pass("Matrix1x2.hx:214 [OK] Matrix1x2.unit * 2 == new Matrix1x2( { x: 2., y: 2. } )",{ lineNumber : 214, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.unit * 2 == new Matrix1x2( { x: 2., y: 2. } ) --> Left side `" + Std.string(left14) + "` does not equal `" + Std.string(right13) + "`.",{ lineNumber : 214, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left15;
		try {
			var _g = 2;
			var this34 = new geom_structure_Mat1x2(1.,1.);
			var _g1 = this34;
			var this35 = new geom_structure_Mat1x2(_g1.x * _g,_g1.y * _g);
			left15 = this35;
		} catch( ex28 ) {
			haxe_CallStack.lastException = ex28;
			left15 = "exception: " + Std.string(((ex28) instanceof js__$Boot_HaxeError) ? ex28.val : ex28) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right14;
		try {
			var this36 = new geom_structure_Mat1x2(2.,2.);
			right14 = this36;
		} catch( ex29 ) {
			haxe_CallStack.lastException = ex29;
			right14 = "exception: " + Std.string(((ex29) instanceof js__$Boot_HaxeError) ? ex29.val : ex29) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left15,right14)) {
			utest_Assert.pass("Matrix1x2.hx:215 [OK] 2 * Matrix1x2.unit == new Matrix1x2( { x: 2., y: 2. } )",{ lineNumber : 215, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("2 * Matrix1x2.unit == new Matrix1x2( { x: 2., y: 2. } ) --> Left side `" + Std.string(left15) + "` does not equal `" + Std.string(right14) + "`.",{ lineNumber : 215, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left16;
		try {
			var this37 = new geom_structure_Mat1x2(-1.,1.);
			left16 = this37;
		} catch( ex30 ) {
			haxe_CallStack.lastException = ex30;
			left16 = "exception: " + Std.string(((ex30) instanceof js__$Boot_HaxeError) ? ex30.val : ex30) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right15;
		try {
			var this38 = new geom_structure_Mat1x2(-1.,1.);
			right15 = this38;
		} catch( ex31 ) {
			haxe_CallStack.lastException = ex31;
			right15 = "exception: " + Std.string(((ex31) instanceof js__$Boot_HaxeError) ? ex31.val : ex31) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left16,right15)) {
			utest_Assert.pass("Matrix1x2.hx:249 [OK] Matrix1x2.topLeft() == new Matrix1x2({ x: -1., y: 1. })",{ lineNumber : 249, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.topLeft() == new Matrix1x2({ x: -1., y: 1. }) --> Left side `" + Std.string(left16) + "` does not equal `" + Std.string(right15) + "`.",{ lineNumber : 249, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left17;
		try {
			var this39 = new geom_structure_Mat1x2(1.,1.);
			left17 = this39;
		} catch( ex32 ) {
			haxe_CallStack.lastException = ex32;
			left17 = "exception: " + Std.string(((ex32) instanceof js__$Boot_HaxeError) ? ex32.val : ex32) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right16;
		try {
			var this40 = new geom_structure_Mat1x2(1.,1.);
			right16 = this40;
		} catch( ex33 ) {
			haxe_CallStack.lastException = ex33;
			right16 = "exception: " + Std.string(((ex33) instanceof js__$Boot_HaxeError) ? ex33.val : ex33) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left17,right16)) {
			utest_Assert.pass("Matrix1x2.hx:258 [OK] Matrix1x2.topRight() == new Matrix1x2({ x: 1., y: 1. })",{ lineNumber : 258, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.topRight() == new Matrix1x2({ x: 1., y: 1. }) --> Left side `" + Std.string(left17) + "` does not equal `" + Std.string(right16) + "`.",{ lineNumber : 258, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left18;
		try {
			var this41 = new geom_structure_Mat1x2(-1.,-1.);
			left18 = this41;
		} catch( ex34 ) {
			haxe_CallStack.lastException = ex34;
			left18 = "exception: " + Std.string(((ex34) instanceof js__$Boot_HaxeError) ? ex34.val : ex34) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right17;
		try {
			var this42 = new geom_structure_Mat1x2(-1.,-1.);
			right17 = this42;
		} catch( ex35 ) {
			haxe_CallStack.lastException = ex35;
			right17 = "exception: " + Std.string(((ex35) instanceof js__$Boot_HaxeError) ? ex35.val : ex35) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left18,right17)) {
			utest_Assert.pass("Matrix1x2.hx:267 [OK] Matrix1x2.bottomLeft() == new Matrix1x2({ x: -1., y: -1. })",{ lineNumber : 267, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.bottomLeft() == new Matrix1x2({ x: -1., y: -1. }) --> Left side `" + Std.string(left18) + "` does not equal `" + Std.string(right17) + "`.",{ lineNumber : 267, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left19;
		try {
			var this43 = new geom_structure_Mat1x2(1.,-1.);
			left19 = this43;
		} catch( ex36 ) {
			haxe_CallStack.lastException = ex36;
			left19 = "exception: " + Std.string(((ex36) instanceof js__$Boot_HaxeError) ? ex36.val : ex36) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right18;
		try {
			var this44 = new geom_structure_Mat1x2(1.,-1.);
			right18 = this44;
		} catch( ex37 ) {
			haxe_CallStack.lastException = ex37;
			right18 = "exception: " + Std.string(((ex37) instanceof js__$Boot_HaxeError) ? ex37.val : ex37) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left19,right18)) {
			utest_Assert.pass("Matrix1x2.hx:276 [OK] Matrix1x2.bottomRight() == new Matrix1x2({ x: 1., y: -1. })",{ lineNumber : 276, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.bottomRight() == new Matrix1x2({ x: 1., y: -1. }) --> Left side `" + Std.string(left19) + "` does not equal `" + Std.string(right18) + "`.",{ lineNumber : 276, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left20;
		try {
			var this45 = new geom_structure_Mat1x2(0.,1.);
			left20 = this45;
		} catch( ex38 ) {
			haxe_CallStack.lastException = ex38;
			left20 = "exception: " + Std.string(((ex38) instanceof js__$Boot_HaxeError) ? ex38.val : ex38) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right19;
		try {
			var this46 = new geom_structure_Mat1x2(0.,1.);
			right19 = this46;
		} catch( ex39 ) {
			haxe_CallStack.lastException = ex39;
			right19 = "exception: " + Std.string(((ex39) instanceof js__$Boot_HaxeError) ? ex39.val : ex39) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left20,right19)) {
			utest_Assert.pass("Matrix1x2.hx:285 [OK] Matrix1x2.north() == new Matrix1x2({ x: 0., y: 1. })",{ lineNumber : 285, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.north() == new Matrix1x2({ x: 0., y: 1. }) --> Left side `" + Std.string(left20) + "` does not equal `" + Std.string(right19) + "`.",{ lineNumber : 285, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left21;
		try {
			var this47 = new geom_structure_Mat1x2(0.,-1.);
			left21 = this47;
		} catch( ex40 ) {
			haxe_CallStack.lastException = ex40;
			left21 = "exception: " + Std.string(((ex40) instanceof js__$Boot_HaxeError) ? ex40.val : ex40) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right20;
		try {
			var this48 = new geom_structure_Mat1x2(0.,-1.);
			right20 = this48;
		} catch( ex41 ) {
			haxe_CallStack.lastException = ex41;
			right20 = "exception: " + Std.string(((ex41) instanceof js__$Boot_HaxeError) ? ex41.val : ex41) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left21,right20)) {
			utest_Assert.pass("Matrix1x2.hx:294 [OK] Matrix1x2.south() == new Matrix1x2({ x: 0., y: -1. })",{ lineNumber : 294, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.south() == new Matrix1x2({ x: 0., y: -1. }) --> Left side `" + Std.string(left21) + "` does not equal `" + Std.string(right20) + "`.",{ lineNumber : 294, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left22;
		try {
			var this49 = new geom_structure_Mat1x2(-1.,0.);
			left22 = this49;
		} catch( ex42 ) {
			haxe_CallStack.lastException = ex42;
			left22 = "exception: " + Std.string(((ex42) instanceof js__$Boot_HaxeError) ? ex42.val : ex42) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right21;
		try {
			var this50 = new geom_structure_Mat1x2(-1.,0.);
			right21 = this50;
		} catch( ex43 ) {
			haxe_CallStack.lastException = ex43;
			right21 = "exception: " + Std.string(((ex43) instanceof js__$Boot_HaxeError) ? ex43.val : ex43) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left22,right21)) {
			utest_Assert.pass("Matrix1x2.hx:303 [OK] Matrix1x2.west() == new Matrix1x2({ x: -1., y: 0. })",{ lineNumber : 303, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.west() == new Matrix1x2({ x: -1., y: 0. }) --> Left side `" + Std.string(left22) + "` does not equal `" + Std.string(right21) + "`.",{ lineNumber : 303, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left23;
		try {
			var this51 = new geom_structure_Mat1x2(1.,0.);
			left23 = this51;
		} catch( ex44 ) {
			haxe_CallStack.lastException = ex44;
			left23 = "exception: " + Std.string(((ex44) instanceof js__$Boot_HaxeError) ? ex44.val : ex44) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right22;
		try {
			var this52 = new geom_structure_Mat1x2(1.,0.);
			right22 = this52;
		} catch( ex45 ) {
			haxe_CallStack.lastException = ex45;
			right22 = "exception: " + Std.string(((ex45) instanceof js__$Boot_HaxeError) ? ex45.val : ex45) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left23,right22)) {
			utest_Assert.pass("Matrix1x2.hx:312 [OK] Matrix1x2.east() == new Matrix1x2({ x: 1., y: 0. })",{ lineNumber : 312, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.east() == new Matrix1x2({ x: 1., y: 0. }) --> Left side `" + Std.string(left23) + "` does not equal `" + Std.string(right22) + "`.",{ lineNumber : 312, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left24;
		try {
			var this53 = new geom_structure_Mat1x2(1.,1.);
			var a6 = this53;
			var v = 0.5;
			var this54 = new geom_structure_Mat1x2(a6.x * v,a6.y * v);
			left24 = this54;
		} catch( ex46 ) {
			haxe_CallStack.lastException = ex46;
			left24 = "exception: " + Std.string(((ex46) instanceof js__$Boot_HaxeError) ? ex46.val : ex46) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right23;
		try {
			var this55 = new geom_structure_Mat1x2(0.5,0.5);
			right23 = this55;
		} catch( ex47 ) {
			haxe_CallStack.lastException = ex47;
			right23 = "exception: " + Std.string(((ex47) instanceof js__$Boot_HaxeError) ? ex47.val : ex47) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left24,right23)) {
			utest_Assert.pass("Matrix1x2.hx:334 [OK] Matrix1x2.unit / 2 == new Matrix1x2( { x: 0.5, y: 0.5 } )",{ lineNumber : 334, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.unit / 2 == new Matrix1x2( { x: 0.5, y: 0.5 } ) --> Left side `" + Std.string(left24) + "` does not equal `" + Std.string(right23) + "`.",{ lineNumber : 334, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left25;
		try {
			var this56 = new geom_structure_Mat1x2(7.,5.);
			var a7 = this56;
			var this57 = new geom_structure_Mat1x2(7.,6.);
			var b5 = this57;
			left25 = !(a7.x == b5.x && a7.y == b5.y);
		} catch( ex48 ) {
			haxe_CallStack.lastException = ex48;
			left25 = "exception: " + Std.string(((ex48) instanceof js__$Boot_HaxeError) ? ex48.val : ex48) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right24;
		try {
			right24 = true;
		} catch( ex49 ) {
			haxe_CallStack.lastException = ex49;
			right24 = "exception: " + Std.string(((ex49) instanceof js__$Boot_HaxeError) ? ex49.val : ex49) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left25,right24)) {
			utest_Assert.pass("Matrix1x2.hx:347 [OK] ({\nvar a = new Matrix1x2( { x: 7., y: 5. } );\nvar b = new Matrix1x2( { x: 7., y: 6. } );\na != b;\n}) == true",{ lineNumber : 347, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x2( { x: 7., y: 5. } );\nvar b = new Matrix1x2( { x: 7., y: 6. } );\na != b;\n}) == true --> Left side `" + Std.string(left25) + "` does not equal `" + Std.string(right24) + "`.",{ lineNumber : 347, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left26;
		try {
			haxe_Log.trace("\"perp\" untested still to consider",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x2_1"});
			left26 = true;
		} catch( ex50 ) {
			haxe_CallStack.lastException = ex50;
			left26 = "exception: " + Std.string(((ex50) instanceof js__$Boot_HaxeError) ? ex50.val : ex50) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right25;
		try {
			right25 = true;
		} catch( ex51 ) {
			haxe_CallStack.lastException = ex51;
			right25 = "exception: " + Std.string(((ex51) instanceof js__$Boot_HaxeError) ? ex51.val : ex51) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left26,right25)) {
			utest_Assert.pass("Matrix1x2.hx:360 [OK] ({ trace('\"perp\" untested still to consider'); true; }) == true",{ lineNumber : 360, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"perp\" untested still to consider'); true; }) == true --> Left side `" + Std.string(left26) + "` does not equal `" + Std.string(right25) + "`.",{ lineNumber : 360, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left27;
		try {
			var this58 = new geom_structure_Mat1x2(3.,1.);
			var a8 = this58;
			var this59 = new geom_structure_Mat1x2(4.,2.);
			var b6 = this59;
			var this60 = new geom_structure_Mat1x2(3.5,1.5);
			var c = this60;
			var this61 = new geom_structure_Mat1x2((a8.x + b6.x) / 2,(a8.y + b6.y) / 2);
			var mid = this61;
			left27 = mid.x == c.x && mid.y == c.y;
		} catch( ex52 ) {
			haxe_CallStack.lastException = ex52;
			left27 = "exception: " + Std.string(((ex52) instanceof js__$Boot_HaxeError) ? ex52.val : ex52) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right26;
		try {
			right26 = true;
		} catch( ex53 ) {
			haxe_CallStack.lastException = ex53;
			right26 = "exception: " + Std.string(((ex53) instanceof js__$Boot_HaxeError) ? ex53.val : ex53) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left27,right26)) {
			utest_Assert.pass("Matrix1x2.hx:370 [OK] ({\nvar a = new Matrix1x2( { x: 3.,  y: 1. } );\nvar b = new Matrix1x2( { x: 4.,  y: 2. } );\nvar c = new Matrix1x2( { x: 3.5, y: 1.5 } );\nvar mid = Matrix1x2.mid( a, b );\nmid == c;\n}) == true",{ lineNumber : 370, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x2( { x: 3.,  y: 1. } );\nvar b = new Matrix1x2( { x: 4.,  y: 2. } );\nvar c = new Matrix1x2( { x: 3.5, y: 1.5 } );\nvar mid = Matrix1x2.mid( a, b );\nmid == c;\n}) == true --> Left side `" + Std.string(left27) + "` does not equal `" + Std.string(right26) + "`.",{ lineNumber : 370, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left28;
		try {
			var this62 = new geom_structure_Mat1x2(1.,1.);
			var a9 = this62;
			var this63 = new geom_structure_Mat1x2(4.,5.);
			var b7 = this63;
			var dx = a9.x - b7.x;
			var dy = a9.y - b7.y;
			left28 = dx * dx + dy * dy;
		} catch( ex54 ) {
			haxe_CallStack.lastException = ex54;
			left28 = "exception: " + Std.string(((ex54) instanceof js__$Boot_HaxeError) ? ex54.val : ex54) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right27;
		try {
			right27 = 25;
		} catch( ex55 ) {
			haxe_CallStack.lastException = ex55;
			right27 = "exception: " + Std.string(((ex55) instanceof js__$Boot_HaxeError) ? ex55.val : ex55) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left28,right27)) {
			utest_Assert.pass("Matrix1x2.hx:387 [OK] ({\nvar a = new Matrix1x2( { x: 1., y: 1. } );\nvar b = new Matrix1x2( { x: 1. + 3., y: 1. + 4. } );\na.distanceBetweenSquare( b ); }) == 25",{ lineNumber : 387, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x2( { x: 1., y: 1. } );\nvar b = new Matrix1x2( { x: 1. + 3., y: 1. + 4. } );\na.distanceBetweenSquare( b ); }) == 25 --> Left side `" + Std.string(left28) + "` does not equal `" + Std.string(right27) + "`.",{ lineNumber : 387, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left29;
		try {
			var this64 = new geom_structure_Mat1x2(1.,1.);
			var a10 = this64;
			var this65 = new geom_structure_Mat1x2(4.,5.);
			var b8 = this65;
			var dx1 = a10.x - b8.x;
			var dy1 = a10.y - b8.y;
			left29 = Math.pow(dx1 * dx1 + dy1 * dy1,0.5);
		} catch( ex56 ) {
			haxe_CallStack.lastException = ex56;
			left29 = "exception: " + Std.string(((ex56) instanceof js__$Boot_HaxeError) ? ex56.val : ex56) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right28;
		try {
			right28 = 5;
		} catch( ex57 ) {
			haxe_CallStack.lastException = ex57;
			right28 = "exception: " + Std.string(((ex57) instanceof js__$Boot_HaxeError) ? ex57.val : ex57) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left29,right28)) {
			utest_Assert.pass("Matrix1x2.hx:410 [OK] ({\nvar a = new Matrix1x2( { x: 1., y: 1. } );\nvar b = new Matrix1x2( { x: 1. + 3., y: 1. + 4. } );\na.distanceBetween( b ); }) == 5",{ lineNumber : 410, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x2( { x: 1., y: 1. } );\nvar b = new Matrix1x2( { x: 1. + 3., y: 1. + 4. } );\na.distanceBetween( b ); }) == 5 --> Left side `" + Std.string(left29) + "` does not equal `" + Std.string(right28) + "`.",{ lineNumber : 410, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left30;
		try {
			haxe_Log.trace("\"span\" untested still to consider",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x2_1"});
			left30 = true;
		} catch( ex58 ) {
			haxe_CallStack.lastException = ex58;
			left30 = "exception: " + Std.string(((ex58) instanceof js__$Boot_HaxeError) ? ex58.val : ex58) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right29;
		try {
			right29 = true;
		} catch( ex59 ) {
			haxe_CallStack.lastException = ex59;
			right29 = "exception: " + Std.string(((ex59) instanceof js__$Boot_HaxeError) ? ex59.val : ex59) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left30,right29)) {
			utest_Assert.pass("Matrix1x2.hx:422 [OK] ({ trace('\"span\" untested still to consider'); true; }) == true",{ lineNumber : 422, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"span\" untested still to consider'); true; }) == true --> Left side `" + Std.string(left30) + "` does not equal `" + Std.string(right29) + "`.",{ lineNumber : 422, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left31;
		try {
			var this66 = new geom_structure_Mat1x2(3.,3.);
			var a11 = this66;
			left31 = a11.x * a11.x + a11.y * a11.y;
		} catch( ex60 ) {
			haxe_CallStack.lastException = ex60;
			left31 = "exception: " + Std.string(((ex60) instanceof js__$Boot_HaxeError) ? ex60.val : ex60) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right30;
		try {
			right30 = 18;
		} catch( ex61 ) {
			haxe_CallStack.lastException = ex61;
			right30 = "exception: " + Std.string(((ex61) instanceof js__$Boot_HaxeError) ? ex61.val : ex61) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left31,right30)) {
			utest_Assert.pass("Matrix1x2.hx:431 [OK] ({\nvar a = new Matrix1x2( { x: 3., y: 3. } );\na.lenSquare(); }) == 18",{ lineNumber : 431, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x2( { x: 3., y: 3. } );\na.lenSquare(); }) == 18 --> Left side `" + Std.string(left31) + "` does not equal `" + Std.string(right30) + "`.",{ lineNumber : 431, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left32;
		try {
			var this67 = new geom_structure_Mat1x2(3.,4.);
			var a12 = this67;
			left32 = Math.pow(a12.x * a12.x + a12.y * a12.y,0.5);
		} catch( ex62 ) {
			haxe_CallStack.lastException = ex62;
			left32 = "exception: " + Std.string(((ex62) instanceof js__$Boot_HaxeError) ? ex62.val : ex62) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right31;
		try {
			right31 = 5;
		} catch( ex63 ) {
			haxe_CallStack.lastException = ex63;
			right31 = "exception: " + Std.string(((ex63) instanceof js__$Boot_HaxeError) ? ex63.val : ex63) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left32,right31)) {
			utest_Assert.pass("Matrix1x2.hx:442 [OK] ({\nvar a = new Matrix1x2( { x: 3., y: 4. } );\na.distance(); }) == 5",{ lineNumber : 442, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x2( { x: 3., y: 4. } );\na.distance(); }) == 5 --> Left side `" + Std.string(left32) + "` does not equal `" + Std.string(right31) + "`.",{ lineNumber : 442, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left33;
		try {
			haxe_Log.trace("\"isLeft\" untested",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x2_1"});
			left33 = true;
		} catch( ex64 ) {
			haxe_CallStack.lastException = ex64;
			left33 = "exception: " + Std.string(((ex64) instanceof js__$Boot_HaxeError) ? ex64.val : ex64) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right32;
		try {
			right32 = true;
		} catch( ex65 ) {
			haxe_CallStack.lastException = ex65;
			right32 = "exception: " + Std.string(((ex65) instanceof js__$Boot_HaxeError) ? ex65.val : ex65) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left33,right32)) {
			utest_Assert.pass("Matrix1x2.hx:466 [OK] ({ trace('\"isLeft\" untested'); true; }) == true",{ lineNumber : 466, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"isLeft\" untested'); true; }) == true --> Left side `" + Std.string(left33) + "` does not equal `" + Std.string(right32) + "`.",{ lineNumber : 466, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left34;
		try {
			haxe_Log.trace("\"triangleArea\" untested",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x2_1"});
			left34 = true;
		} catch( ex66 ) {
			haxe_CallStack.lastException = ex66;
			left34 = "exception: " + Std.string(((ex66) instanceof js__$Boot_HaxeError) ? ex66.val : ex66) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right33;
		try {
			right33 = true;
		} catch( ex67 ) {
			haxe_CallStack.lastException = ex67;
			right33 = "exception: " + Std.string(((ex67) instanceof js__$Boot_HaxeError) ? ex67.val : ex67) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left34,right33)) {
			utest_Assert.pass("Matrix1x2.hx:475 [OK] ({ trace('\"triangleArea\" untested'); true; }) == true",{ lineNumber : 475, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"triangleArea\" untested'); true; }) == true --> Left side `" + Std.string(left34) + "` does not equal `" + Std.string(right33) + "`.",{ lineNumber : 475, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left35;
		try {
			left35 = Std.int(Math.abs(-7.) / -7.);
		} catch( ex68 ) {
			haxe_CallStack.lastException = ex68;
			left35 = "exception: " + Std.string(((ex68) instanceof js__$Boot_HaxeError) ? ex68.val : ex68) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right34;
		try {
			right34 = -1;
		} catch( ex69 ) {
			haxe_CallStack.lastException = ex69;
			right34 = "exception: " + Std.string(((ex69) instanceof js__$Boot_HaxeError) ? ex69.val : ex69) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left35,right34)) {
			utest_Assert.pass("Matrix1x2.hx:484 [OK] Matrix1x2.sign( -7. ) == -1",{ lineNumber : 484, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.sign( -7. ) == -1 --> Left side `" + Std.string(left35) + "` does not equal `" + Std.string(right34) + "`.",{ lineNumber : 484, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left36;
		try {
			left36 = Std.int(Math.abs(7.) / 7.);
		} catch( ex70 ) {
			haxe_CallStack.lastException = ex70;
			left36 = "exception: " + Std.string(((ex70) instanceof js__$Boot_HaxeError) ? ex70.val : ex70) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right35;
		try {
			right35 = 1;
		} catch( ex71 ) {
			haxe_CallStack.lastException = ex71;
			right35 = "exception: " + Std.string(((ex71) instanceof js__$Boot_HaxeError) ? ex71.val : ex71) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left36,right35)) {
			utest_Assert.pass("Matrix1x2.hx:485 [OK] Matrix1x2.sign( 7. ) == 1",{ lineNumber : 485, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.sign( 7. ) == 1 --> Left side `" + Std.string(left36) + "` does not equal `" + Std.string(right35) + "`.",{ lineNumber : 485, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left37;
		try {
			var this68 = new geom_structure_Mat1x2(1.,0.);
			var a13 = this68;
			var this69 = new geom_structure_Mat1x2(0.,0.);
			var b9 = this69;
			var dx2 = a13.x - b9.x;
			var dy2 = a13.y - b9.y;
			left37 = Math.atan2(dy2,dx2);
		} catch( ex72 ) {
			haxe_CallStack.lastException = ex72;
			left37 = "exception: " + Std.string(((ex72) instanceof js__$Boot_HaxeError) ? ex72.val : ex72) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right36;
		try {
			right36 = 0;
		} catch( ex73 ) {
			haxe_CallStack.lastException = ex73;
			right36 = "exception: " + Std.string(((ex73) instanceof js__$Boot_HaxeError) ? ex73.val : ex73) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left37,right36)) {
			utest_Assert.pass("Matrix1x2.hx:494 [OK] Matrix1x2.thetaDifference( Matrix1x2.east(),        Matrix1x2.zero ) == 0",{ lineNumber : 494, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.thetaDifference( Matrix1x2.east(),        Matrix1x2.zero ) == 0 --> Left side `" + Std.string(left37) + "` does not equal `" + Std.string(right36) + "`.",{ lineNumber : 494, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left38;
		try {
			var this70 = new geom_structure_Mat1x2(1.,-1.);
			var a14 = this70;
			var this71 = new geom_structure_Mat1x2(0.,0.);
			var b10 = this71;
			var dx3 = a14.x - b10.x;
			var dy3 = a14.y - b10.y;
			left38 = Math.atan2(dy3,dx3);
		} catch( ex74 ) {
			haxe_CallStack.lastException = ex74;
			left38 = "exception: " + Std.string(((ex74) instanceof js__$Boot_HaxeError) ? ex74.val : ex74) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right37;
		try {
			right37 = -Math.PI / 4;
		} catch( ex75 ) {
			haxe_CallStack.lastException = ex75;
			right37 = "exception: " + Std.string(((ex75) instanceof js__$Boot_HaxeError) ? ex75.val : ex75) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left38,right37)) {
			utest_Assert.pass("Matrix1x2.hx:495 [OK] Matrix1x2.thetaDifference( Matrix1x2.bottomRight(), Matrix1x2.zero ) == -Math.PI/4",{ lineNumber : 495, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.thetaDifference( Matrix1x2.bottomRight(), Matrix1x2.zero ) == -Math.PI/4 --> Left side `" + Std.string(left38) + "` does not equal `" + Std.string(right37) + "`.",{ lineNumber : 495, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left39;
		try {
			var this72 = new geom_structure_Mat1x2(0.,-1.);
			var a15 = this72;
			var this73 = new geom_structure_Mat1x2(0.,0.);
			var b11 = this73;
			var dx4 = a15.x - b11.x;
			var dy4 = a15.y - b11.y;
			left39 = Math.atan2(dy4,dx4);
		} catch( ex76 ) {
			haxe_CallStack.lastException = ex76;
			left39 = "exception: " + Std.string(((ex76) instanceof js__$Boot_HaxeError) ? ex76.val : ex76) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right38;
		try {
			right38 = -Math.PI / 2;
		} catch( ex77 ) {
			haxe_CallStack.lastException = ex77;
			right38 = "exception: " + Std.string(((ex77) instanceof js__$Boot_HaxeError) ? ex77.val : ex77) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left39,right38)) {
			utest_Assert.pass("Matrix1x2.hx:496 [OK] Matrix1x2.thetaDifference( Matrix1x2.south(),       Matrix1x2.zero ) == -Math.PI/2",{ lineNumber : 496, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.thetaDifference( Matrix1x2.south(),       Matrix1x2.zero ) == -Math.PI/2 --> Left side `" + Std.string(left39) + "` does not equal `" + Std.string(right38) + "`.",{ lineNumber : 496, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left40;
		try {
			var this74 = new geom_structure_Mat1x2(-1.,-1.);
			var a16 = this74;
			var this75 = new geom_structure_Mat1x2(0.,0.);
			var b12 = this75;
			var dx5 = a16.x - b12.x;
			var dy5 = a16.y - b12.y;
			left40 = Math.atan2(dy5,dx5);
		} catch( ex78 ) {
			haxe_CallStack.lastException = ex78;
			left40 = "exception: " + Std.string(((ex78) instanceof js__$Boot_HaxeError) ? ex78.val : ex78) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right39;
		try {
			right39 = -3 * Math.PI / 4;
		} catch( ex79 ) {
			haxe_CallStack.lastException = ex79;
			right39 = "exception: " + Std.string(((ex79) instanceof js__$Boot_HaxeError) ? ex79.val : ex79) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left40,right39)) {
			utest_Assert.pass("Matrix1x2.hx:497 [OK] Matrix1x2.thetaDifference( Matrix1x2.bottomLeft(),  Matrix1x2.zero ) == -3*Math.PI/4",{ lineNumber : 497, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.thetaDifference( Matrix1x2.bottomLeft(),  Matrix1x2.zero ) == -3*Math.PI/4 --> Left side `" + Std.string(left40) + "` does not equal `" + Std.string(right39) + "`.",{ lineNumber : 497, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left41;
		try {
			var this76 = new geom_structure_Mat1x2(-1.,0.);
			var a17 = this76;
			var this77 = new geom_structure_Mat1x2(0.,0.);
			var b13 = this77;
			var dx6 = a17.x - b13.x;
			var dy6 = a17.y - b13.y;
			left41 = Math.atan2(dy6,dx6);
		} catch( ex80 ) {
			haxe_CallStack.lastException = ex80;
			left41 = "exception: " + Std.string(((ex80) instanceof js__$Boot_HaxeError) ? ex80.val : ex80) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right40;
		try {
			right40 = Math.PI;
		} catch( ex81 ) {
			haxe_CallStack.lastException = ex81;
			right40 = "exception: " + Std.string(((ex81) instanceof js__$Boot_HaxeError) ? ex81.val : ex81) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left41,right40)) {
			utest_Assert.pass("Matrix1x2.hx:498 [OK] Matrix1x2.thetaDifference( Matrix1x2.west(),        Matrix1x2.zero ) == Math.PI",{ lineNumber : 498, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.thetaDifference( Matrix1x2.west(),        Matrix1x2.zero ) == Math.PI --> Left side `" + Std.string(left41) + "` does not equal `" + Std.string(right40) + "`.",{ lineNumber : 498, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left42;
		try {
			var this78 = new geom_structure_Mat1x2(-1.,1.);
			var a18 = this78;
			var this79 = new geom_structure_Mat1x2(0.,0.);
			var b14 = this79;
			var dx7 = a18.x - b14.x;
			var dy7 = a18.y - b14.y;
			left42 = Math.atan2(dy7,dx7);
		} catch( ex82 ) {
			haxe_CallStack.lastException = ex82;
			left42 = "exception: " + Std.string(((ex82) instanceof js__$Boot_HaxeError) ? ex82.val : ex82) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right41;
		try {
			right41 = 3 * Math.PI / 4;
		} catch( ex83 ) {
			haxe_CallStack.lastException = ex83;
			right41 = "exception: " + Std.string(((ex83) instanceof js__$Boot_HaxeError) ? ex83.val : ex83) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left42,right41)) {
			utest_Assert.pass("Matrix1x2.hx:499 [OK] Matrix1x2.thetaDifference( Matrix1x2.topLeft(),     Matrix1x2.zero ) == 3*Math.PI/4",{ lineNumber : 499, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.thetaDifference( Matrix1x2.topLeft(),     Matrix1x2.zero ) == 3*Math.PI/4 --> Left side `" + Std.string(left42) + "` does not equal `" + Std.string(right41) + "`.",{ lineNumber : 499, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left43;
		try {
			var this80 = new geom_structure_Mat1x2(0.,1.);
			var a19 = this80;
			var this81 = new geom_structure_Mat1x2(0.,0.);
			var b15 = this81;
			var dx8 = a19.x - b15.x;
			var dy8 = a19.y - b15.y;
			left43 = Math.atan2(dy8,dx8);
		} catch( ex84 ) {
			haxe_CallStack.lastException = ex84;
			left43 = "exception: " + Std.string(((ex84) instanceof js__$Boot_HaxeError) ? ex84.val : ex84) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right42;
		try {
			right42 = Math.PI / 2;
		} catch( ex85 ) {
			haxe_CallStack.lastException = ex85;
			right42 = "exception: " + Std.string(((ex85) instanceof js__$Boot_HaxeError) ? ex85.val : ex85) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left43,right42)) {
			utest_Assert.pass("Matrix1x2.hx:500 [OK] Matrix1x2.thetaDifference( Matrix1x2.north(),       Matrix1x2.zero ) == Math.PI/2",{ lineNumber : 500, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.thetaDifference( Matrix1x2.north(),       Matrix1x2.zero ) == Math.PI/2 --> Left side `" + Std.string(left43) + "` does not equal `" + Std.string(right42) + "`.",{ lineNumber : 500, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left44;
		try {
			var this82 = new geom_structure_Mat1x2(1.,1.);
			var a20 = this82;
			var this83 = new geom_structure_Mat1x2(0.,0.);
			var b16 = this83;
			var dx9 = a20.x - b16.x;
			var dy9 = a20.y - b16.y;
			left44 = Math.atan2(dy9,dx9);
		} catch( ex86 ) {
			haxe_CallStack.lastException = ex86;
			left44 = "exception: " + Std.string(((ex86) instanceof js__$Boot_HaxeError) ? ex86.val : ex86) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right43;
		try {
			right43 = Math.PI / 4;
		} catch( ex87 ) {
			haxe_CallStack.lastException = ex87;
			right43 = "exception: " + Std.string(((ex87) instanceof js__$Boot_HaxeError) ? ex87.val : ex87) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left44,right43)) {
			utest_Assert.pass("Matrix1x2.hx:501 [OK] Matrix1x2.thetaDifference( Matrix1x2.topRight(),    Matrix1x2.zero ) == Math.PI/4",{ lineNumber : 501, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.thetaDifference( Matrix1x2.topRight(),    Matrix1x2.zero ) == Math.PI/4 --> Left side `" + Std.string(left44) + "` does not equal `" + Std.string(right43) + "`.",{ lineNumber : 501, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left45;
		try {
			haxe_Log.trace("\"inTri\" untested",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x2_1"});
			left45 = true;
		} catch( ex88 ) {
			haxe_CallStack.lastException = ex88;
			left45 = "exception: " + Std.string(((ex88) instanceof js__$Boot_HaxeError) ? ex88.val : ex88) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right44;
		try {
			right44 = true;
		} catch( ex89 ) {
			haxe_CallStack.lastException = ex89;
			right44 = "exception: " + Std.string(((ex89) instanceof js__$Boot_HaxeError) ? ex89.val : ex89) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left45,right44)) {
			utest_Assert.pass("Matrix1x2.hx:512 [OK] ({ trace('\"inTri\" untested'); true; }) == true",{ lineNumber : 512, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"inTri\" untested'); true; }) == true --> Left side `" + Std.string(left45) + "` does not equal `" + Std.string(right44) + "`.",{ lineNumber : 512, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left46;
		try {
			haxe_Log.trace("\"inTri2\" untested",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x2_1"});
			left46 = true;
		} catch( ex90 ) {
			haxe_CallStack.lastException = ex90;
			left46 = "exception: " + Std.string(((ex90) instanceof js__$Boot_HaxeError) ? ex90.val : ex90) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right45;
		try {
			right45 = true;
		} catch( ex91 ) {
			haxe_CallStack.lastException = ex91;
			right45 = "exception: " + Std.string(((ex91) instanceof js__$Boot_HaxeError) ? ex91.val : ex91) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left46,right45)) {
			utest_Assert.pass("Matrix1x2.hx:525 [OK] ({ trace('\"inTri2\" untested'); true; }) == true",{ lineNumber : 525, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"inTri2\" untested'); true; }) == true --> Left side `" + Std.string(left46) + "` does not equal `" + Std.string(right45) + "`.",{ lineNumber : 525, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left47;
		try {
			var this84 = new geom_structure_Mat1x2(1.,1.);
			var a21 = this84;
			var v1 = 0.5;
			var this85 = new geom_structure_Mat1x2(a21.x * v1,a21.y * v1);
			var a22 = this85;
			var this86 = new geom_structure_Mat1x2(0.,0.);
			var b17 = this86;
			var this87 = new geom_structure_Mat1x2(1.,1.);
			var c1 = this87;
			var small = 0.0000000001;
			var minx = Math.min(b17.x,c1.x);
			var maxx = Math.max(b17.x,c1.x);
			var miny = Math.min(b17.y,c1.y);
			var maxy = Math.max(b17.y,c1.y);
			left47 = minx == maxx ? miny <= a22.y && a22.y <= maxy : miny == maxy ? minx <= a22.x && a22.x <= maxx : minx <= a22.x + small && a22.x - small <= maxx && miny <= a22.y + small && a22.y - small <= maxy;
		} catch( ex92 ) {
			haxe_CallStack.lastException = ex92;
			left47 = "exception: " + Std.string(((ex92) instanceof js__$Boot_HaxeError) ? ex92.val : ex92) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right46;
		try {
			right46 = true;
		} catch( ex93 ) {
			haxe_CallStack.lastException = ex93;
			right46 = "exception: " + Std.string(((ex93) instanceof js__$Boot_HaxeError) ? ex93.val : ex93) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left47,right46)) {
			utest_Assert.pass("Matrix1x2.hx:549 [OK] ({\nvar a = Matrix1x2.topRight()/2;\nvar b = Matrix1x2.zero;\nvar c = Matrix1x2.topRight();\na.inRect( b, c ); }) == true",{ lineNumber : 549, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x2.topRight()/2;\nvar b = Matrix1x2.zero;\nvar c = Matrix1x2.topRight();\na.inRect( b, c ); }) == true --> Left side `" + Std.string(left47) + "` does not equal `" + Std.string(right46) + "`.",{ lineNumber : 549, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left48;
		try {
			var this88 = new geom_structure_Mat1x2(-1.,-1.);
			var a23 = this88;
			var v2 = 0.5;
			var this89 = new geom_structure_Mat1x2(a23.x * v2,a23.y * v2);
			var a24 = this89;
			var this90 = new geom_structure_Mat1x2(0.,0.);
			var b18 = this90;
			var this91 = new geom_structure_Mat1x2(1.,1.);
			var c2 = this91;
			var small1 = 0.0000000001;
			var minx1 = Math.min(b18.x,c2.x);
			var maxx1 = Math.max(b18.x,c2.x);
			var miny1 = Math.min(b18.y,c2.y);
			var maxy1 = Math.max(b18.y,c2.y);
			left48 = minx1 == maxx1 ? miny1 <= a24.y && a24.y <= maxy1 : miny1 == maxy1 ? minx1 <= a24.x && a24.x <= maxx1 : minx1 <= a24.x + small1 && a24.x - small1 <= maxx1 && miny1 <= a24.y + small1 && a24.y - small1 <= maxy1;
		} catch( ex94 ) {
			haxe_CallStack.lastException = ex94;
			left48 = "exception: " + Std.string(((ex94) instanceof js__$Boot_HaxeError) ? ex94.val : ex94) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right47;
		try {
			right47 = false;
		} catch( ex95 ) {
			haxe_CallStack.lastException = ex95;
			right47 = "exception: " + Std.string(((ex95) instanceof js__$Boot_HaxeError) ? ex95.val : ex95) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left48,right47)) {
			utest_Assert.pass("Matrix1x2.hx:554 [OK] ({\nvar a = Matrix1x2.bottomLeft()/2;\nvar b = Matrix1x2.zero;\nvar c = Matrix1x2.topRight();\na.inRect( b, c ); }) == false",{ lineNumber : 554, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x2.bottomLeft()/2;\nvar b = Matrix1x2.zero;\nvar c = Matrix1x2.topRight();\na.inRect( b, c ); }) == false --> Left side `" + Std.string(left48) + "` does not equal `" + Std.string(right47) + "`.",{ lineNumber : 554, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left49;
		try {
			var this92 = new geom_structure_Mat1x2(-1.,-1.);
			var a25 = this92;
			var v3 = 0.5;
			var this93 = new geom_structure_Mat1x2(a25.x * v3,a25.y * v3);
			var a26 = this93;
			var this94 = new geom_structure_Mat1x2(1.,-1.);
			var b19 = this94;
			var this95 = new geom_structure_Mat1x2(0.,0.);
			var c3 = this95;
			var small2 = 0.0000000001;
			var minx2 = Math.min(b19.x,c3.x);
			var maxx2 = Math.max(b19.x,c3.x);
			var miny2 = Math.min(b19.y,c3.y);
			var maxy2 = Math.max(b19.y,c3.y);
			left49 = minx2 == maxx2 ? miny2 <= a26.y && a26.y <= maxy2 : miny2 == maxy2 ? minx2 <= a26.x && a26.x <= maxx2 : minx2 <= a26.x + small2 && a26.x - small2 <= maxx2 && miny2 <= a26.y + small2 && a26.y - small2 <= maxy2;
		} catch( ex96 ) {
			haxe_CallStack.lastException = ex96;
			left49 = "exception: " + Std.string(((ex96) instanceof js__$Boot_HaxeError) ? ex96.val : ex96) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right48;
		try {
			right48 = false;
		} catch( ex97 ) {
			haxe_CallStack.lastException = ex97;
			right48 = "exception: " + Std.string(((ex97) instanceof js__$Boot_HaxeError) ? ex97.val : ex97) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left49,right48)) {
			utest_Assert.pass("Matrix1x2.hx:559 [OK] ({\nvar a = Matrix1x2.bottomLeft()/2;\nvar b = Matrix1x2.bottomRight();\nvar c = Matrix1x2.zero;\na.inRect( b, c ); }) == false",{ lineNumber : 559, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x2.bottomLeft()/2;\nvar b = Matrix1x2.bottomRight();\nvar c = Matrix1x2.zero;\na.inRect( b, c ); }) == false --> Left side `" + Std.string(left49) + "` does not equal `" + Std.string(right48) + "`.",{ lineNumber : 559, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left50;
		try {
			var this96 = new geom_structure_Mat1x2(1.,-1.);
			var a27 = this96;
			var v4 = 0.5;
			var this97 = new geom_structure_Mat1x2(a27.x * v4,a27.y * v4);
			var a28 = this97;
			var this98 = new geom_structure_Mat1x2(1.,-1.);
			var b20 = this98;
			var this99 = new geom_structure_Mat1x2(0.,0.);
			var c4 = this99;
			var small3 = 0.0000000001;
			var minx3 = Math.min(b20.x,c4.x);
			var maxx3 = Math.max(b20.x,c4.x);
			var miny3 = Math.min(b20.y,c4.y);
			var maxy3 = Math.max(b20.y,c4.y);
			left50 = minx3 == maxx3 ? miny3 <= a28.y && a28.y <= maxy3 : miny3 == maxy3 ? minx3 <= a28.x && a28.x <= maxx3 : minx3 <= a28.x + small3 && a28.x - small3 <= maxx3 && miny3 <= a28.y + small3 && a28.y - small3 <= maxy3;
		} catch( ex98 ) {
			haxe_CallStack.lastException = ex98;
			left50 = "exception: " + Std.string(((ex98) instanceof js__$Boot_HaxeError) ? ex98.val : ex98) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right49;
		try {
			right49 = true;
		} catch( ex99 ) {
			haxe_CallStack.lastException = ex99;
			right49 = "exception: " + Std.string(((ex99) instanceof js__$Boot_HaxeError) ? ex99.val : ex99) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left50,right49)) {
			utest_Assert.pass("Matrix1x2.hx:564 [OK] ({\nvar a = Matrix1x2.bottomRight()/2;\nvar b = Matrix1x2.bottomRight();\nvar c = Matrix1x2.zero;\na.inRect( b, c ); }) == true",{ lineNumber : 564, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x2.bottomRight()/2;\nvar b = Matrix1x2.bottomRight();\nvar c = Matrix1x2.zero;\na.inRect( b, c ); }) == true --> Left side `" + Std.string(left50) + "` does not equal `" + Std.string(right49) + "`.",{ lineNumber : 564, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left51;
		try {
			var this100 = new geom_structure_Mat1x2(1.,0.);
			var l = this100;
			var this101 = new geom_structure_Mat1x2(2.,1.);
			var t = this101;
			var this102 = new geom_structure_Mat1x2(4.,0.);
			var r = this102;
			var this103 = new geom_structure_Mat1x2(3.,-1.);
			var b21 = this103;
			left51 = (!((l.y - t.y) * (r.x - t.x) + (t.x - l.x) * (r.y - t.y) >= 0) && (l.y - b21.y) * (r.x - b21.x) + (b21.x - l.x) * (r.y - b21.y) >= 0) == true;
		} catch( ex100 ) {
			haxe_CallStack.lastException = ex100;
			left51 = "exception: " + Std.string(((ex100) instanceof js__$Boot_HaxeError) ? ex100.val : ex100) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right50;
		try {
			right50 = true;
		} catch( ex101 ) {
			haxe_CallStack.lastException = ex101;
			right50 = "exception: " + Std.string(((ex101) instanceof js__$Boot_HaxeError) ? ex101.val : ex101) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left51,right50)) {
			utest_Assert.pass("Matrix1x2.hx:589 [OK] ({\nvar l = new Matrix1x2( { x: 1., y: 0. });\nvar t = new Matrix1x2( { x: 2., y: 1. });\nvar r = new Matrix1x2( { x: 4., y: 0. });\nvar b = new Matrix1x2( { x: 3., y: -1. });\n(!Matrix1x2.convex( l, t, r ) && Matrix1x2.convex( l, b, r )) == true;\n}) == true",{ lineNumber : 589, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar l = new Matrix1x2( { x: 1., y: 0. });\nvar t = new Matrix1x2( { x: 2., y: 1. });\nvar r = new Matrix1x2( { x: 4., y: 0. });\nvar b = new Matrix1x2( { x: 3., y: -1. });\n(!Matrix1x2.convex( l, t, r ) && Matrix1x2.convex( l, b, r )) == true;\n}) == true --> Left side `" + Std.string(left51) + "` does not equal `" + Std.string(right50) + "`.",{ lineNumber : 589, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left52;
		try {
			haxe_Log.trace("\"cross\" untested",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x2_1"});
			left52 = true;
		} catch( ex102 ) {
			haxe_CallStack.lastException = ex102;
			left52 = "exception: " + Std.string(((ex102) instanceof js__$Boot_HaxeError) ? ex102.val : ex102) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right51;
		try {
			right51 = true;
		} catch( ex103 ) {
			haxe_CallStack.lastException = ex103;
			right51 = "exception: " + Std.string(((ex103) instanceof js__$Boot_HaxeError) ? ex103.val : ex103) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left52,right51)) {
			utest_Assert.pass("Matrix1x2.hx:604 [OK] ({ trace('\"cross\" untested'); true; }) == true",{ lineNumber : 604, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"cross\" untested'); true; }) == true --> Left side `" + Std.string(left52) + "` does not equal `" + Std.string(right51) + "`.",{ lineNumber : 604, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left53;
		try {
			var this104 = new geom_structure_Mat1x2(1.,0.);
			var this105 = this104;
			left53 = Math.atan2(this105.y,this105.x);
		} catch( ex104 ) {
			haxe_CallStack.lastException = ex104;
			left53 = "exception: " + Std.string(((ex104) instanceof js__$Boot_HaxeError) ? ex104.val : ex104) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right52;
		try {
			right52 = 0.;
		} catch( ex105 ) {
			haxe_CallStack.lastException = ex105;
			right52 = "exception: " + Std.string(((ex105) instanceof js__$Boot_HaxeError) ? ex105.val : ex105) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left53,right52)) {
			utest_Assert.pass("Matrix1x2.hx:613 [OK] Matrix1x2.east().theta()        == 0.",{ lineNumber : 613, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.east().theta()        == 0. --> Left side `" + Std.string(left53) + "` does not equal `" + Std.string(right52) + "`.",{ lineNumber : 613, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left54;
		try {
			var this106 = new geom_structure_Mat1x2(1.,-1.);
			var this107 = this106;
			left54 = Math.atan2(this107.y,this107.x);
		} catch( ex106 ) {
			haxe_CallStack.lastException = ex106;
			left54 = "exception: " + Std.string(((ex106) instanceof js__$Boot_HaxeError) ? ex106.val : ex106) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right53;
		try {
			right53 = -Math.PI / 4;
		} catch( ex107 ) {
			haxe_CallStack.lastException = ex107;
			right53 = "exception: " + Std.string(((ex107) instanceof js__$Boot_HaxeError) ? ex107.val : ex107) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left54,right53)) {
			utest_Assert.pass("Matrix1x2.hx:614 [OK] Matrix1x2.bottomRight().theta() == -Math.PI/4",{ lineNumber : 614, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.bottomRight().theta() == -Math.PI/4 --> Left side `" + Std.string(left54) + "` does not equal `" + Std.string(right53) + "`.",{ lineNumber : 614, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left55;
		try {
			var this108 = new geom_structure_Mat1x2(0.,-1.);
			var this109 = this108;
			left55 = Math.atan2(this109.y,this109.x);
		} catch( ex108 ) {
			haxe_CallStack.lastException = ex108;
			left55 = "exception: " + Std.string(((ex108) instanceof js__$Boot_HaxeError) ? ex108.val : ex108) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right54;
		try {
			right54 = -Math.PI / 2;
		} catch( ex109 ) {
			haxe_CallStack.lastException = ex109;
			right54 = "exception: " + Std.string(((ex109) instanceof js__$Boot_HaxeError) ? ex109.val : ex109) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left55,right54)) {
			utest_Assert.pass("Matrix1x2.hx:615 [OK] Matrix1x2.south().theta()       == -Math.PI/2",{ lineNumber : 615, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.south().theta()       == -Math.PI/2 --> Left side `" + Std.string(left55) + "` does not equal `" + Std.string(right54) + "`.",{ lineNumber : 615, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left56;
		try {
			var this110 = new geom_structure_Mat1x2(-1.,-1.);
			var this111 = this110;
			left56 = Math.atan2(this111.y,this111.x);
		} catch( ex110 ) {
			haxe_CallStack.lastException = ex110;
			left56 = "exception: " + Std.string(((ex110) instanceof js__$Boot_HaxeError) ? ex110.val : ex110) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right55;
		try {
			right55 = -3 * Math.PI / 4;
		} catch( ex111 ) {
			haxe_CallStack.lastException = ex111;
			right55 = "exception: " + Std.string(((ex111) instanceof js__$Boot_HaxeError) ? ex111.val : ex111) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left56,right55)) {
			utest_Assert.pass("Matrix1x2.hx:616 [OK] Matrix1x2.bottomLeft().theta()  == -3*Math.PI/4",{ lineNumber : 616, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.bottomLeft().theta()  == -3*Math.PI/4 --> Left side `" + Std.string(left56) + "` does not equal `" + Std.string(right55) + "`.",{ lineNumber : 616, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left57;
		try {
			var this112 = new geom_structure_Mat1x2(-1.,0.);
			var this113 = this112;
			left57 = Math.atan2(this113.y,this113.x);
		} catch( ex112 ) {
			haxe_CallStack.lastException = ex112;
			left57 = "exception: " + Std.string(((ex112) instanceof js__$Boot_HaxeError) ? ex112.val : ex112) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right56;
		try {
			right56 = Math.PI;
		} catch( ex113 ) {
			haxe_CallStack.lastException = ex113;
			right56 = "exception: " + Std.string(((ex113) instanceof js__$Boot_HaxeError) ? ex113.val : ex113) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left57,right56)) {
			utest_Assert.pass("Matrix1x2.hx:617 [OK] Matrix1x2.west().theta()        == Math.PI",{ lineNumber : 617, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.west().theta()        == Math.PI --> Left side `" + Std.string(left57) + "` does not equal `" + Std.string(right56) + "`.",{ lineNumber : 617, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left58;
		try {
			var this114 = new geom_structure_Mat1x2(-1.,1.);
			var this115 = this114;
			left58 = Math.atan2(this115.y,this115.x);
		} catch( ex114 ) {
			haxe_CallStack.lastException = ex114;
			left58 = "exception: " + Std.string(((ex114) instanceof js__$Boot_HaxeError) ? ex114.val : ex114) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right57;
		try {
			right57 = 3 * Math.PI / 4;
		} catch( ex115 ) {
			haxe_CallStack.lastException = ex115;
			right57 = "exception: " + Std.string(((ex115) instanceof js__$Boot_HaxeError) ? ex115.val : ex115) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left58,right57)) {
			utest_Assert.pass("Matrix1x2.hx:618 [OK] Matrix1x2.topLeft().theta()     == 3*Math.PI/4",{ lineNumber : 618, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.topLeft().theta()     == 3*Math.PI/4 --> Left side `" + Std.string(left58) + "` does not equal `" + Std.string(right57) + "`.",{ lineNumber : 618, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left59;
		try {
			var this116 = new geom_structure_Mat1x2(0.,1.);
			var this117 = this116;
			left59 = Math.atan2(this117.y,this117.x);
		} catch( ex116 ) {
			haxe_CallStack.lastException = ex116;
			left59 = "exception: " + Std.string(((ex116) instanceof js__$Boot_HaxeError) ? ex116.val : ex116) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right58;
		try {
			right58 = Math.PI / 2;
		} catch( ex117 ) {
			haxe_CallStack.lastException = ex117;
			right58 = "exception: " + Std.string(((ex117) instanceof js__$Boot_HaxeError) ? ex117.val : ex117) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left59,right58)) {
			utest_Assert.pass("Matrix1x2.hx:619 [OK] Matrix1x2.north().theta()       == Math.PI/2",{ lineNumber : 619, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.north().theta()       == Math.PI/2 --> Left side `" + Std.string(left59) + "` does not equal `" + Std.string(right58) + "`.",{ lineNumber : 619, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left60;
		try {
			var this118 = new geom_structure_Mat1x2(1.,1.);
			var this119 = this118;
			left60 = Math.atan2(this119.y,this119.x);
		} catch( ex118 ) {
			haxe_CallStack.lastException = ex118;
			left60 = "exception: " + Std.string(((ex118) instanceof js__$Boot_HaxeError) ? ex118.val : ex118) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right59;
		try {
			right59 = Math.PI / 4;
		} catch( ex119 ) {
			haxe_CallStack.lastException = ex119;
			right59 = "exception: " + Std.string(((ex119) instanceof js__$Boot_HaxeError) ? ex119.val : ex119) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left60,right59)) {
			utest_Assert.pass("Matrix1x2.hx:620 [OK] Matrix1x2.topRight().theta()    == Math.PI/4",{ lineNumber : 620, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.topRight().theta()    == Math.PI/4 --> Left side `" + Std.string(left60) + "` does not equal `" + Std.string(right59) + "`.",{ lineNumber : 620, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left61;
		try {
			var this120 = new geom_structure_Mat1x2(0.5,0.5);
			var a29 = this120;
			var this121 = new geom_structure_Mat1x2(0.5000001,0.5000001);
			var b22 = this121;
			var dx10 = a29.x - b22.x;
			if(dx10 < 0.00001 || dx10 > -1e-05) {
				var dy10 = a29.y - b22.y;
				left61 = dy10 < 0.00001 || dy10 > -1e-05;
			} else {
				left61 = false;
			}
		} catch( ex120 ) {
			haxe_CallStack.lastException = ex120;
			left61 = "exception: " + Std.string(((ex120) instanceof js__$Boot_HaxeError) ? ex120.val : ex120) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right60;
		try {
			right60 = true;
		} catch( ex121 ) {
			haxe_CallStack.lastException = ex121;
			right60 = "exception: " + Std.string(((ex121) instanceof js__$Boot_HaxeError) ? ex121.val : ex121) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left61,right60)) {
			utest_Assert.pass("Matrix1x2.hx:629 [OK] ({\nvar a = new Matrix1x2( { x: 0.5, y: 0.5 } );\nvar b = new Matrix1x2( { x: 0.5000001, y: 0.5000001 } );\na.close( b ); }) == true",{ lineNumber : 629, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x2( { x: 0.5, y: 0.5 } );\nvar b = new Matrix1x2( { x: 0.5000001, y: 0.5000001 } );\na.close( b ); }) == true --> Left side `" + Std.string(left61) + "` does not equal `" + Std.string(right60) + "`.",{ lineNumber : 629, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left62;
		try {
			var this122 = new geom_structure_Mat1x2(0.5,1.);
			var a30 = this122;
			var this123 = new geom_structure_Mat1x2(0.5000001,0.5000001);
			var b23 = this123;
			var dx11 = a30.x - b23.x;
			if(dx11 < 0.00001 || dx11 > -1e-05) {
				var dy11 = a30.y - b23.y;
				left62 = dy11 < 0.00001 || dy11 > -1e-05;
			} else {
				left62 = false;
			}
		} catch( ex122 ) {
			haxe_CallStack.lastException = ex122;
			left62 = "exception: " + Std.string(((ex122) instanceof js__$Boot_HaxeError) ? ex122.val : ex122) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right61;
		try {
			right61 = true;
		} catch( ex123 ) {
			haxe_CallStack.lastException = ex123;
			right61 = "exception: " + Std.string(((ex123) instanceof js__$Boot_HaxeError) ? ex123.val : ex123) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left62,right61)) {
			utest_Assert.pass("Matrix1x2.hx:641 [OK] ({\nvar a = new Matrix1x2( { x: 0.5, y: 1. } );\nvar b = new Matrix1x2( { x: 0.5000001, y: 0.5000001 } );\na.close( b ); }) == true",{ lineNumber : 641, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x2( { x: 0.5, y: 1. } );\nvar b = new Matrix1x2( { x: 0.5000001, y: 0.5000001 } );\na.close( b ); }) == true --> Left side `" + Std.string(left62) + "` does not equal `" + Std.string(right61) + "`.",{ lineNumber : 641, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left63;
		try {
			var this124 = new geom_structure_Mat1x2(1.,0.5);
			var a31 = this124;
			var this125 = new geom_structure_Mat1x2(0.5000001,0.5000001);
			var b24 = this125;
			var dx12 = a31.x - b24.x;
			if(dx12 < 0.00001 || dx12 > -1e-05) {
				var dy12 = a31.y - b24.y;
				left63 = dy12 < 0.00001 || dy12 > -1e-05;
			} else {
				left63 = false;
			}
		} catch( ex124 ) {
			haxe_CallStack.lastException = ex124;
			left63 = "exception: " + Std.string(((ex124) instanceof js__$Boot_HaxeError) ? ex124.val : ex124) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right62;
		try {
			right62 = true;
		} catch( ex125 ) {
			haxe_CallStack.lastException = ex125;
			right62 = "exception: " + Std.string(((ex125) instanceof js__$Boot_HaxeError) ? ex125.val : ex125) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left63,right62)) {
			utest_Assert.pass("Matrix1x2.hx:654 [OK] ({\nvar a = new Matrix1x2( { x: 1., y: 0.5 } );\nvar b = new Matrix1x2( { x: 0.5000001, y: 0.5000001 } );\na.close( b ); }) == true",{ lineNumber : 654, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x2( { x: 1., y: 0.5 } );\nvar b = new Matrix1x2( { x: 0.5000001, y: 0.5000001 } );\na.close( b ); }) == true --> Left side `" + Std.string(left63) + "` does not equal `" + Std.string(right62) + "`.",{ lineNumber : 654, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left64;
		try {
			var this126 = new geom_structure_Mat1x2(1.,1.);
			var a32 = this126;
			var omega = Math.PI / 2;
			var this127 = new geom_structure_Mat1x2(1.,1.);
			var a33 = this127;
			var v5 = 0.5;
			var this128 = new geom_structure_Mat1x2(a33.x * v5,a33.y * v5);
			var pivot = this128;
			var px = a32.x - pivot.x;
			var py = a32.y - pivot.y;
			var px2 = px * Math.cos(omega) - py * Math.sin(omega);
			py = py * Math.cos(omega) + px * Math.sin(omega);
			var this129 = new geom_structure_Mat1x2(px2 + pivot.x,py + pivot.y);
			var b25 = this129;
			var this130 = new geom_structure_Mat1x2(0.,1.);
			var b26 = this130;
			var dx13 = b25.x - b26.x;
			if(dx13 < 0.00001 || dx13 > -1e-05) {
				var dy13 = b25.y - b26.y;
				left64 = dy13 < 0.00001 || dy13 > -1e-05;
			} else {
				left64 = false;
			}
		} catch( ex126 ) {
			haxe_CallStack.lastException = ex126;
			left64 = "exception: " + Std.string(((ex126) instanceof js__$Boot_HaxeError) ? ex126.val : ex126) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right63;
		try {
			right63 = true;
		} catch( ex127 ) {
			haxe_CallStack.lastException = ex127;
			right63 = "exception: " + Std.string(((ex127) instanceof js__$Boot_HaxeError) ? ex127.val : ex127) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left64,right63)) {
			utest_Assert.pass("Matrix1x2.hx:667 [OK] ({\nvar a = Matrix1x2.topRight();\nvar b = a.pivotAround( Math.PI/2, Matrix1x2.topRight()/2 );\nb.close( Matrix1x2.north() ); }) == true",{ lineNumber : 667, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x2.topRight();\nvar b = a.pivotAround( Math.PI/2, Matrix1x2.topRight()/2 );\nb.close( Matrix1x2.north() ); }) == true --> Left side `" + Std.string(left64) + "` does not equal `" + Std.string(right63) + "`.",{ lineNumber : 667, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left65;
		try {
			haxe_Log.trace("\"toTPoint\" untested",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x2_1"});
			left65 = true;
		} catch( ex128 ) {
			haxe_CallStack.lastException = ex128;
			left65 = "exception: " + Std.string(((ex128) instanceof js__$Boot_HaxeError) ? ex128.val : ex128) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right64;
		try {
			right64 = true;
		} catch( ex129 ) {
			haxe_CallStack.lastException = ex129;
			right64 = "exception: " + Std.string(((ex129) instanceof js__$Boot_HaxeError) ? ex129.val : ex129) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left65,right64)) {
			utest_Assert.pass("Matrix1x2.hx:683 [OK] ({ trace('\"toTPoint\" untested'); true; }) == true",{ lineNumber : 683, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"toTPoint\" untested'); true; }) == true --> Left side `" + Std.string(left65) + "` does not equal `" + Std.string(right64) + "`.",{ lineNumber : 683, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left66;
		try {
			var this131 = new geom_structure_Mat1x2(1.,1.);
			var a34 = this131;
			var b27 = geom_matrix_Conversion._1x2toVec3(a34);
			var c5 = [1.,1.,1.].slice(0);
			left66 = equals_Equal.equals(b27,c5);
		} catch( ex130 ) {
			haxe_CallStack.lastException = ex130;
			left66 = "exception: " + Std.string(((ex130) instanceof js__$Boot_HaxeError) ? ex130.val : ex130) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right65;
		try {
			right65 = true;
		} catch( ex131 ) {
			haxe_CallStack.lastException = ex131;
			right65 = "exception: " + Std.string(((ex131) instanceof js__$Boot_HaxeError) ? ex131.val : ex131) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left66,right65)) {
			utest_Assert.pass("Matrix1x2.hx:691 [OK] ({\nvar a = Matrix1x2.unit;\nvar b: haxe.ds.Vector<Float> = a;\nvar c = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1. ]);\nEqual.equals( b, c ); }) == true",{ lineNumber : 691, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x2.unit;\nvar b: haxe.ds.Vector<Float> = a;\nvar c = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1. ]);\nEqual.equals( b, c ); }) == true --> Left side `" + Std.string(left66) + "` does not equal `" + Std.string(right65) + "`.",{ lineNumber : 691, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left67;
		try {
			var this132 = new geom_structure_Mat1x2(1.,1.);
			var a35 = this132;
			var b28 = [1.,1.,1.].slice(0);
			var c6 = geom_matrix_Conversion.Vectorto1x2(b28);
			left67 = a35.x == c6.x && a35.y == c6.y;
		} catch( ex132 ) {
			haxe_CallStack.lastException = ex132;
			left67 = "exception: " + Std.string(((ex132) instanceof js__$Boot_HaxeError) ? ex132.val : ex132) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right66;
		try {
			right66 = true;
		} catch( ex133 ) {
			haxe_CallStack.lastException = ex133;
			right66 = "exception: " + Std.string(((ex133) instanceof js__$Boot_HaxeError) ? ex133.val : ex133) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left67,right66)) {
			utest_Assert.pass("Matrix1x2.hx:703 [OK] ({\nvar a = Matrix1x2.unit;\nvar b = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1. ]);\nvar c: Matrix1x2 = b;\na == c;\n}) == true",{ lineNumber : 703, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x2.unit;\nvar b = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1. ]);\nvar c: Matrix1x2 = b;\na == c;\n}) == true --> Left side `" + Std.string(left67) + "` does not equal `" + Std.string(right66) + "`.",{ lineNumber : 703, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left68;
		try {
			var arr1 = [0.,1.,2.];
			var this133 = new geom_structure_Mat1x2(arr1[1],arr1[2]);
			left68 = this133;
		} catch( ex134 ) {
			haxe_CallStack.lastException = ex134;
			left68 = "exception: " + Std.string(((ex134) instanceof js__$Boot_HaxeError) ? ex134.val : ex134) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right67;
		try {
			var this134 = new geom_structure_Mat1x2(1.,2.);
			right67 = this134;
		} catch( ex135 ) {
			haxe_CallStack.lastException = ex135;
			right67 = "exception: " + Std.string(((ex135) instanceof js__$Boot_HaxeError) ? ex135.val : ex135) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left68,right67)) {
			utest_Assert.pass("Matrix1x2.hx:715 [OK] Matrix1x2.fromArrayPos( [ 0., 1., 2. ], 1) ==  new Matrix1x2({x:1.,y:2.})",{ lineNumber : 715, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x2.fromArrayPos( [ 0., 1., 2. ], 1) ==  new Matrix1x2({x:1.,y:2.}) --> Left side `" + Std.string(left68) + "` does not equal `" + Std.string(right67) + "`.",{ lineNumber : 715, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
		var left69;
		try {
			var this135 = new geom_structure_Mat1x2(5.,6.);
			var a36 = this135;
			var arr2 = [0.,1.,2.];
			arr2[1] = a36.x;
			arr2[2] = a36.y;
			left69 = arr2;
		} catch( ex136 ) {
			haxe_CallStack.lastException = ex136;
			left69 = "exception: " + Std.string(((ex136) instanceof js__$Boot_HaxeError) ? ex136.val : ex136) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right68;
		try {
			right68 = [0.,5.,6.];
		} catch( ex137 ) {
			haxe_CallStack.lastException = ex137;
			right68 = "exception: " + Std.string(((ex137) instanceof js__$Boot_HaxeError) ? ex137.val : ex137) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left69,right68)) {
			utest_Assert.pass("Matrix1x2.hx:724 [OK] ({\nvar a = new Matrix1x2( { x: 5., y: 6. } );\nvar arr = [ 0., 1., 2. ];\na.toArrayPos( arr, 1 ); }) == [ 0., 5., 6. ]",{ lineNumber : 724, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x2( { x: 5., y: 6. } );\nvar arr = [ 0., 1., 2. ];\na.toArrayPos( arr, 1 ); }) == [ 0., 5., 6. ] --> Left side `" + Std.string(left69) + "` does not equal `" + Std.string(right68) + "`.",{ lineNumber : 724, fileName : "src/geom/matrix/Matrix1x2.hx", className : "", methodName : ""});
		}
	}
	,testMatrix1x3_1: function() {
		var left;
		try {
			var this1 = new geom_structure_Mat1x3(1.,2.,3.);
			left = this1;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			var this2 = new geom_structure_Mat1x3(1.,2.,3.);
			var this3 = this2;
			var this4 = new geom_structure_Mat1x3(this3.x,this3.y,this3.z);
			right = this4;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("Matrix1x3.hx:20 [OK] Matrix1x3.counting == Matrix1x3.counting.clone()",{ lineNumber : 20, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x3.counting == Matrix1x3.counting.clone() --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 20, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left1;
		try {
			var this5 = new geom_structure_Mat1x3(1.,2.,3.);
			var m = this5;
			var arr = [];
			var i = HxOverrides.iter([m.x,m.y,m.z]);
			while(i.hasNext()) {
				var i1 = i.next();
				arr.push(i1);
			}
			left1 = [1.,2.,3.].toString() == arr.toString();
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			right1 = true;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left1,right1)) {
			utest_Assert.pass("Matrix1x3.hx:31 [OK] ({\nvar m = Matrix1x3.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.].toString() == arr.toString(); }) == true",{ lineNumber : 31, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar m = Matrix1x3.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.].toString() == arr.toString(); }) == true --> Left side `" + Std.string(left1) + "` does not equal `" + Std.string(right1) + "`.",{ lineNumber : 31, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left2;
		try {
			haxe_Log.trace("\"magnitude\" untested",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x3_1"});
			left2 = true;
		} catch( ex4 ) {
			haxe_CallStack.lastException = ex4;
			left2 = "exception: " + Std.string(((ex4) instanceof js__$Boot_HaxeError) ? ex4.val : ex4) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right2;
		try {
			right2 = true;
		} catch( ex5 ) {
			haxe_CallStack.lastException = ex5;
			right2 = "exception: " + Std.string(((ex5) instanceof js__$Boot_HaxeError) ? ex5.val : ex5) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left2,right2)) {
			utest_Assert.pass("Matrix1x3.hx:53 [OK] ({ trace('\"magnitude\" untested'); true; }) == true",{ lineNumber : 53, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"magnitude\" untested'); true; }) == true --> Left side `" + Std.string(left2) + "` does not equal `" + Std.string(right2) + "`.",{ lineNumber : 53, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left3;
		try {
			var this6 = new geom_structure_Mat1x3(0.,0.,0.);
			left3 = this6;
		} catch( ex6 ) {
			haxe_CallStack.lastException = ex6;
			left3 = "exception: " + Std.string(((ex6) instanceof js__$Boot_HaxeError) ? ex6.val : ex6) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right3;
		try {
			var this7 = new geom_structure_Mat1x3(0.,0.,0.);
			right3 = this7;
		} catch( ex7 ) {
			haxe_CallStack.lastException = ex7;
			right3 = "exception: " + Std.string(((ex7) instanceof js__$Boot_HaxeError) ? ex7.val : ex7) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left3,right3)) {
			utest_Assert.pass("Matrix1x3.hx:84 [OK] Matrix1x3.zero == new Matrix1x3({ x: 0., y: 0., z: 0. })",{ lineNumber : 84, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x3.zero == new Matrix1x3({ x: 0., y: 0., z: 0. }) --> Left side `" + Std.string(left3) + "` does not equal `" + Std.string(right3) + "`.",{ lineNumber : 84, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left4;
		try {
			var this8 = new geom_structure_Mat1x3(1.,1.,1.);
			left4 = this8;
		} catch( ex8 ) {
			haxe_CallStack.lastException = ex8;
			left4 = "exception: " + Std.string(((ex8) instanceof js__$Boot_HaxeError) ? ex8.val : ex8) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right4;
		try {
			var this9 = new geom_structure_Mat1x3(1.,1.,1.);
			right4 = this9;
		} catch( ex9 ) {
			haxe_CallStack.lastException = ex9;
			right4 = "exception: " + Std.string(((ex9) instanceof js__$Boot_HaxeError) ? ex9.val : ex9) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left4,right4)) {
			utest_Assert.pass("Matrix1x3.hx:99 [OK] Matrix1x3.unit == new Matrix1x3({ x: 1., y: 1., z: 1. })",{ lineNumber : 99, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x3.unit == new Matrix1x3({ x: 1., y: 1., z: 1. }) --> Left side `" + Std.string(left4) + "` does not equal `" + Std.string(right4) + "`.",{ lineNumber : 99, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left5;
		try {
			var this10 = new geom_structure_Mat1x3(1.,1.,1.);
			var a = this10;
			var this11 = new geom_structure_Mat1x3(-a.x,-a.y,-a.z);
			left5 = this11;
		} catch( ex10 ) {
			haxe_CallStack.lastException = ex10;
			left5 = "exception: " + Std.string(((ex10) instanceof js__$Boot_HaxeError) ? ex10.val : ex10) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right5;
		try {
			var this12 = new geom_structure_Mat1x3(-1.,-1.,-1.);
			right5 = this12;
		} catch( ex11 ) {
			haxe_CallStack.lastException = ex11;
			right5 = "exception: " + Std.string(((ex11) instanceof js__$Boot_HaxeError) ? ex11.val : ex11) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left5,right5)) {
			utest_Assert.pass("Matrix1x3.hx:114 [OK] Matrix1x3.minus1 == new Matrix1x3({ x: -1., y: -1., z: -1. })",{ lineNumber : 114, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x3.minus1 == new Matrix1x3({ x: -1., y: -1., z: -1. }) --> Left side `" + Std.string(left5) + "` does not equal `" + Std.string(right5) + "`.",{ lineNumber : 114, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left6;
		try {
			var this13 = new geom_structure_Mat1x3(1.,2.,3.);
			left6 = this13;
		} catch( ex12 ) {
			haxe_CallStack.lastException = ex12;
			left6 = "exception: " + Std.string(((ex12) instanceof js__$Boot_HaxeError) ? ex12.val : ex12) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right6;
		try {
			var this14 = new geom_structure_Mat1x3(1.,2.,3.);
			right6 = this14;
		} catch( ex13 ) {
			haxe_CallStack.lastException = ex13;
			right6 = "exception: " + Std.string(((ex13) instanceof js__$Boot_HaxeError) ? ex13.val : ex13) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left6,right6)) {
			utest_Assert.pass("Matrix1x3.hx:124 [OK] Matrix1x3.counting == new Matrix1x3({ x: 1., y: 2., z: 3. })",{ lineNumber : 124, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x3.counting == new Matrix1x3({ x: 1., y: 2., z: 3. }) --> Left side `" + Std.string(left6) + "` does not equal `" + Std.string(right6) + "`.",{ lineNumber : 124, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left7;
		try {
			var this15 = new geom_structure_Mat1x3(0.,0.,0.);
			var out = this15;
			out.x = 1.;
			out.y = 1.;
			out.z = 1.;
			left7 = out;
		} catch( ex14 ) {
			haxe_CallStack.lastException = ex14;
			left7 = "exception: " + Std.string(((ex14) instanceof js__$Boot_HaxeError) ? ex14.val : ex14) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right7;
		try {
			var this16 = new geom_structure_Mat1x3(1.,1.,1.);
			right7 = this16;
		} catch( ex15 ) {
			haxe_CallStack.lastException = ex15;
			right7 = "exception: " + Std.string(((ex15) instanceof js__$Boot_HaxeError) ? ex15.val : ex15) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left7,right7)) {
			utest_Assert.pass("Matrix1x3.hx:142 [OK] Matrix1x3.identity( Matrix1x3.zero ) == new Matrix1x3({ x: 1., y: 1., z: 1. })",{ lineNumber : 142, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x3.identity( Matrix1x3.zero ) == new Matrix1x3({ x: 1., y: 1., z: 1. }) --> Left side `" + Std.string(left7) + "` does not equal `" + Std.string(right7) + "`.",{ lineNumber : 142, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left8;
		try {
			var this17 = new geom_structure_Mat1x3(1.,2.,3.);
			var a1 = this17;
			var this18 = new geom_structure_Mat1x3(0.,0.,0.);
			var b = this18;
			b.x = a1.x;
			b.y = a1.y;
			b.z = a1.z;
			var c = b;
			var delta = 0.0000001;
			left8 = !(Math.abs(a1.x - c.x) >= delta || Math.abs(a1.y - c.y) >= delta || Math.abs(a1.z - c.z) >= delta);
		} catch( ex16 ) {
			haxe_CallStack.lastException = ex16;
			left8 = "exception: " + Std.string(((ex16) instanceof js__$Boot_HaxeError) ? ex16.val : ex16) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right8;
		try {
			right8 = true;
		} catch( ex17 ) {
			haxe_CallStack.lastException = ex17;
			right8 = "exception: " + Std.string(((ex17) instanceof js__$Boot_HaxeError) ? ex17.val : ex17) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left8,right8)) {
			utest_Assert.pass("Matrix1x3.hx:154 [OK] ({\nvar a = new Matrix1x3({ x: 1., y: 2., z: 3. });\nvar b = Matrix1x3.zero;\nvar c = Matrix1x3.copy( a, b );\na == c; }) == true",{ lineNumber : 154, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x3({ x: 1., y: 2., z: 3. });\nvar b = Matrix1x3.zero;\nvar c = Matrix1x3.copy( a, b );\na == c; }) == true --> Left side `" + Std.string(left8) + "` does not equal `" + Std.string(right8) + "`.",{ lineNumber : 154, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left9;
		try {
			haxe_Log.trace("\"magnitude\" untested",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x3_1"});
			left9 = true;
		} catch( ex18 ) {
			haxe_CallStack.lastException = ex18;
			left9 = "exception: " + Std.string(((ex18) instanceof js__$Boot_HaxeError) ? ex18.val : ex18) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right9;
		try {
			right9 = true;
		} catch( ex19 ) {
			haxe_CallStack.lastException = ex19;
			right9 = "exception: " + Std.string(((ex19) instanceof js__$Boot_HaxeError) ? ex19.val : ex19) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left9,right9)) {
			utest_Assert.pass("Matrix1x3.hx:170 [OK] ({ trace('\"magnitude\" untested'); true; }) == true",{ lineNumber : 170, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"magnitude\" untested'); true; }) == true --> Left side `" + Std.string(left9) + "` does not equal `" + Std.string(right9) + "`.",{ lineNumber : 170, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left10;
		try {
			var this19 = new geom_structure_Mat1x3(1.,2.,3.);
			var a2 = this19;
			var this20 = new geom_structure_Mat1x3(1.,2.,4.);
			var b1 = this20;
			var delta1 = 0.0000001;
			left10 = !(!(Math.abs(a2.x - b1.x) >= delta1 || Math.abs(a2.y - b1.y) >= delta1 || Math.abs(a2.z - b1.z) >= delta1));
		} catch( ex20 ) {
			haxe_CallStack.lastException = ex20;
			left10 = "exception: " + Std.string(((ex20) instanceof js__$Boot_HaxeError) ? ex20.val : ex20) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right10;
		try {
			right10 = true;
		} catch( ex21 ) {
			haxe_CallStack.lastException = ex21;
			right10 = "exception: " + Std.string(((ex21) instanceof js__$Boot_HaxeError) ? ex21.val : ex21) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left10,right10)) {
			utest_Assert.pass("Matrix1x3.hx:219 [OK] ({\nvar a = new Matrix1x3({ x: 1., y: 2., z: 3. });\nvar b = new Matrix1x3({ x: 1., y: 2., z: 4. });\na != b; }) == true",{ lineNumber : 219, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x3({ x: 1., y: 2., z: 3. });\nvar b = new Matrix1x3({ x: 1., y: 2., z: 4. });\na != b; }) == true --> Left side `" + Std.string(left10) + "` does not equal `" + Std.string(right10) + "`.",{ lineNumber : 219, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left11;
		try {
			var this21 = new geom_structure_Mat1x3(1.,2.,3.);
			var a3 = this21;
			var this22 = new geom_structure_Mat1x3(-a3.x,-a3.y,-a3.z);
			var b2 = this22;
			var this23 = new geom_structure_Mat1x3(-1.,-2.,-3.);
			var b3 = this23;
			var delta2 = 0.0000001;
			left11 = !(Math.abs(b2.x - b3.x) >= delta2 || Math.abs(b2.y - b3.y) >= delta2 || Math.abs(b2.z - b3.z) >= delta2);
		} catch( ex22 ) {
			haxe_CallStack.lastException = ex22;
			left11 = "exception: " + Std.string(((ex22) instanceof js__$Boot_HaxeError) ? ex22.val : ex22) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right11;
		try {
			right11 = true;
		} catch( ex23 ) {
			haxe_CallStack.lastException = ex23;
			right11 = "exception: " + Std.string(((ex23) instanceof js__$Boot_HaxeError) ? ex23.val : ex23) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left11,right11)) {
			utest_Assert.pass("Matrix1x3.hx:235 [OK] ({\nvar a = new Matrix1x3({ x: 1., y: 2., z: 3. });\nvar b = -a;\nb == new Matrix1x3({ x: -1., y: -2., z: -3. }); }) == true",{ lineNumber : 235, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x3({ x: 1., y: 2., z: 3. });\nvar b = -a;\nb == new Matrix1x3({ x: -1., y: -2., z: -3. }); }) == true --> Left side `" + Std.string(left11) + "` does not equal `" + Std.string(right11) + "`.",{ lineNumber : 235, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left12;
		try {
			var this24 = new geom_structure_Mat1x3(1.,1.,1.);
			var a4 = this24;
			var this25 = new geom_structure_Mat1x3(a4.x - a4.x,a4.y - a4.y,a4.z - a4.z);
			var a5 = this25;
			var this26 = new geom_structure_Mat1x3(0.,0.,0.);
			var b4 = this26;
			var delta3 = 0.0000001;
			left12 = !(Math.abs(a5.x - b4.x) >= delta3 || Math.abs(a5.y - b4.y) >= delta3 || Math.abs(a5.z - b4.z) >= delta3);
		} catch( ex24 ) {
			haxe_CallStack.lastException = ex24;
			left12 = "exception: " + Std.string(((ex24) instanceof js__$Boot_HaxeError) ? ex24.val : ex24) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right12;
		try {
			right12 = true;
		} catch( ex25 ) {
			haxe_CallStack.lastException = ex25;
			right12 = "exception: " + Std.string(((ex25) instanceof js__$Boot_HaxeError) ? ex25.val : ex25) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left12,right12)) {
			utest_Assert.pass("Matrix1x3.hx:254 [OK] ({\nvar a = Matrix1x3.unit;\na - a == Matrix1x3.zero;\n}) == true",{ lineNumber : 254, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x3.unit;\na - a == Matrix1x3.zero;\n}) == true --> Left side `" + Std.string(left12) + "` does not equal `" + Std.string(right12) + "`.",{ lineNumber : 254, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left13;
		try {
			var this27 = new geom_structure_Mat1x3(1.,1.,1.);
			var a6 = this27;
			var this28 = new geom_structure_Mat1x3(a6.x + a6.x,a6.y + a6.y,a6.z + a6.z);
			var a7 = this28;
			var this29 = new geom_structure_Mat1x3(2.,2.,2.);
			var b5 = this29;
			var delta4 = 0.0000001;
			left13 = !(Math.abs(a7.x - b5.x) >= delta4 || Math.abs(a7.y - b5.y) >= delta4 || Math.abs(a7.z - b5.z) >= delta4);
		} catch( ex26 ) {
			haxe_CallStack.lastException = ex26;
			left13 = "exception: " + Std.string(((ex26) instanceof js__$Boot_HaxeError) ? ex26.val : ex26) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right13;
		try {
			right13 = true;
		} catch( ex27 ) {
			haxe_CallStack.lastException = ex27;
			right13 = "exception: " + Std.string(((ex27) instanceof js__$Boot_HaxeError) ? ex27.val : ex27) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left13,right13)) {
			utest_Assert.pass("Matrix1x3.hx:272 [OK] ({\nvar a = Matrix1x3.unit;\na + a == new Matrix1x3({ x: 2., y: 2., z: 2. });\n}) == true",{ lineNumber : 272, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x3.unit;\na + a == new Matrix1x3({ x: 2., y: 2., z: 2. });\n}) == true --> Left side `" + Std.string(left13) + "` does not equal `" + Std.string(right13) + "`.",{ lineNumber : 272, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left14;
		try {
			var this30 = new geom_structure_Mat1x3(1.,2.,3.);
			var a8 = this30;
			var this31 = new geom_structure_Mat1x3(a8.x * 2,a8.y * 2,a8.z * 2);
			var b6 = this31;
			var this32 = new geom_structure_Mat1x3(2.,4.,6.);
			var b7 = this32;
			var delta5 = 0.0000001;
			left14 = !(Math.abs(b6.x - b7.x) >= delta5 || Math.abs(b6.y - b7.y) >= delta5 || Math.abs(b6.z - b7.z) >= delta5);
		} catch( ex28 ) {
			haxe_CallStack.lastException = ex28;
			left14 = "exception: " + Std.string(((ex28) instanceof js__$Boot_HaxeError) ? ex28.val : ex28) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right14;
		try {
			right14 = true;
		} catch( ex29 ) {
			haxe_CallStack.lastException = ex29;
			right14 = "exception: " + Std.string(((ex29) instanceof js__$Boot_HaxeError) ? ex29.val : ex29) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left14,right14)) {
			utest_Assert.pass("Matrix1x3.hx:291 [OK] ({\nvar a = new Matrix1x3({ x: 1., y: 2., z: 3. });\nvar b = a * 2;\nb == new Matrix1x3({ x: 2., y: 4., z: 6. }); }) == true",{ lineNumber : 291, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x3({ x: 1., y: 2., z: 3. });\nvar b = a * 2;\nb == new Matrix1x3({ x: 2., y: 4., z: 6. }); }) == true --> Left side `" + Std.string(left14) + "` does not equal `" + Std.string(right14) + "`.",{ lineNumber : 291, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left15;
		try {
			var this33 = new geom_structure_Mat1x3(1.,2.,3.);
			var a9 = this33;
			var this34 = new geom_structure_Mat1x3(1.,2.,3.);
			var b8 = this34;
			var delta6 = 0.0000001;
			left15 = !(Math.abs(a9.x - b8.x) >= delta6 || Math.abs(a9.y - b8.y) >= delta6 || Math.abs(a9.z - b8.z) >= delta6);
		} catch( ex30 ) {
			haxe_CallStack.lastException = ex30;
			left15 = "exception: " + Std.string(((ex30) instanceof js__$Boot_HaxeError) ? ex30.val : ex30) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right15;
		try {
			right15 = true;
		} catch( ex31 ) {
			haxe_CallStack.lastException = ex31;
			right15 = "exception: " + Std.string(((ex31) instanceof js__$Boot_HaxeError) ? ex31.val : ex31) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left15,right15)) {
			utest_Assert.pass("Matrix1x3.hx:310 [OK] ({\nvar a = new Matrix1x3({ x: 1., y: 2., z: 3. });\nvar b = new Matrix1x3({ x: 1., y: 2., z: 3. });\na == b; }) == true",{ lineNumber : 310, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x3({ x: 1., y: 2., z: 3. });\nvar b = new Matrix1x3({ x: 1., y: 2., z: 3. });\na == b; }) == true --> Left side `" + Std.string(left15) + "` does not equal `" + Std.string(right15) + "`.",{ lineNumber : 310, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left16;
		try {
			var this35 = new geom_structure_Mat1x3(1.,1.,1.);
			var a10 = this35;
			var b9 = [1.,1.,1.].slice(0);
			var c1 = geom_matrix_Conversion.Vectorto1x3(b9);
			var b10 = geom_matrix_Conversion.Vectorto1x3(b9);
			var delta7 = 0.0000001;
			left16 = !(Math.abs(a10.x - b10.x) >= delta7 || Math.abs(a10.y - b10.y) >= delta7 || Math.abs(a10.z - b10.z) >= delta7);
		} catch( ex32 ) {
			haxe_CallStack.lastException = ex32;
			left16 = "exception: " + Std.string(((ex32) instanceof js__$Boot_HaxeError) ? ex32.val : ex32) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right16;
		try {
			right16 = true;
		} catch( ex33 ) {
			haxe_CallStack.lastException = ex33;
			right16 = "exception: " + Std.string(((ex33) instanceof js__$Boot_HaxeError) ? ex33.val : ex33) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left16,right16)) {
			utest_Assert.pass("Matrix1x3.hx:335 [OK] ({\nvar a = Matrix1x3.unit;\nvar b = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1. ]);\nvar c: Matrix1x3 = b;\na == b; }) == true",{ lineNumber : 335, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x3.unit;\nvar b = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1. ]);\nvar c: Matrix1x3 = b;\na == b; }) == true --> Left side `" + Std.string(left16) + "` does not equal `" + Std.string(right16) + "`.",{ lineNumber : 335, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left17;
		try {
			var this36 = new geom_structure_Mat1x3(1.,1.,1.);
			var a11 = this36;
			var b11 = geom_matrix_Conversion._1x3toVector(a11);
			var c2 = [1.,1.,1.].slice(0);
			left17 = equals_Equal.equals(b11,c2);
		} catch( ex34 ) {
			haxe_CallStack.lastException = ex34;
			left17 = "exception: " + Std.string(((ex34) instanceof js__$Boot_HaxeError) ? ex34.val : ex34) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right17;
		try {
			right17 = true;
		} catch( ex35 ) {
			haxe_CallStack.lastException = ex35;
			right17 = "exception: " + Std.string(((ex35) instanceof js__$Boot_HaxeError) ? ex35.val : ex35) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left17,right17)) {
			utest_Assert.pass("Matrix1x3.hx:350 [OK] ({\nvar a = Matrix1x3.unit;\nvar b: haxe.ds.Vector<Float> = a;\nvar c = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1. ]);\nEqual.equals( b, c ); }) == true",{ lineNumber : 350, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x3.unit;\nvar b: haxe.ds.Vector<Float> = a;\nvar c = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1. ]);\nEqual.equals( b, c ); }) == true --> Left side `" + Std.string(left17) + "` does not equal `" + Std.string(right17) + "`.",{ lineNumber : 350, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left18;
		try {
			var this37 = new geom_structure_Mat1x3(1.,1.,1.);
			var a12 = this37;
			var b12 = geom_matrix_Conversion.Arrayto1x3([1.,1.,1.]);
			left18 = equals_Equal.equals(a12,b12);
		} catch( ex36 ) {
			haxe_CallStack.lastException = ex36;
			left18 = "exception: " + Std.string(((ex36) instanceof js__$Boot_HaxeError) ? ex36.val : ex36) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right18;
		try {
			right18 = true;
		} catch( ex37 ) {
			haxe_CallStack.lastException = ex37;
			right18 = "exception: " + Std.string(((ex37) instanceof js__$Boot_HaxeError) ? ex37.val : ex37) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left18,right18)) {
			utest_Assert.pass("Matrix1x3.hx:362 [OK] ({\nvar a = Matrix1x3.unit;\nvar b: Matrix1x3 = [ 1., 1., 1. ];\nEqual.equals( a, b ); }) == true",{ lineNumber : 362, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x3.unit;\nvar b: Matrix1x3 = [ 1., 1., 1. ];\nEqual.equals( a, b ); }) == true --> Left side `" + Std.string(left18) + "` does not equal `" + Std.string(right18) + "`.",{ lineNumber : 362, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
		var left19;
		try {
			var this38 = new geom_structure_Mat1x3(1.,1.,1.);
			var a13 = this38;
			var b13 = geom_matrix_Conversion._1x3toArray(a13);
			left19 = equals_Equal.equals(b13,[1.,1.,1.]);
		} catch( ex38 ) {
			haxe_CallStack.lastException = ex38;
			left19 = "exception: " + Std.string(((ex38) instanceof js__$Boot_HaxeError) ? ex38.val : ex38) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right19;
		try {
			right19 = true;
		} catch( ex39 ) {
			haxe_CallStack.lastException = ex39;
			right19 = "exception: " + Std.string(((ex39) instanceof js__$Boot_HaxeError) ? ex39.val : ex39) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left19,right19)) {
			utest_Assert.pass("Matrix1x3.hx:375 [OK] ({\nvar a = Matrix1x3.unit;\nvar b: Array<Float> = a;\nEqual.equals( b, [ 1., 1., 1. ] ); }) == true",{ lineNumber : 375, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x3.unit;\nvar b: Array<Float> = a;\nEqual.equals( b, [ 1., 1., 1. ] ); }) == true --> Left side `" + Std.string(left19) + "` does not equal `" + Std.string(right19) + "`.",{ lineNumber : 375, fileName : "src/geom/matrix/Matrix1x3.hx", className : "", methodName : ""});
		}
	}
	,testMatrix1x4_1: function() {
		var left;
		try {
			var this1 = new geom_structure_Mat1x4(1.,2.,3.,4.);
			left = this1;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			var this2 = new geom_structure_Mat1x4(1.,2.,3.,4.);
			var this3 = this2;
			var this4 = new geom_structure_Mat1x4(this3.x,this3.y,this3.z,this3.w);
			right = this4;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("Matrix1x4.hx:19 [OK] Matrix1x4.counting == Matrix1x4.counting.clone()",{ lineNumber : 19, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x4.counting == Matrix1x4.counting.clone() --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 19, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left1;
		try {
			var this5 = new geom_structure_Mat1x4(1.,2.,3.,4.);
			var m = this5;
			var arr = [];
			var arr1 = [m.x,m.y,m.z,m.w];
			var i = HxOverrides.iter(arr1);
			while(i.hasNext()) {
				var i1 = i.next();
				arr.push(i1);
			}
			left1 = [1.,2.,3.,4.].toString() == arr.toString();
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			right1 = true;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left1,right1)) {
			utest_Assert.pass("Matrix1x4.hx:28 [OK] ({\nvar m = Matrix1x4.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.,4.].toString() == arr.toString(); }) == true",{ lineNumber : 28, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar m = Matrix1x4.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.,4.].toString() == arr.toString(); }) == true --> Left side `" + Std.string(left1) + "` does not equal `" + Std.string(right1) + "`.",{ lineNumber : 28, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left2;
		try {
			haxe_Log.trace("\"magnitude\" untested",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x4_1"});
			left2 = true;
		} catch( ex4 ) {
			haxe_CallStack.lastException = ex4;
			left2 = "exception: " + Std.string(((ex4) instanceof js__$Boot_HaxeError) ? ex4.val : ex4) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right2;
		try {
			right2 = true;
		} catch( ex5 ) {
			haxe_CallStack.lastException = ex5;
			right2 = "exception: " + Std.string(((ex5) instanceof js__$Boot_HaxeError) ? ex5.val : ex5) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left2,right2)) {
			utest_Assert.pass("Matrix1x4.hx:50 [OK] ({ trace('\"magnitude\" untested'); true; }) == true",{ lineNumber : 50, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"magnitude\" untested'); true; }) == true --> Left side `" + Std.string(left2) + "` does not equal `" + Std.string(right2) + "`.",{ lineNumber : 50, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left3;
		try {
			var this6 = new geom_structure_Mat1x4(0.,0.,0.,0.);
			left3 = this6;
		} catch( ex6 ) {
			haxe_CallStack.lastException = ex6;
			left3 = "exception: " + Std.string(((ex6) instanceof js__$Boot_HaxeError) ? ex6.val : ex6) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right3;
		try {
			var this7 = new geom_structure_Mat1x4(0.,0.,0.,0.);
			right3 = this7;
		} catch( ex7 ) {
			haxe_CallStack.lastException = ex7;
			right3 = "exception: " + Std.string(((ex7) instanceof js__$Boot_HaxeError) ? ex7.val : ex7) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left3,right3)) {
			utest_Assert.pass("Matrix1x4.hx:82 [OK] Matrix1x4.zero == new Matrix1x4( { x: 0., y: 0., z: 0., w: 0. } )",{ lineNumber : 82, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x4.zero == new Matrix1x4( { x: 0., y: 0., z: 0., w: 0. } ) --> Left side `" + Std.string(left3) + "` does not equal `" + Std.string(right3) + "`.",{ lineNumber : 82, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left4;
		try {
			var this8 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			left4 = this8;
		} catch( ex8 ) {
			haxe_CallStack.lastException = ex8;
			left4 = "exception: " + Std.string(((ex8) instanceof js__$Boot_HaxeError) ? ex8.val : ex8) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right4;
		try {
			var this9 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			right4 = this9;
		} catch( ex9 ) {
			haxe_CallStack.lastException = ex9;
			right4 = "exception: " + Std.string(((ex9) instanceof js__$Boot_HaxeError) ? ex9.val : ex9) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left4,right4)) {
			utest_Assert.pass("Matrix1x4.hx:97 [OK] Matrix1x4.unit == new Matrix1x4( { x: 1., y: 1., z: 1., w: 1. } )",{ lineNumber : 97, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x4.unit == new Matrix1x4( { x: 1., y: 1., z: 1., w: 1. } ) --> Left side `" + Std.string(left4) + "` does not equal `" + Std.string(right4) + "`.",{ lineNumber : 97, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left5;
		try {
			var this10 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a = this10;
			var this11 = new geom_structure_Mat1x4(-a.x,-a.y,-a.z,-a.w);
			left5 = this11;
		} catch( ex10 ) {
			haxe_CallStack.lastException = ex10;
			left5 = "exception: " + Std.string(((ex10) instanceof js__$Boot_HaxeError) ? ex10.val : ex10) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right5;
		try {
			var this12 = new geom_structure_Mat1x4(-1.,-1.,-1.,-1.);
			right5 = this12;
		} catch( ex11 ) {
			haxe_CallStack.lastException = ex11;
			right5 = "exception: " + Std.string(((ex11) instanceof js__$Boot_HaxeError) ? ex11.val : ex11) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left5,right5)) {
			utest_Assert.pass("Matrix1x4.hx:112 [OK] Matrix1x4.minus1 == new Matrix1x4( { x: -1., y: -1., z: -1., w: -1. } )",{ lineNumber : 112, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x4.minus1 == new Matrix1x4( { x: -1., y: -1., z: -1., w: -1. } ) --> Left side `" + Std.string(left5) + "` does not equal `" + Std.string(right5) + "`.",{ lineNumber : 112, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left6;
		try {
			var this13 = new geom_structure_Mat1x4(1.,2.,3.,4.);
			left6 = this13;
		} catch( ex12 ) {
			haxe_CallStack.lastException = ex12;
			left6 = "exception: " + Std.string(((ex12) instanceof js__$Boot_HaxeError) ? ex12.val : ex12) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right6;
		try {
			var this14 = new geom_structure_Mat1x4(1.,2.,3.,4.);
			right6 = this14;
		} catch( ex13 ) {
			haxe_CallStack.lastException = ex13;
			right6 = "exception: " + Std.string(((ex13) instanceof js__$Boot_HaxeError) ? ex13.val : ex13) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left6,right6)) {
			utest_Assert.pass("Matrix1x4.hx:122 [OK] Matrix1x4.counting == new Matrix1x4( { x: 1., y: 2., z: 3., w: 4. } )",{ lineNumber : 122, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x4.counting == new Matrix1x4( { x: 1., y: 2., z: 3., w: 4. } ) --> Left side `" + Std.string(left6) + "` does not equal `" + Std.string(right6) + "`.",{ lineNumber : 122, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left7;
		try {
			var this15 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a1 = this15;
			var this16 = new geom_structure_Mat1x4(-a1.x,-a1.y,-a1.z,-a1.w);
			var b = this16;
			var this17 = new geom_structure_Mat1x4(-1.,-2.,-3.,-1.);
			var b1 = this17;
			var delta = 0.0000001;
			left7 = !(Math.abs(b.x - b1.x) >= delta || Math.abs(b.y - b1.y) >= delta || Math.abs(b.z - b1.z) >= delta || Math.abs(b.w - b1.w) >= delta);
		} catch( ex14 ) {
			haxe_CallStack.lastException = ex14;
			left7 = "exception: " + Std.string(((ex14) instanceof js__$Boot_HaxeError) ? ex14.val : ex14) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right7;
		try {
			right7 = true;
		} catch( ex15 ) {
			haxe_CallStack.lastException = ex15;
			right7 = "exception: " + Std.string(((ex15) instanceof js__$Boot_HaxeError) ? ex15.val : ex15) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left7,right7)) {
			utest_Assert.pass("Matrix1x4.hx:140 [OK] ({\nvar a = new Matrix1x4({ x: 1., y: 2., z: 3., w: 1. });\nvar b = -a;\nb == new Matrix1x4({ x: -1., y: -2., z: -3., w: -1. }); }) == true",{ lineNumber : 140, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x4({ x: 1., y: 2., z: 3., w: 1. });\nvar b = -a;\nb == new Matrix1x4({ x: -1., y: -2., z: -3., w: -1. }); }) == true --> Left side `" + Std.string(left7) + "` does not equal `" + Std.string(right7) + "`.",{ lineNumber : 140, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left8;
		try {
			var this18 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a2 = this18;
			var this19 = new geom_structure_Mat1x4(a2.x - a2.x,a2.y - a2.y,a2.z - a2.z,a2.w - a2.w);
			var a3 = this19;
			var this20 = new geom_structure_Mat1x4(0.,0.,0.,0.);
			var b2 = this20;
			var delta1 = 0.0000001;
			left8 = !(Math.abs(a3.x - b2.x) >= delta1 || Math.abs(a3.y - b2.y) >= delta1 || Math.abs(a3.z - b2.z) >= delta1 || Math.abs(a3.w - b2.w) >= delta1);
		} catch( ex16 ) {
			haxe_CallStack.lastException = ex16;
			left8 = "exception: " + Std.string(((ex16) instanceof js__$Boot_HaxeError) ? ex16.val : ex16) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right8;
		try {
			right8 = true;
		} catch( ex17 ) {
			haxe_CallStack.lastException = ex17;
			right8 = "exception: " + Std.string(((ex17) instanceof js__$Boot_HaxeError) ? ex17.val : ex17) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left8,right8)) {
			utest_Assert.pass("Matrix1x4.hx:160 [OK] ({\nvar a = Matrix1x4.unit;\na - a == Matrix1x4.zero;\n}) == true",{ lineNumber : 160, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x4.unit;\na - a == Matrix1x4.zero;\n}) == true --> Left side `" + Std.string(left8) + "` does not equal `" + Std.string(right8) + "`.",{ lineNumber : 160, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left9;
		try {
			var this21 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a4 = this21;
			var this22 = new geom_structure_Mat1x4(a4.x + a4.x,a4.y + a4.y,a4.z + a4.z,a4.w + a4.w);
			var a5 = this22;
			var this23 = new geom_structure_Mat1x4(2.,2.,2.,2.);
			var b3 = this23;
			var delta2 = 0.0000001;
			left9 = !(Math.abs(a5.x - b3.x) >= delta2 || Math.abs(a5.y - b3.y) >= delta2 || Math.abs(a5.z - b3.z) >= delta2 || Math.abs(a5.w - b3.w) >= delta2);
		} catch( ex18 ) {
			haxe_CallStack.lastException = ex18;
			left9 = "exception: " + Std.string(((ex18) instanceof js__$Boot_HaxeError) ? ex18.val : ex18) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right9;
		try {
			right9 = true;
		} catch( ex19 ) {
			haxe_CallStack.lastException = ex19;
			right9 = "exception: " + Std.string(((ex19) instanceof js__$Boot_HaxeError) ? ex19.val : ex19) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left9,right9)) {
			utest_Assert.pass("Matrix1x4.hx:179 [OK] ({\nvar a = Matrix1x4.unit;\na + a == new Matrix1x4({ x: 2., y: 2., z: 2., w: 2. });\n}) == true",{ lineNumber : 179, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x4.unit;\na + a == new Matrix1x4({ x: 2., y: 2., z: 2., w: 2. });\n}) == true --> Left side `" + Std.string(left9) + "` does not equal `" + Std.string(right9) + "`.",{ lineNumber : 179, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left10;
		try {
			var this24 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a6 = this24;
			var this25 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var b4 = this25;
			var delta3 = 0.0000001;
			left10 = !(Math.abs(a6.x - b4.x) >= delta3 || Math.abs(a6.y - b4.y) >= delta3 || Math.abs(a6.z - b4.z) >= delta3 || Math.abs(a6.w - b4.w) >= delta3);
		} catch( ex20 ) {
			haxe_CallStack.lastException = ex20;
			left10 = "exception: " + Std.string(((ex20) instanceof js__$Boot_HaxeError) ? ex20.val : ex20) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right10;
		try {
			right10 = true;
		} catch( ex21 ) {
			haxe_CallStack.lastException = ex21;
			right10 = "exception: " + Std.string(((ex21) instanceof js__$Boot_HaxeError) ? ex21.val : ex21) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left10,right10)) {
			utest_Assert.pass("Matrix1x4.hx:210 [OK] ({\nvar a = new Matrix1x4({ x: 1., y: 2., z: 3., w: 1. });\nvar b = new Matrix1x4({ x: 1., y: 2., z: 3., w: 1. });\na == b; }) == true",{ lineNumber : 210, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x4({ x: 1., y: 2., z: 3., w: 1. });\nvar b = new Matrix1x4({ x: 1., y: 2., z: 3., w: 1. });\na == b; }) == true --> Left side `" + Std.string(left10) + "` does not equal `" + Std.string(right10) + "`.",{ lineNumber : 210, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left11;
		try {
			var this26 = new geom_structure_Mat1x4(0.,0.,0.,0.);
			var out = this26;
			out.x = 1.;
			out.y = 1.;
			out.z = 1.;
			out.w = 1.;
			left11 = out;
		} catch( ex22 ) {
			haxe_CallStack.lastException = ex22;
			left11 = "exception: " + Std.string(((ex22) instanceof js__$Boot_HaxeError) ? ex22.val : ex22) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right11;
		try {
			var this27 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			right11 = this27;
		} catch( ex23 ) {
			haxe_CallStack.lastException = ex23;
			right11 = "exception: " + Std.string(((ex23) instanceof js__$Boot_HaxeError) ? ex23.val : ex23) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left11,right11)) {
			utest_Assert.pass("Matrix1x4.hx:235 [OK] Matrix1x4.identity( Matrix1x4.zero ) == new Matrix1x4({ x: 1., y: 1., z: 1., w: 1. })",{ lineNumber : 235, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix1x4.identity( Matrix1x4.zero ) == new Matrix1x4({ x: 1., y: 1., z: 1., w: 1. }) --> Left side `" + Std.string(left11) + "` does not equal `" + Std.string(right11) + "`.",{ lineNumber : 235, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left12;
		try {
			var this28 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a7 = this28;
			var this29 = new geom_structure_Mat1x4(0.,0.,0.,0.);
			var b5 = this29;
			b5.x = a7.x;
			b5.y = a7.y;
			b5.z = a7.z;
			b5.w = a7.w;
			var c = b5;
			var delta4 = 0.0000001;
			left12 = !(Math.abs(a7.x - c.x) >= delta4 || Math.abs(a7.y - c.y) >= delta4 || Math.abs(a7.z - c.z) >= delta4 || Math.abs(a7.w - c.w) >= delta4);
		} catch( ex24 ) {
			haxe_CallStack.lastException = ex24;
			left12 = "exception: " + Std.string(((ex24) instanceof js__$Boot_HaxeError) ? ex24.val : ex24) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right12;
		try {
			right12 = true;
		} catch( ex25 ) {
			haxe_CallStack.lastException = ex25;
			right12 = "exception: " + Std.string(((ex25) instanceof js__$Boot_HaxeError) ? ex25.val : ex25) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left12,right12)) {
			utest_Assert.pass("Matrix1x4.hx:248 [OK] ({\nvar a = new Matrix1x4({ x: 1., y: 2., z: 3., w: 1. });\nvar b = Matrix1x4.zero;\nvar c = Matrix1x4.copy( a, b );\na == c; }) == true",{ lineNumber : 248, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x4({ x: 1., y: 2., z: 3., w: 1. });\nvar b = Matrix1x4.zero;\nvar c = Matrix1x4.copy( a, b );\na == c; }) == true --> Left side `" + Std.string(left12) + "` does not equal `" + Std.string(right12) + "`.",{ lineNumber : 248, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left13;
		try {
			haxe_Log.trace("\"projectPoint\" untested",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x4_1"});
			left13 = true;
		} catch( ex26 ) {
			haxe_CallStack.lastException = ex26;
			left13 = "exception: " + Std.string(((ex26) instanceof js__$Boot_HaxeError) ? ex26.val : ex26) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right13;
		try {
			right13 = true;
		} catch( ex27 ) {
			haxe_CallStack.lastException = ex27;
			right13 = "exception: " + Std.string(((ex27) instanceof js__$Boot_HaxeError) ? ex27.val : ex27) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left13,right13)) {
			utest_Assert.pass("Matrix1x4.hx:265 [OK] ({ trace('\"projectPoint\" untested'); true; }) == true",{ lineNumber : 265, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"projectPoint\" untested'); true; }) == true --> Left side `" + Std.string(left13) + "` does not equal `" + Std.string(right13) + "`.",{ lineNumber : 265, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left14;
		try {
			var this30 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a8 = this30;
			var this31 = new geom_structure_Mat1x4(1.,2.,4.,1.);
			var b6 = this31;
			var delta5 = 0.0000001;
			left14 = !(!(Math.abs(a8.x - b6.x) >= delta5 || Math.abs(a8.y - b6.y) >= delta5 || Math.abs(a8.z - b6.z) >= delta5 || Math.abs(a8.w - b6.w) >= delta5));
		} catch( ex28 ) {
			haxe_CallStack.lastException = ex28;
			left14 = "exception: " + Std.string(((ex28) instanceof js__$Boot_HaxeError) ? ex28.val : ex28) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right14;
		try {
			right14 = true;
		} catch( ex29 ) {
			haxe_CallStack.lastException = ex29;
			right14 = "exception: " + Std.string(((ex29) instanceof js__$Boot_HaxeError) ? ex29.val : ex29) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left14,right14)) {
			utest_Assert.pass("Matrix1x4.hx:280 [OK] ({\nvar a = new Matrix1x4({ x: 1., y: 2., z: 3., w: 1. });\nvar b = new Matrix1x4({ x: 1., y: 2., z: 4., w: 1. });\na != b; }) == true",{ lineNumber : 280, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x4({ x: 1., y: 2., z: 3., w: 1. });\nvar b = new Matrix1x4({ x: 1., y: 2., z: 4., w: 1. });\na != b; }) == true --> Left side `" + Std.string(left14) + "` does not equal `" + Std.string(right14) + "`.",{ lineNumber : 280, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left15;
		try {
			haxe_Log.trace("\"magnitude\" untested",{ fileName : "src/geom/GeomTest.hx", lineNumber : 22, className : "geom.GeomTest", methodName : "testMatrix1x4_1"});
			left15 = true;
		} catch( ex30 ) {
			haxe_CallStack.lastException = ex30;
			left15 = "exception: " + Std.string(((ex30) instanceof js__$Boot_HaxeError) ? ex30.val : ex30) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right15;
		try {
			right15 = true;
		} catch( ex31 ) {
			haxe_CallStack.lastException = ex31;
			right15 = "exception: " + Std.string(((ex31) instanceof js__$Boot_HaxeError) ? ex31.val : ex31) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left15,right15)) {
			utest_Assert.pass("Matrix1x4.hx:292 [OK] ({ trace('\"magnitude\" untested'); true; }) == true",{ lineNumber : 292, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({ trace('\"magnitude\" untested'); true; }) == true --> Left side `" + Std.string(left15) + "` does not equal `" + Std.string(right15) + "`.",{ lineNumber : 292, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left16;
		try {
			var this32 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a9 = this32;
			var this33 = new geom_structure_Mat1x4(-a9.x,-a9.y,-a9.z,a9.w);
			var b7 = this33;
			var this34 = new geom_structure_Mat1x4(-1.,-2.,-3.,1.);
			var b8 = this34;
			var delta6 = 0.0000001;
			left16 = !(Math.abs(b7.x - b8.x) >= delta6 || Math.abs(b7.y - b8.y) >= delta6 || Math.abs(b7.z - b8.z) >= delta6 || Math.abs(b7.w - b8.w) >= delta6);
		} catch( ex32 ) {
			haxe_CallStack.lastException = ex32;
			left16 = "exception: " + Std.string(((ex32) instanceof js__$Boot_HaxeError) ? ex32.val : ex32) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right16;
		try {
			right16 = true;
		} catch( ex33 ) {
			haxe_CallStack.lastException = ex33;
			right16 = "exception: " + Std.string(((ex33) instanceof js__$Boot_HaxeError) ? ex33.val : ex33) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left16,right16)) {
			utest_Assert.pass("Matrix1x4.hx:360 [OK] ({\nvar a = new Matrix1x4({ x: 1., y: 2., z: 3., w: 1. });\nvar b = ~a;\nb == new Matrix1x4({ x: -1., y: -2., z: -3., w: 1. }); }) == true",{ lineNumber : 360, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix1x4({ x: 1., y: 2., z: 3., w: 1. });\nvar b = ~a;\nb == new Matrix1x4({ x: -1., y: -2., z: -3., w: 1. }); }) == true --> Left side `" + Std.string(left16) + "` does not equal `" + Std.string(right16) + "`.",{ lineNumber : 360, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left17;
		try {
			var this35 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a10 = this35;
			var b9 = [1.,1.,1.,1.].slice(0);
			var c1 = geom_matrix_Conversion.Vectorto1x4(b9);
			var b10 = geom_matrix_Conversion.Vectorto1x4(b9);
			var delta7 = 0.0000001;
			left17 = !(Math.abs(a10.x - b10.x) >= delta7 || Math.abs(a10.y - b10.y) >= delta7 || Math.abs(a10.z - b10.z) >= delta7 || Math.abs(a10.w - b10.w) >= delta7);
		} catch( ex34 ) {
			haxe_CallStack.lastException = ex34;
			left17 = "exception: " + Std.string(((ex34) instanceof js__$Boot_HaxeError) ? ex34.val : ex34) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right17;
		try {
			right17 = true;
		} catch( ex35 ) {
			haxe_CallStack.lastException = ex35;
			right17 = "exception: " + Std.string(((ex35) instanceof js__$Boot_HaxeError) ? ex35.val : ex35) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left17,right17)) {
			utest_Assert.pass("Matrix1x4.hx:494 [OK] ({\nvar a = Matrix1x4.unit;\nvar b = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1., 1. ]);\nvar c: Matrix1x4 = b;\na == b; }) == true",{ lineNumber : 494, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x4.unit;\nvar b = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1., 1. ]);\nvar c: Matrix1x4 = b;\na == b; }) == true --> Left side `" + Std.string(left17) + "` does not equal `" + Std.string(right17) + "`.",{ lineNumber : 494, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left18;
		try {
			var this36 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a11 = this36;
			var b11 = geom_matrix_Conversion._1x4toVector(a11);
			var c2 = [1.,1.,1.,1.].slice(0);
			left18 = equals_Equal.equals(b11,c2);
		} catch( ex36 ) {
			haxe_CallStack.lastException = ex36;
			left18 = "exception: " + Std.string(((ex36) instanceof js__$Boot_HaxeError) ? ex36.val : ex36) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right18;
		try {
			right18 = true;
		} catch( ex37 ) {
			haxe_CallStack.lastException = ex37;
			right18 = "exception: " + Std.string(((ex37) instanceof js__$Boot_HaxeError) ? ex37.val : ex37) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left18,right18)) {
			utest_Assert.pass("Matrix1x4.hx:506 [OK] ({\nvar a = Matrix1x4.unit;\nvar b: haxe.ds.Vector<Float> = a;\nvar c = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1., 1. ]);\nEqual.equals( b, c ); }) == true",{ lineNumber : 506, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x4.unit;\nvar b: haxe.ds.Vector<Float> = a;\nvar c = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1., 1. ]);\nEqual.equals( b, c ); }) == true --> Left side `" + Std.string(left18) + "` does not equal `" + Std.string(right18) + "`.",{ lineNumber : 506, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left19;
		try {
			var this37 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a12 = this37;
			var b12 = geom_matrix_Conversion.Arrayto1x4([1.,1.,1.,1.]);
			left19 = equals_Equal.equals(a12,b12);
		} catch( ex38 ) {
			haxe_CallStack.lastException = ex38;
			left19 = "exception: " + Std.string(((ex38) instanceof js__$Boot_HaxeError) ? ex38.val : ex38) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right19;
		try {
			right19 = true;
		} catch( ex39 ) {
			haxe_CallStack.lastException = ex39;
			right19 = "exception: " + Std.string(((ex39) instanceof js__$Boot_HaxeError) ? ex39.val : ex39) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left19,right19)) {
			utest_Assert.pass("Matrix1x4.hx:518 [OK] ({\nvar a = Matrix1x4.unit;\nvar b: Matrix1x4 = [ 1., 1., 1., 1. ];\nEqual.equals( a, b ); }) == true",{ lineNumber : 518, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x4.unit;\nvar b: Matrix1x4 = [ 1., 1., 1., 1. ];\nEqual.equals( a, b ); }) == true --> Left side `" + Std.string(left19) + "` does not equal `" + Std.string(right19) + "`.",{ lineNumber : 518, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
		var left20;
		try {
			var this38 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a13 = this38;
			var b13 = geom_matrix_Conversion._1x4toArray(a13);
			left20 = equals_Equal.equals(b13,[1.,1.,1.,1.]);
		} catch( ex40 ) {
			haxe_CallStack.lastException = ex40;
			left20 = "exception: " + Std.string(((ex40) instanceof js__$Boot_HaxeError) ? ex40.val : ex40) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right20;
		try {
			right20 = true;
		} catch( ex41 ) {
			haxe_CallStack.lastException = ex41;
			right20 = "exception: " + Std.string(((ex41) instanceof js__$Boot_HaxeError) ? ex41.val : ex41) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left20,right20)) {
			utest_Assert.pass("Matrix1x4.hx:528 [OK] ({\nvar a = Matrix1x4.unit;\nvar b: Array<Float> = a;\nEqual.equals( b, [ 1., 1., 1., 1. ] ); }) == true",{ lineNumber : 528, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix1x4.unit;\nvar b: Array<Float> = a;\nEqual.equals( b, [ 1., 1., 1., 1. ] ); }) == true --> Left side `" + Std.string(left20) + "` does not equal `" + Std.string(right20) + "`.",{ lineNumber : 528, fileName : "src/geom/matrix/Matrix1x4.hx", className : "", methodName : ""});
		}
	}
	,testMatrix2x2_1: function() {
		var left;
		try {
			var this1 = new geom_structure_Mat2x2(1.,2.,3.,4.);
			left = this1;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			var this2 = new geom_structure_Mat2x2(1.,2.,3.,4.);
			var this3 = this2;
			var this4 = new geom_structure_Mat2x2(this3.a,this3.b,this3.c,this3.d);
			right = this4;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("Matrix2x2.hx:18 [OK] Matrix2x2.counting == Matrix2x2.counting.clone()",{ lineNumber : 18, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix2x2.counting == Matrix2x2.counting.clone() --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 18, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left1;
		try {
			var this5 = new geom_structure_Mat2x2(1.,2.,3.,4.);
			var m = this5;
			var arr = [];
			var i = HxOverrides.iter([m.a,m.b,m.c,m.d]);
			while(i.hasNext()) {
				var i1 = i.next();
				arr.push(i1);
			}
			left1 = [1.,2.,3.,4.].toString() == arr.toString();
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			right1 = true;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left1,right1)) {
			utest_Assert.pass("Matrix2x2.hx:28 [OK] ({\nvar m = Matrix2x2.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.,4.].toString() == arr.toString(); }) == true",{ lineNumber : 28, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar m = Matrix2x2.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.,4.].toString() == arr.toString(); }) == true --> Left side `" + Std.string(left1) + "` does not equal `" + Std.string(right1) + "`.",{ lineNumber : 28, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left2;
		try {
			var this6 = new geom_structure_Mat2x2(0.,0.,0.,0.);
			left2 = this6;
		} catch( ex4 ) {
			haxe_CallStack.lastException = ex4;
			left2 = "exception: " + Std.string(((ex4) instanceof js__$Boot_HaxeError) ? ex4.val : ex4) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right2;
		try {
			var this7 = new geom_structure_Mat2x2(0.,0.,0.,0.);
			right2 = this7;
		} catch( ex5 ) {
			haxe_CallStack.lastException = ex5;
			right2 = "exception: " + Std.string(((ex5) instanceof js__$Boot_HaxeError) ? ex5.val : ex5) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left2,right2)) {
			utest_Assert.pass("Matrix2x2.hx:49 [OK] Matrix2x2.zero == new Matrix2x2( { a: 0., b: 0., c: 0., d: 0. } )",{ lineNumber : 49, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix2x2.zero == new Matrix2x2( { a: 0., b: 0., c: 0., d: 0. } ) --> Left side `" + Std.string(left2) + "` does not equal `" + Std.string(right2) + "`.",{ lineNumber : 49, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left3;
		try {
			var this8 = new geom_structure_Mat2x2(1.,0.,0.,1.);
			left3 = this8;
		} catch( ex6 ) {
			haxe_CallStack.lastException = ex6;
			left3 = "exception: " + Std.string(((ex6) instanceof js__$Boot_HaxeError) ? ex6.val : ex6) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right3;
		try {
			var this9 = new geom_structure_Mat2x2(1.,0.,0.,1.);
			right3 = this9;
		} catch( ex7 ) {
			haxe_CallStack.lastException = ex7;
			right3 = "exception: " + Std.string(((ex7) instanceof js__$Boot_HaxeError) ? ex7.val : ex7) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left3,right3)) {
			utest_Assert.pass("Matrix2x2.hx:65 [OK] Matrix2x2.unit == new Matrix2x2( { a: 1., b: 0., c: 0., d: 1. } )",{ lineNumber : 65, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix2x2.unit == new Matrix2x2( { a: 1., b: 0., c: 0., d: 1. } ) --> Left side `" + Std.string(left3) + "` does not equal `" + Std.string(right3) + "`.",{ lineNumber : 65, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left4;
		try {
			var this10 = new geom_structure_Mat2x2(1.,0.,0.,1.);
			var a = this10;
			var this11 = new geom_structure_Mat2x2(-a.a,-a.b,-a.c,-a.d);
			left4 = this11;
		} catch( ex8 ) {
			haxe_CallStack.lastException = ex8;
			left4 = "exception: " + Std.string(((ex8) instanceof js__$Boot_HaxeError) ? ex8.val : ex8) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right4;
		try {
			var this12 = new geom_structure_Mat2x2(-1.,0.,0.,-1.);
			right4 = this12;
		} catch( ex9 ) {
			haxe_CallStack.lastException = ex9;
			right4 = "exception: " + Std.string(((ex9) instanceof js__$Boot_HaxeError) ? ex9.val : ex9) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left4,right4)) {
			utest_Assert.pass("Matrix2x2.hx:81 [OK] Matrix2x2.minus1 == new Matrix2x2({ a: -1., b: 0., c: 0., d: -1. })",{ lineNumber : 81, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix2x2.minus1 == new Matrix2x2({ a: -1., b: 0., c: 0., d: -1. }) --> Left side `" + Std.string(left4) + "` does not equal `" + Std.string(right4) + "`.",{ lineNumber : 81, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left5;
		try {
			var this13 = new geom_structure_Mat2x2(1.,2.,3.,4.);
			left5 = this13;
		} catch( ex10 ) {
			haxe_CallStack.lastException = ex10;
			left5 = "exception: " + Std.string(((ex10) instanceof js__$Boot_HaxeError) ? ex10.val : ex10) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right5;
		try {
			var this14 = new geom_structure_Mat2x2(1.,2.,3.,4.);
			right5 = this14;
		} catch( ex11 ) {
			haxe_CallStack.lastException = ex11;
			right5 = "exception: " + Std.string(((ex11) instanceof js__$Boot_HaxeError) ? ex11.val : ex11) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left5,right5)) {
			utest_Assert.pass("Matrix2x2.hx:91 [OK] Matrix2x2.counting == new Matrix2x2( { a: 1., b: 2., c: 3., d: 4. } )",{ lineNumber : 91, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix2x2.counting == new Matrix2x2( { a: 1., b: 2., c: 3., d: 4. } ) --> Left side `" + Std.string(left5) + "` does not equal `" + Std.string(right5) + "`.",{ lineNumber : 91, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left6;
		try {
			var this15 = new geom_structure_Mat2x2(1.,2.,3.,4.);
			left6 = this15;
		} catch( ex12 ) {
			haxe_CallStack.lastException = ex12;
			left6 = "exception: " + Std.string(((ex12) instanceof js__$Boot_HaxeError) ? ex12.val : ex12) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right6;
		try {
			var this16 = new geom_structure_Mat2x2(1.,2.,3.,4.);
			right6 = this16;
		} catch( ex13 ) {
			haxe_CallStack.lastException = ex13;
			right6 = "exception: " + Std.string(((ex13) instanceof js__$Boot_HaxeError) ? ex13.val : ex13) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left6,right6)) {
			utest_Assert.pass("Matrix2x2.hx:108 [OK] Matrix2x2._1234 == new Matrix2x2( { a: 1., b: 2., c: 3., d: 4. } )",{ lineNumber : 108, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix2x2._1234 == new Matrix2x2( { a: 1., b: 2., c: 3., d: 4. } ) --> Left side `" + Std.string(left6) + "` does not equal `" + Std.string(right6) + "`.",{ lineNumber : 108, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left7;
		try {
			var this17 = new geom_structure_Mat2x2(1.,0.,0.,-1.);
			var a1 = this17;
			var this18 = new geom_structure_Mat2x2(1.,0.,0.,-1.);
			var b = this18;
			var delta = 0.0000001;
			left7 = !(Math.abs(a1.a - b.a) >= delta || Math.abs(a1.b - b.b) >= delta || Math.abs(a1.c - b.c) >= delta || Math.abs(a1.d - b.d) >= delta);
		} catch( ex14 ) {
			haxe_CallStack.lastException = ex14;
			left7 = "exception: " + Std.string(((ex14) instanceof js__$Boot_HaxeError) ? ex14.val : ex14) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right7;
		try {
			right7 = true;
		} catch( ex15 ) {
			haxe_CallStack.lastException = ex15;
			right7 = "exception: " + Std.string(((ex15) instanceof js__$Boot_HaxeError) ? ex15.val : ex15) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left7,right7)) {
			utest_Assert.pass("Matrix2x2.hx:119 [OK] ({\nMatrix2x2.topLeft == new Matrix2x2( { a: 1., b: 0.\n, c: 0., d: -1. } );\n}) == true",{ lineNumber : 119, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix2x2.topLeft == new Matrix2x2( { a: 1., b: 0.\n, c: 0., d: -1. } );\n}) == true --> Left side `" + Std.string(left7) + "` does not equal `" + Std.string(right7) + "`.",{ lineNumber : 119, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left8;
		try {
			var this19 = new geom_structure_Mat2x2(1.,0.,0.,1.);
			var a2 = this19;
			var this20 = new geom_structure_Mat2x2(1.,0.,0.,1.);
			var b1 = this20;
			var delta1 = 0.0000001;
			left8 = !(Math.abs(a2.a - b1.a) >= delta1 || Math.abs(a2.b - b1.b) >= delta1 || Math.abs(a2.c - b1.c) >= delta1 || Math.abs(a2.d - b1.d) >= delta1);
		} catch( ex16 ) {
			haxe_CallStack.lastException = ex16;
			left8 = "exception: " + Std.string(((ex16) instanceof js__$Boot_HaxeError) ? ex16.val : ex16) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right8;
		try {
			right8 = true;
		} catch( ex17 ) {
			haxe_CallStack.lastException = ex17;
			right8 = "exception: " + Std.string(((ex17) instanceof js__$Boot_HaxeError) ? ex17.val : ex17) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left8,right8)) {
			utest_Assert.pass("Matrix2x2.hx:133 [OK] ({\nMatrix2x2.topRight == new Matrix2x2( { a: 1., b: 0.\n, c: 0., d: 1. } );\n}) == true",{ lineNumber : 133, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix2x2.topRight == new Matrix2x2( { a: 1., b: 0.\n, c: 0., d: 1. } );\n}) == true --> Left side `" + Std.string(left8) + "` does not equal `" + Std.string(right8) + "`.",{ lineNumber : 133, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left9;
		try {
			var this21 = new geom_structure_Mat2x2(-1.,0.,0.,-1.);
			var a3 = this21;
			var this22 = new geom_structure_Mat2x2(-1.,0.,0.,-1.);
			var b2 = this22;
			var delta2 = 0.0000001;
			left9 = !(Math.abs(a3.a - b2.a) >= delta2 || Math.abs(a3.b - b2.b) >= delta2 || Math.abs(a3.c - b2.c) >= delta2 || Math.abs(a3.d - b2.d) >= delta2);
		} catch( ex18 ) {
			haxe_CallStack.lastException = ex18;
			left9 = "exception: " + Std.string(((ex18) instanceof js__$Boot_HaxeError) ? ex18.val : ex18) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right9;
		try {
			right9 = true;
		} catch( ex19 ) {
			haxe_CallStack.lastException = ex19;
			right9 = "exception: " + Std.string(((ex19) instanceof js__$Boot_HaxeError) ? ex19.val : ex19) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left9,right9)) {
			utest_Assert.pass("Matrix2x2.hx:147 [OK] ({\nMatrix2x2.bottomLeft == new Matrix2x2( { a: -1., b: 0.\n, c: 0., d: -1. } );\n}) == true",{ lineNumber : 147, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix2x2.bottomLeft == new Matrix2x2( { a: -1., b: 0.\n, c: 0., d: -1. } );\n}) == true --> Left side `" + Std.string(left9) + "` does not equal `" + Std.string(right9) + "`.",{ lineNumber : 147, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left10;
		try {
			var this23 = new geom_structure_Mat2x2(1.,0.,0.,-1.);
			var a4 = this23;
			var this24 = new geom_structure_Mat2x2(1.,0.,0.,-1.);
			var b3 = this24;
			var delta3 = 0.0000001;
			left10 = !(Math.abs(a4.a - b3.a) >= delta3 || Math.abs(a4.b - b3.b) >= delta3 || Math.abs(a4.c - b3.c) >= delta3 || Math.abs(a4.d - b3.d) >= delta3);
		} catch( ex20 ) {
			haxe_CallStack.lastException = ex20;
			left10 = "exception: " + Std.string(((ex20) instanceof js__$Boot_HaxeError) ? ex20.val : ex20) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right10;
		try {
			right10 = true;
		} catch( ex21 ) {
			haxe_CallStack.lastException = ex21;
			right10 = "exception: " + Std.string(((ex21) instanceof js__$Boot_HaxeError) ? ex21.val : ex21) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left10,right10)) {
			utest_Assert.pass("Matrix2x2.hx:161 [OK] ({\nMatrix2x2.bottomRight == new Matrix2x2( { a: 1., b: 0.\n, c: 0., d: -1. } );\n}) == true",{ lineNumber : 161, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix2x2.bottomRight == new Matrix2x2( { a: 1., b: 0.\n, c: 0., d: -1. } );\n}) == true --> Left side `" + Std.string(left10) + "` does not equal `" + Std.string(right10) + "`.",{ lineNumber : 161, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left11;
		try {
			var this25 = new geom_structure_Mat2x2(0.,0.,0.,1.);
			var a5 = this25;
			var this26 = new geom_structure_Mat2x2(0.,0.,0.,1.);
			var b4 = this26;
			var delta4 = 0.0000001;
			left11 = !(Math.abs(a5.a - b4.a) >= delta4 || Math.abs(a5.b - b4.b) >= delta4 || Math.abs(a5.c - b4.c) >= delta4 || Math.abs(a5.d - b4.d) >= delta4);
		} catch( ex22 ) {
			haxe_CallStack.lastException = ex22;
			left11 = "exception: " + Std.string(((ex22) instanceof js__$Boot_HaxeError) ? ex22.val : ex22) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right11;
		try {
			right11 = true;
		} catch( ex23 ) {
			haxe_CallStack.lastException = ex23;
			right11 = "exception: " + Std.string(((ex23) instanceof js__$Boot_HaxeError) ? ex23.val : ex23) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left11,right11)) {
			utest_Assert.pass("Matrix2x2.hx:175 [OK] ({\nMatrix2x2.north == new Matrix2x2( { a: 0., b: 0.\n, c: 0., d: 1. } );\n}) == true",{ lineNumber : 175, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix2x2.north == new Matrix2x2( { a: 0., b: 0.\n, c: 0., d: 1. } );\n}) == true --> Left side `" + Std.string(left11) + "` does not equal `" + Std.string(right11) + "`.",{ lineNumber : 175, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left12;
		try {
			var this27 = new geom_structure_Mat2x2(0.,0.,0.,-1.);
			var a6 = this27;
			var this28 = new geom_structure_Mat2x2(0.,0.,0.,-1.);
			var b5 = this28;
			var delta5 = 0.0000001;
			left12 = !(Math.abs(a6.a - b5.a) >= delta5 || Math.abs(a6.b - b5.b) >= delta5 || Math.abs(a6.c - b5.c) >= delta5 || Math.abs(a6.d - b5.d) >= delta5);
		} catch( ex24 ) {
			haxe_CallStack.lastException = ex24;
			left12 = "exception: " + Std.string(((ex24) instanceof js__$Boot_HaxeError) ? ex24.val : ex24) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right12;
		try {
			right12 = true;
		} catch( ex25 ) {
			haxe_CallStack.lastException = ex25;
			right12 = "exception: " + Std.string(((ex25) instanceof js__$Boot_HaxeError) ? ex25.val : ex25) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left12,right12)) {
			utest_Assert.pass("Matrix2x2.hx:189 [OK] ({\nMatrix2x2.south == new Matrix2x2( { a: 0., b: 0.\n, c: 0., d: -1. } );\n}) == true",{ lineNumber : 189, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix2x2.south == new Matrix2x2( { a: 0., b: 0.\n, c: 0., d: -1. } );\n}) == true --> Left side `" + Std.string(left12) + "` does not equal `" + Std.string(right12) + "`.",{ lineNumber : 189, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left13;
		try {
			var this29 = new geom_structure_Mat2x2(-1.,0.,0.,0.);
			var a7 = this29;
			var this30 = new geom_structure_Mat2x2(-1.,0.,0.,0.);
			var b6 = this30;
			var delta6 = 0.0000001;
			left13 = !(Math.abs(a7.a - b6.a) >= delta6 || Math.abs(a7.b - b6.b) >= delta6 || Math.abs(a7.c - b6.c) >= delta6 || Math.abs(a7.d - b6.d) >= delta6);
		} catch( ex26 ) {
			haxe_CallStack.lastException = ex26;
			left13 = "exception: " + Std.string(((ex26) instanceof js__$Boot_HaxeError) ? ex26.val : ex26) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right13;
		try {
			right13 = true;
		} catch( ex27 ) {
			haxe_CallStack.lastException = ex27;
			right13 = "exception: " + Std.string(((ex27) instanceof js__$Boot_HaxeError) ? ex27.val : ex27) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left13,right13)) {
			utest_Assert.pass("Matrix2x2.hx:203 [OK] ({\nMatrix2x2.west == new Matrix2x2( { a: -1., b: 0.\n, c: 0.,  d: 0. } );\n}) == true",{ lineNumber : 203, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix2x2.west == new Matrix2x2( { a: -1., b: 0.\n, c: 0.,  d: 0. } );\n}) == true --> Left side `" + Std.string(left13) + "` does not equal `" + Std.string(right13) + "`.",{ lineNumber : 203, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left14;
		try {
			var this31 = new geom_structure_Mat2x2(1.,0.,0.,0.);
			var a8 = this31;
			var this32 = new geom_structure_Mat2x2(1.,0.,0.,0.);
			var b7 = this32;
			var delta7 = 0.0000001;
			left14 = !(Math.abs(a8.a - b7.a) >= delta7 || Math.abs(a8.b - b7.b) >= delta7 || Math.abs(a8.c - b7.c) >= delta7 || Math.abs(a8.d - b7.d) >= delta7);
		} catch( ex28 ) {
			haxe_CallStack.lastException = ex28;
			left14 = "exception: " + Std.string(((ex28) instanceof js__$Boot_HaxeError) ? ex28.val : ex28) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right14;
		try {
			right14 = true;
		} catch( ex29 ) {
			haxe_CallStack.lastException = ex29;
			right14 = "exception: " + Std.string(((ex29) instanceof js__$Boot_HaxeError) ? ex29.val : ex29) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left14,right14)) {
			utest_Assert.pass("Matrix2x2.hx:217 [OK] ({\nMatrix2x2.east == new Matrix2x2( { a: 1., b: 0.\n, c: 0., d: 0. } );\n}) == true",{ lineNumber : 217, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix2x2.east == new Matrix2x2( { a: 1., b: 0.\n, c: 0., d: 0. } );\n}) == true --> Left side `" + Std.string(left14) + "` does not equal `" + Std.string(right14) + "`.",{ lineNumber : 217, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left15;
		try {
			var this33 = new geom_structure_Mat1x2(2.,2.);
			var p = this33;
			var this34 = new geom_structure_Mat2x2(p.x,0.,0.,p.y);
			left15 = this34;
		} catch( ex30 ) {
			haxe_CallStack.lastException = ex30;
			left15 = "exception: " + Std.string(((ex30) instanceof js__$Boot_HaxeError) ? ex30.val : ex30) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right15;
		try {
			var this35 = new geom_structure_Mat2x2(2.,0.,0.,2.);
			right15 = this35;
		} catch( ex31 ) {
			haxe_CallStack.lastException = ex31;
			right15 = "exception: " + Std.string(((ex31) instanceof js__$Boot_HaxeError) ? ex31.val : ex31) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left15,right15)) {
			utest_Assert.pass("Matrix2x2.hx:237 [OK] Matrix2x2.scale( new Matrix1x2( { x: 2., y: 2. } ) ) == new Matrix2x2( { a: 2., b: 0., c: 0.,  d: 2. } )",{ lineNumber : 237, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix2x2.scale( new Matrix1x2( { x: 2., y: 2. } ) ) == new Matrix2x2( { a: 2., b: 0., c: 0.,  d: 2. } ) --> Left side `" + Std.string(left15) + "` does not equal `" + Std.string(right15) + "`.",{ lineNumber : 237, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left16;
		try {
			var this36 = new geom_structure_Mat2x2(1.,2.,3.,4.);
			var a9 = this36;
			var this37 = new geom_structure_Mat2x2(-a9.a,-a9.b,-a9.c,-a9.d);
			var b8 = this37;
			var this38 = new geom_structure_Mat2x2(-1.,-2.,-3.,-4.);
			var b9 = this38;
			var delta8 = 0.0000001;
			left16 = !(Math.abs(b8.a - b9.a) >= delta8 || Math.abs(b8.b - b9.b) >= delta8 || Math.abs(b8.c - b9.c) >= delta8 || Math.abs(b8.d - b9.d) >= delta8);
		} catch( ex32 ) {
			haxe_CallStack.lastException = ex32;
			left16 = "exception: " + Std.string(((ex32) instanceof js__$Boot_HaxeError) ? ex32.val : ex32) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right16;
		try {
			right16 = true;
		} catch( ex33 ) {
			haxe_CallStack.lastException = ex33;
			right16 = "exception: " + Std.string(((ex33) instanceof js__$Boot_HaxeError) ? ex33.val : ex33) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left16,right16)) {
			utest_Assert.pass("Matrix2x2.hx:270 [OK] ({\nvar a = Matrix2x2.counting;\nvar b = -a;\nb == new Matrix2x2({ a: -1., b: -2., c: -3., d: -4. }); }) == true",{ lineNumber : 270, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix2x2.counting;\nvar b = -a;\nb == new Matrix2x2({ a: -1., b: -2., c: -3., d: -4. }); }) == true --> Left side `" + Std.string(left16) + "` does not equal `" + Std.string(right16) + "`.",{ lineNumber : 270, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left17;
		try {
			var this39 = new geom_structure_Mat2x2(1.,0.,0.,1.);
			var a10 = this39;
			var this40 = new geom_structure_Mat2x2(a10.a + a10.a,a10.b + a10.b,a10.c + a10.c,a10.d + a10.d);
			var a11 = this40;
			var this41 = new geom_structure_Mat2x2(2.,0.,0.,2.);
			var b10 = this41;
			var delta9 = 0.0000001;
			left17 = !(Math.abs(a11.a - b10.a) >= delta9 || Math.abs(a11.b - b10.b) >= delta9 || Math.abs(a11.c - b10.c) >= delta9 || Math.abs(a11.d - b10.d) >= delta9);
		} catch( ex34 ) {
			haxe_CallStack.lastException = ex34;
			left17 = "exception: " + Std.string(((ex34) instanceof js__$Boot_HaxeError) ? ex34.val : ex34) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right17;
		try {
			right17 = true;
		} catch( ex35 ) {
			haxe_CallStack.lastException = ex35;
			right17 = "exception: " + Std.string(((ex35) instanceof js__$Boot_HaxeError) ? ex35.val : ex35) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left17,right17)) {
			utest_Assert.pass("Matrix2x2.hx:286 [OK] ({\nvar a = Matrix2x2.unit;\na + a == new Matrix2x2({ a: 2., b: 0., c: 0., d: 2. });\n}) == true",{ lineNumber : 286, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix2x2.unit;\na + a == new Matrix2x2({ a: 2., b: 0., c: 0., d: 2. });\n}) == true --> Left side `" + Std.string(left17) + "` does not equal `" + Std.string(right17) + "`.",{ lineNumber : 286, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left18;
		try {
			var this42 = new geom_structure_Mat2x2(1.,2.,3.,4.);
			var a12 = this42;
			var this43 = new geom_structure_Mat2x2(1.,2.,3.,4.);
			var b11 = this43;
			var delta10 = 0.0000001;
			left18 = !(Math.abs(a12.a - b11.a) >= delta10 || Math.abs(a12.b - b11.b) >= delta10 || Math.abs(a12.c - b11.c) >= delta10 || Math.abs(a12.d - b11.d) >= delta10);
		} catch( ex36 ) {
			haxe_CallStack.lastException = ex36;
			left18 = "exception: " + Std.string(((ex36) instanceof js__$Boot_HaxeError) ? ex36.val : ex36) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right18;
		try {
			right18 = true;
		} catch( ex37 ) {
			haxe_CallStack.lastException = ex37;
			right18 = "exception: " + Std.string(((ex37) instanceof js__$Boot_HaxeError) ? ex37.val : ex37) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left18,right18)) {
			utest_Assert.pass("Matrix2x2.hx:303 [OK] ({\nvar a = new Matrix2x2({ a: 1., b: 2., c: 3., d: 4. });\nvar b = new Matrix2x2({ a: 1., b: 2., c: 3., d: 4. });\na == b; }) == true",{ lineNumber : 303, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix2x2({ a: 1., b: 2., c: 3., d: 4. });\nvar b = new Matrix2x2({ a: 1., b: 2., c: 3., d: 4. });\na == b; }) == true --> Left side `" + Std.string(left18) + "` does not equal `" + Std.string(right18) + "`.",{ lineNumber : 303, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left19;
		try {
			var this44 = new geom_structure_Mat2x2(1.,2.,3.,1.);
			var a13 = this44;
			var this45 = new geom_structure_Mat2x2(1.,2.,4.,1.);
			var b12 = this45;
			var delta11 = 0.0000001;
			left19 = !(!(Math.abs(a13.a - b12.a) >= delta11 || Math.abs(a13.b - b12.b) >= delta11 || Math.abs(a13.c - b12.c) >= delta11 || Math.abs(a13.d - b12.d) >= delta11));
		} catch( ex38 ) {
			haxe_CallStack.lastException = ex38;
			left19 = "exception: " + Std.string(((ex38) instanceof js__$Boot_HaxeError) ? ex38.val : ex38) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right19;
		try {
			right19 = true;
		} catch( ex39 ) {
			haxe_CallStack.lastException = ex39;
			right19 = "exception: " + Std.string(((ex39) instanceof js__$Boot_HaxeError) ? ex39.val : ex39) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left19,right19)) {
			utest_Assert.pass("Matrix2x2.hx:322 [OK] ({\nvar a = new Matrix2x2({ a: 1., b: 2., c: 3., d: 1. });\nvar b = new Matrix2x2({ a: 1., b: 2., c: 4., d: 1. });\na != b; }) == true",{ lineNumber : 322, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix2x2({ a: 1., b: 2., c: 3., d: 1. });\nvar b = new Matrix2x2({ a: 1., b: 2., c: 4., d: 1. });\na != b; }) == true --> Left side `" + Std.string(left19) + "` does not equal `" + Std.string(right19) + "`.",{ lineNumber : 322, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left20;
		try {
			var this46 = new geom_structure_Mat2x2(1.,0.,0.,1.);
			var a14 = this46;
			var this47 = new geom_structure_Mat2x2(a14.a - a14.a,a14.b - a14.b,a14.c - a14.c,a14.d - a14.d);
			var a15 = this47;
			var this48 = new geom_structure_Mat2x2(0.,0.,0.,0.);
			var b13 = this48;
			var delta12 = 0.0000001;
			left20 = !(Math.abs(a15.a - b13.a) >= delta12 || Math.abs(a15.b - b13.b) >= delta12 || Math.abs(a15.c - b13.c) >= delta12 || Math.abs(a15.d - b13.d) >= delta12);
		} catch( ex40 ) {
			haxe_CallStack.lastException = ex40;
			left20 = "exception: " + Std.string(((ex40) instanceof js__$Boot_HaxeError) ? ex40.val : ex40) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right20;
		try {
			right20 = true;
		} catch( ex41 ) {
			haxe_CallStack.lastException = ex41;
			right20 = "exception: " + Std.string(((ex41) instanceof js__$Boot_HaxeError) ? ex41.val : ex41) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left20,right20)) {
			utest_Assert.pass("Matrix2x2.hx:334 [OK] ({\nvar a = Matrix2x2.unit;\na - a == Matrix2x2.zero;\n}) == true",{ lineNumber : 334, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix2x2.unit;\na - a == Matrix2x2.zero;\n}) == true --> Left side `" + Std.string(left20) + "` does not equal `" + Std.string(right20) + "`.",{ lineNumber : 334, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left21;
		try {
			var this49 = new geom_structure_Mat2x2(1.,0.,0.,1.);
			var a16 = this49;
			var b14 = [1.,0.,0.,1.].slice(0);
			var c = geom_matrix_Conversion.Vectorto2x2(b14);
			var delta13 = 0.0000001;
			left21 = !(Math.abs(a16.a - c.a) >= delta13 || Math.abs(a16.b - c.b) >= delta13 || Math.abs(a16.c - c.c) >= delta13 || Math.abs(a16.d - c.d) >= delta13);
		} catch( ex42 ) {
			haxe_CallStack.lastException = ex42;
			left21 = "exception: " + Std.string(((ex42) instanceof js__$Boot_HaxeError) ? ex42.val : ex42) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right21;
		try {
			right21 = true;
		} catch( ex43 ) {
			haxe_CallStack.lastException = ex43;
			right21 = "exception: " + Std.string(((ex43) instanceof js__$Boot_HaxeError) ? ex43.val : ex43) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left21,right21)) {
			utest_Assert.pass("Matrix2x2.hx:400 [OK] ({\nvar a = Matrix2x2.unit;\nvar b = haxe.ds.Vector.fromArrayCopy([ 1., 0., 0., 1. ]);\nvar c: Matrix2x2 = b;\na == c;\n}) == true",{ lineNumber : 400, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix2x2.unit;\nvar b = haxe.ds.Vector.fromArrayCopy([ 1., 0., 0., 1. ]);\nvar c: Matrix2x2 = b;\na == c;\n}) == true --> Left side `" + Std.string(left21) + "` does not equal `" + Std.string(right21) + "`.",{ lineNumber : 400, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left22;
		try {
			var this50 = new geom_structure_Mat2x2(1.,0.,0.,1.);
			var a17 = this50;
			var b15 = geom_matrix_Conversion._2x2toVector(a17);
			var c1 = [1.,0.,0.,1.].slice(0);
			left22 = equals_Equal.equals(b15,c1);
		} catch( ex44 ) {
			haxe_CallStack.lastException = ex44;
			left22 = "exception: " + Std.string(((ex44) instanceof js__$Boot_HaxeError) ? ex44.val : ex44) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right22;
		try {
			right22 = true;
		} catch( ex45 ) {
			haxe_CallStack.lastException = ex45;
			right22 = "exception: " + Std.string(((ex45) instanceof js__$Boot_HaxeError) ? ex45.val : ex45) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left22,right22)) {
			utest_Assert.pass("Matrix2x2.hx:412 [OK] ({\nvar a = Matrix2x2.unit;\nvar b: haxe.ds.Vector<Float> = a;\nvar c = haxe.ds.Vector.fromArrayCopy([ 1., 0., 0., 1. ]);\nEqual.equals( b, c ); }) == true",{ lineNumber : 412, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix2x2.unit;\nvar b: haxe.ds.Vector<Float> = a;\nvar c = haxe.ds.Vector.fromArrayCopy([ 1., 0., 0., 1. ]);\nEqual.equals( b, c ); }) == true --> Left side `" + Std.string(left22) + "` does not equal `" + Std.string(right22) + "`.",{ lineNumber : 412, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left23;
		try {
			var this51 = new geom_structure_Mat2x2(1.,0.,0.,1.);
			var a18 = this51;
			a18.a = 1.;
			a18.b = 2.;
			a18.c = 3.;
			a18.d = 4.;
			var this52 = new geom_structure_Mat2x2(1.,2.,3.,4.);
			var b16 = this52;
			var delta14 = 0.0000001;
			left23 = !(Math.abs(a18.a - b16.a) >= delta14 || Math.abs(a18.b - b16.b) >= delta14 || Math.abs(a18.c - b16.c) >= delta14 || Math.abs(a18.d - b16.d) >= delta14);
		} catch( ex46 ) {
			haxe_CallStack.lastException = ex46;
			left23 = "exception: " + Std.string(((ex46) instanceof js__$Boot_HaxeError) ? ex46.val : ex46) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right23;
		try {
			right23 = true;
		} catch( ex47 ) {
			haxe_CallStack.lastException = ex47;
			right23 = "exception: " + Std.string(((ex47) instanceof js__$Boot_HaxeError) ? ex47.val : ex47) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left23,right23)) {
			utest_Assert.pass("Matrix2x2.hx:423 [OK] ({\nvar a = Matrix2x2.unit;\na.setXY( 0, 0, 1. );\na.setXY( 1, 0, 2. );\na.setXY( 0, 1, 3. );\na.setXY( 1, 1, 4. );\nvar b = new Matrix2x2({ a: 1., b: 2., c: 3., d: 4. });\na == b;\n}) == true",{ lineNumber : 423, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix2x2.unit;\na.setXY( 0, 0, 1. );\na.setXY( 1, 0, 2. );\na.setXY( 0, 1, 3. );\na.setXY( 1, 1, 4. );\nvar b = new Matrix2x2({ a: 1., b: 2., c: 3., d: 4. });\na == b;\n}) == true --> Left side `" + Std.string(left23) + "` does not equal `" + Std.string(right23) + "`.",{ lineNumber : 423, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
		var left24;
		try {
			var this53 = new geom_structure_Mat2x2(1.,2.,3.,4.);
			var a19 = this53;
			left24 = a19.a == 1 && a19.b == 2 && a19.c == 3 && a19.d == 4;
		} catch( ex48 ) {
			haxe_CallStack.lastException = ex48;
			left24 = "exception: " + Std.string(((ex48) instanceof js__$Boot_HaxeError) ? ex48.val : ex48) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right24;
		try {
			right24 = true;
		} catch( ex49 ) {
			haxe_CallStack.lastException = ex49;
			right24 = "exception: " + Std.string(((ex49) instanceof js__$Boot_HaxeError) ? ex49.val : ex49) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left24,right24)) {
			utest_Assert.pass("Matrix2x2.hx:444 [OK] ({\nvar a = new Matrix2x2({ a: 1., b: 2., c: 3., d: 4. });\na.getXY( 0, 0 ) == 1 && a.getXY( 1, 0 ) == 2 && a.getXY( 0, 1 ) == 3 && a.getXY( 1, 1 ) == 4;\n}) == true",{ lineNumber : 444, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix2x2({ a: 1., b: 2., c: 3., d: 4. });\na.getXY( 0, 0 ) == 1 && a.getXY( 1, 0 ) == 2 && a.getXY( 0, 1 ) == 3 && a.getXY( 1, 1 ) == 4;\n}) == true --> Left side `" + Std.string(left24) + "` does not equal `" + Std.string(right24) + "`.",{ lineNumber : 444, fileName : "src/geom/matrix/Matrix2x2.hx", className : "", methodName : ""});
		}
	}
	,testMatrix3x3_1: function() {
		var left;
		try {
			var this1 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
			left = this1;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			var this2 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
			var this3 = this2;
			var this4 = new geom_structure_Mat3x3(this3.a,this3.b,this3.c,this3.d,this3.e,this3.f,this3.g,this3.h,this3.i);
			right = this4;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("Matrix3x3.hx:20 [OK] Matrix3x3.counting == Matrix3x3.counting.clone()",{ lineNumber : 20, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix3x3.counting == Matrix3x3.counting.clone() --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 20, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		}
		var left1;
		try {
			var this5 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
			var m = this5;
			var arr = [];
			var arr1 = [m.a,m.b,m.c,m.d,m.e,m.f,m.g,m.h,m.i];
			var i = HxOverrides.iter(arr1);
			while(i.hasNext()) {
				var i1 = i.next();
				arr.push(i1);
			}
			left1 = [1.,2.,3.,4.,5.,6.,7.,8.,9.].toString() == arr.toString();
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			right1 = true;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left1,right1)) {
			utest_Assert.pass("Matrix3x3.hx:31 [OK] ({\nvar m = Matrix3x3.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.,4.,5.,6.,7.,8.,9.].toString() == arr.toString(); }) == true",{ lineNumber : 31, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar m = Matrix3x3.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.,4.,5.,6.,7.,8.,9.].toString() == arr.toString(); }) == true --> Left side `" + Std.string(left1) + "` does not equal `" + Std.string(right1) + "`.",{ lineNumber : 31, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		}
		var left2;
		try {
			var this6 = new geom_structure_Mat3x3(0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var a = this6;
			var this7 = new geom_structure_Mat3x3(0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var b = this7;
			var delta = 0.0000001;
			left2 = !(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta || Math.abs(a.e - b.e) >= delta || Math.abs(a.f - b.f) >= delta || Math.abs(a.g - b.g) >= delta || Math.abs(a.h - b.h) >= delta || Math.abs(a.i - b.i) >= delta);
		} catch( ex4 ) {
			haxe_CallStack.lastException = ex4;
			left2 = "exception: " + Std.string(((ex4) instanceof js__$Boot_HaxeError) ? ex4.val : ex4) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right2;
		try {
			right2 = true;
		} catch( ex5 ) {
			haxe_CallStack.lastException = ex5;
			right2 = "exception: " + Std.string(((ex5) instanceof js__$Boot_HaxeError) ? ex5.val : ex5) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left2,right2)) {
			utest_Assert.pass("Matrix3x3.hx:53 [OK] ({\nMatrix3x3.zero == new Matrix3x3( { a: 0., b: 0., c: 0.\n, d: 0., e: 0., f: 0.\n, g: 0., h: 0., i: 0. });\n}) == true",{ lineNumber : 53, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix3x3.zero == new Matrix3x3( { a: 0., b: 0., c: 0.\n, d: 0., e: 0., f: 0.\n, g: 0., h: 0., i: 0. });\n}) == true --> Left side `" + Std.string(left2) + "` does not equal `" + Std.string(right2) + "`.",{ lineNumber : 53, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		}
		var left3;
		try {
			var this8 = new geom_structure_Mat3x3(1.,0.,0.,0.,1.,0.,0.,0.,1.);
			var a1 = this8;
			var this9 = new geom_structure_Mat3x3(1.,0.,0.,0.,1.,0.,0.,0.,1.);
			var b1 = this9;
			var delta1 = 0.0000001;
			left3 = !(Math.abs(a1.a - b1.a) >= delta1 || Math.abs(a1.b - b1.b) >= delta1 || Math.abs(a1.c - b1.c) >= delta1 || Math.abs(a1.d - b1.d) >= delta1 || Math.abs(a1.e - b1.e) >= delta1 || Math.abs(a1.f - b1.f) >= delta1 || Math.abs(a1.g - b1.g) >= delta1 || Math.abs(a1.h - b1.h) >= delta1 || Math.abs(a1.i - b1.i) >= delta1);
		} catch( ex6 ) {
			haxe_CallStack.lastException = ex6;
			left3 = "exception: " + Std.string(((ex6) instanceof js__$Boot_HaxeError) ? ex6.val : ex6) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right3;
		try {
			right3 = true;
		} catch( ex7 ) {
			haxe_CallStack.lastException = ex7;
			right3 = "exception: " + Std.string(((ex7) instanceof js__$Boot_HaxeError) ? ex7.val : ex7) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left3,right3)) {
			utest_Assert.pass("Matrix3x3.hx:74 [OK] ({\nMatrix3x3.unit == new Matrix3x3({ a: 1., b: 0., c: 0.\n, d: 0., e: 1., f: 0.\n, g: 0., h: 0., i: 1. });\n}) == true",{ lineNumber : 74, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix3x3.unit == new Matrix3x3({ a: 1., b: 0., c: 0.\n, d: 0., e: 1., f: 0.\n, g: 0., h: 0., i: 1. });\n}) == true --> Left side `" + Std.string(left3) + "` does not equal `" + Std.string(right3) + "`.",{ lineNumber : 74, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		}
		var left4;
		try {
			var this10 = new geom_structure_Mat3x3(1.,0.,0.,0.,1.,0.,0.,0.,1.);
			var a2 = this10;
			var this11 = new geom_structure_Mat3x3(-a2.a,-a2.b,-a2.c,-a2.d,-a2.e,-a2.f,-a2.g,-a2.h,-a2.i);
			left4 = this11;
		} catch( ex8 ) {
			haxe_CallStack.lastException = ex8;
			left4 = "exception: " + Std.string(((ex8) instanceof js__$Boot_HaxeError) ? ex8.val : ex8) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right4;
		try {
			var this12 = new geom_structure_Mat3x3(-1.,0.,0.,0.,-1.,0.,0.,0.,-1.);
			right4 = this12;
		} catch( ex9 ) {
			haxe_CallStack.lastException = ex9;
			right4 = "exception: " + Std.string(((ex9) instanceof js__$Boot_HaxeError) ? ex9.val : ex9) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left4,right4)) {
			utest_Assert.pass("Matrix3x3.hx:95 [OK] Matrix3x3.minus1 == new Matrix3x3({ a: -1., b: 0., c: 0.\n, d: 0.,  e: -1., f: 0.\n, g: 0.,  h: 0., i: -1. })",{ lineNumber : 95, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix3x3.minus1 == new Matrix3x3({ a: -1., b: 0., c: 0.\n, d: 0.,  e: -1., f: 0.\n, g: 0.,  h: 0., i: -1. }) --> Left side `" + Std.string(left4) + "` does not equal `" + Std.string(right4) + "`.",{ lineNumber : 95, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		}
		var left5;
		try {
			var this13 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
			var a3 = this13;
			var this14 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
			var b2 = this14;
			var delta2 = 0.0000001;
			left5 = !(Math.abs(a3.a - b2.a) >= delta2 || Math.abs(a3.b - b2.b) >= delta2 || Math.abs(a3.c - b2.c) >= delta2 || Math.abs(a3.d - b2.d) >= delta2 || Math.abs(a3.e - b2.e) >= delta2 || Math.abs(a3.f - b2.f) >= delta2 || Math.abs(a3.g - b2.g) >= delta2 || Math.abs(a3.h - b2.h) >= delta2 || Math.abs(a3.i - b2.i) >= delta2);
		} catch( ex10 ) {
			haxe_CallStack.lastException = ex10;
			left5 = "exception: " + Std.string(((ex10) instanceof js__$Boot_HaxeError) ? ex10.val : ex10) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right5;
		try {
			right5 = true;
		} catch( ex11 ) {
			haxe_CallStack.lastException = ex11;
			right5 = "exception: " + Std.string(((ex11) instanceof js__$Boot_HaxeError) ? ex11.val : ex11) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left5,right5)) {
			utest_Assert.pass("Matrix3x3.hx:107 [OK] ({\nMatrix3x3.counting == new Matrix3x3( { a: 1., b: 2., c: 3.\n, d: 4., e: 5., f: 6.\n, g: 7., h: 8., i: 9. });\n}) == true",{ lineNumber : 107, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix3x3.counting == new Matrix3x3( { a: 1., b: 2., c: 3.\n, d: 4., e: 5., f: 6.\n, g: 7., h: 8., i: 9. });\n}) == true --> Left side `" + Std.string(left5) + "` does not equal `" + Std.string(right5) + "`.",{ lineNumber : 107, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		}
		var left6;
		try {
			var this15 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
			var a4 = this15;
			var this16 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
			var b3 = this16;
			var delta3 = 0.0000001;
			left6 = !(Math.abs(a4.a - b3.a) >= delta3 || Math.abs(a4.b - b3.b) >= delta3 || Math.abs(a4.c - b3.c) >= delta3 || Math.abs(a4.d - b3.d) >= delta3 || Math.abs(a4.e - b3.e) >= delta3 || Math.abs(a4.f - b3.f) >= delta3 || Math.abs(a4.g - b3.g) >= delta3 || Math.abs(a4.h - b3.h) >= delta3 || Math.abs(a4.i - b3.i) >= delta3);
		} catch( ex12 ) {
			haxe_CallStack.lastException = ex12;
			left6 = "exception: " + Std.string(((ex12) instanceof js__$Boot_HaxeError) ? ex12.val : ex12) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right6;
		try {
			right6 = true;
		} catch( ex13 ) {
			haxe_CallStack.lastException = ex13;
			right6 = "exception: " + Std.string(((ex13) instanceof js__$Boot_HaxeError) ? ex13.val : ex13) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left6,right6)) {
			utest_Assert.pass("Matrix3x3.hx:129 [OK] ({\nMatrix3x3._123456789 == new Matrix3x3({ a: 1., b: 2., c: 3.\n, d: 4., e: 5., f: 6.\n, g: 7., h: 8., i: 9. });\n}) == true",{ lineNumber : 129, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix3x3._123456789 == new Matrix3x3({ a: 1., b: 2., c: 3.\n, d: 4., e: 5., f: 6.\n, g: 7., h: 8., i: 9. });\n}) == true --> Left side `" + Std.string(left6) + "` does not equal `" + Std.string(right6) + "`.",{ lineNumber : 129, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		}
		var left7;
		try {
			var this17 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
			var a5 = this17;
			var this18 = new geom_structure_Mat3x3(-a5.a,-a5.b,-a5.c,-a5.d,-a5.e,-a5.f,-a5.g,-a5.h,-a5.i);
			var b4 = this18;
			var this19 = new geom_structure_Mat3x3(-1.,-2.,-3.,-4.,-5.,-6.,-7.,-8.,-9.);
			var b5 = this19;
			var delta4 = 0.0000001;
			left7 = !(Math.abs(b4.a - b5.a) >= delta4 || Math.abs(b4.b - b5.b) >= delta4 || Math.abs(b4.c - b5.c) >= delta4 || Math.abs(b4.d - b5.d) >= delta4 || Math.abs(b4.e - b5.e) >= delta4 || Math.abs(b4.f - b5.f) >= delta4 || Math.abs(b4.g - b5.g) >= delta4 || Math.abs(b4.h - b5.h) >= delta4 || Math.abs(b4.i - b5.i) >= delta4);
		} catch( ex14 ) {
			haxe_CallStack.lastException = ex14;
			left7 = "exception: " + Std.string(((ex14) instanceof js__$Boot_HaxeError) ? ex14.val : ex14) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right7;
		try {
			right7 = true;
		} catch( ex15 ) {
			haxe_CallStack.lastException = ex15;
			right7 = "exception: " + Std.string(((ex15) instanceof js__$Boot_HaxeError) ? ex15.val : ex15) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left7,right7)) {
			utest_Assert.pass("Matrix3x3.hx:297 [OK] ({\nvar a = Matrix3x3.counting;\nvar b = -a;\nb == new Matrix3x3({ a: -1., b: -2., c: -3., d: -4., e: -5., f: -6., g: -7., h: -8., i: -9. }); }) == true",{ lineNumber : 297, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix3x3.counting;\nvar b = -a;\nb == new Matrix3x3({ a: -1., b: -2., c: -3., d: -4., e: -5., f: -6., g: -7., h: -8., i: -9. }); }) == true --> Left side `" + Std.string(left7) + "` does not equal `" + Std.string(right7) + "`.",{ lineNumber : 297, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		}
		var left8;
		try {
			var this20 = new geom_structure_Mat3x3(1.,0.,0.,0.,1.,0.,0.,0.,1.);
			var a6 = this20;
			var this21 = new geom_structure_Mat3x3(a6.a + a6.a,a6.b + a6.b,a6.c + a6.c,a6.d + a6.d,a6.e + a6.e,a6.f + a6.f,a6.d + a6.d,a6.h + a6.h,a6.i + a6.i);
			var a7 = this21;
			var this22 = new geom_structure_Mat3x3(2.,0.,0.,0.,2.,0.,0.,0.,2.);
			var b6 = this22;
			var delta5 = 0.0000001;
			left8 = !(Math.abs(a7.a - b6.a) >= delta5 || Math.abs(a7.b - b6.b) >= delta5 || Math.abs(a7.c - b6.c) >= delta5 || Math.abs(a7.d - b6.d) >= delta5 || Math.abs(a7.e - b6.e) >= delta5 || Math.abs(a7.f - b6.f) >= delta5 || Math.abs(a7.g - b6.g) >= delta5 || Math.abs(a7.h - b6.h) >= delta5 || Math.abs(a7.i - b6.i) >= delta5);
		} catch( ex16 ) {
			haxe_CallStack.lastException = ex16;
			left8 = "exception: " + Std.string(((ex16) instanceof js__$Boot_HaxeError) ? ex16.val : ex16) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right8;
		try {
			right8 = true;
		} catch( ex17 ) {
			haxe_CallStack.lastException = ex17;
			right8 = "exception: " + Std.string(((ex17) instanceof js__$Boot_HaxeError) ? ex17.val : ex17) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left8,right8)) {
			utest_Assert.pass("Matrix3x3.hx:315 [OK] ({\nvar a = Matrix3x3.unit;\na + a == new Matrix3x3( { a: 2., b: 0., c: 0.\n, d: 0., e: 2., f: 0.\n, g: 0., h: 0., i: 2. } ); }) == true",{ lineNumber : 315, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix3x3.unit;\na + a == new Matrix3x3( { a: 2., b: 0., c: 0.\n, d: 0., e: 2., f: 0.\n, g: 0., h: 0., i: 2. } ); }) == true --> Left side `" + Std.string(left8) + "` does not equal `" + Std.string(right8) + "`.",{ lineNumber : 315, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		}
		var left9;
		try {
			var this23 = new geom_structure_Mat3x3(1.,0.,0.,0.,1.,0.,0.,0.,1.);
			var a8 = this23;
			var this24 = new geom_structure_Mat3x3(a8.a - a8.a,a8.b - a8.b,a8.c - a8.c,a8.d - a8.d,a8.e - a8.e,a8.f - a8.f,a8.g - a8.g,a8.h - a8.h,a8.i - a8.i);
			var a9 = this24;
			var this25 = new geom_structure_Mat3x3(0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var b7 = this25;
			var delta6 = 0.0000001;
			left9 = !(Math.abs(a9.a - b7.a) >= delta6 || Math.abs(a9.b - b7.b) >= delta6 || Math.abs(a9.c - b7.c) >= delta6 || Math.abs(a9.d - b7.d) >= delta6 || Math.abs(a9.e - b7.e) >= delta6 || Math.abs(a9.f - b7.f) >= delta6 || Math.abs(a9.g - b7.g) >= delta6 || Math.abs(a9.h - b7.h) >= delta6 || Math.abs(a9.i - b7.i) >= delta6);
		} catch( ex18 ) {
			haxe_CallStack.lastException = ex18;
			left9 = "exception: " + Std.string(((ex18) instanceof js__$Boot_HaxeError) ? ex18.val : ex18) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right9;
		try {
			right9 = true;
		} catch( ex19 ) {
			haxe_CallStack.lastException = ex19;
			right9 = "exception: " + Std.string(((ex19) instanceof js__$Boot_HaxeError) ? ex19.val : ex19) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left9,right9)) {
			utest_Assert.pass("Matrix3x3.hx:334 [OK] ({\nvar a = Matrix3x3.unit;\na - a == Matrix3x3.zero; }) == true",{ lineNumber : 334, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix3x3.unit;\na - a == Matrix3x3.zero; }) == true --> Left side `" + Std.string(left9) + "` does not equal `" + Std.string(right9) + "`.",{ lineNumber : 334, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		}
		var left10;
		try {
			var this26 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
			var a10 = this26;
			var this27 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
			var b8 = this27;
			var delta7 = 0.0000001;
			left10 = !(Math.abs(a10.a - b8.a) >= delta7 || Math.abs(a10.b - b8.b) >= delta7 || Math.abs(a10.c - b8.c) >= delta7 || Math.abs(a10.d - b8.d) >= delta7 || Math.abs(a10.e - b8.e) >= delta7 || Math.abs(a10.f - b8.f) >= delta7 || Math.abs(a10.g - b8.g) >= delta7 || Math.abs(a10.h - b8.h) >= delta7 || Math.abs(a10.i - b8.i) >= delta7);
		} catch( ex20 ) {
			haxe_CallStack.lastException = ex20;
			left10 = "exception: " + Std.string(((ex20) instanceof js__$Boot_HaxeError) ? ex20.val : ex20) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right10;
		try {
			right10 = true;
		} catch( ex21 ) {
			haxe_CallStack.lastException = ex21;
			right10 = "exception: " + Std.string(((ex21) instanceof js__$Boot_HaxeError) ? ex21.val : ex21) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left10,right10)) {
			utest_Assert.pass("Matrix3x3.hx:382 [OK] ({\nvar a = new Matrix3x3({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9. });\nvar b = new Matrix3x3({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9. });\na == b; }) == true",{ lineNumber : 382, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix3x3({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9. });\nvar b = new Matrix3x3({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9. });\na == b; }) == true --> Left side `" + Std.string(left10) + "` does not equal `" + Std.string(right10) + "`.",{ lineNumber : 382, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		}
		var left11;
		try {
			var this28 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
			var a11 = this28;
			var this29 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,8.);
			var b9 = this29;
			var delta8 = 0.0000001;
			left11 = !(!(Math.abs(a11.a - b9.a) >= delta8 || Math.abs(a11.b - b9.b) >= delta8 || Math.abs(a11.c - b9.c) >= delta8 || Math.abs(a11.d - b9.d) >= delta8 || Math.abs(a11.e - b9.e) >= delta8 || Math.abs(a11.f - b9.f) >= delta8 || Math.abs(a11.g - b9.g) >= delta8 || Math.abs(a11.h - b9.h) >= delta8 || Math.abs(a11.i - b9.i) >= delta8));
		} catch( ex22 ) {
			haxe_CallStack.lastException = ex22;
			left11 = "exception: " + Std.string(((ex22) instanceof js__$Boot_HaxeError) ? ex22.val : ex22) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right11;
		try {
			right11 = true;
		} catch( ex23 ) {
			haxe_CallStack.lastException = ex23;
			right11 = "exception: " + Std.string(((ex23) instanceof js__$Boot_HaxeError) ? ex23.val : ex23) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left11,right11)) {
			utest_Assert.pass("Matrix3x3.hx:410 [OK] ({\nvar a = new Matrix3x3({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9. });\nvar b = new Matrix3x3({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 8. });\na != b; }) == true",{ lineNumber : 410, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix3x3({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9. });\nvar b = new Matrix3x3({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 8. });\na != b; }) == true --> Left side `" + Std.string(left11) + "` does not equal `" + Std.string(right11) + "`.",{ lineNumber : 410, fileName : "src/geom/matrix/Matrix3x3.hx", className : "", methodName : ""});
		}
	}
	,testMatrix4x3_1: function() {
		var left;
		try {
			var this1 = new geom_structure_Mat4x3(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.);
			left = this1;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			var this2 = new geom_structure_Mat4x3(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.);
			var this3 = this2;
			var this4 = new geom_structure_Mat4x3(this3.a,this3.b,this3.c,this3.d,this3.e,this3.f,this3.g,this3.h,this3.i,this3.j,this3.k,this3.l);
			right = this4;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("Matrix4x3.hx:21 [OK] Matrix4x3.counting == Matrix4x3.counting.clone()",{ lineNumber : 21, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix4x3.counting == Matrix4x3.counting.clone() --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 21, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left1;
		try {
			var this5 = new geom_structure_Mat4x3(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.);
			var m = this5;
			var arr = [];
			var arr1 = [m.a,m.b,m.c,m.d,m.e,m.f,m.g,m.h,m.i,m.j,m.k,m.l];
			var i = HxOverrides.iter(arr1);
			while(i.hasNext()) {
				var i1 = i.next();
				arr.push(i1);
			}
			left1 = [1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.].toString() == arr.toString();
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			right1 = true;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left1,right1)) {
			utest_Assert.pass("Matrix4x3.hx:32 [OK] ({\nvar m = Matrix4x3.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.].toString() == arr.toString(); }) == true",{ lineNumber : 32, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar m = Matrix4x3.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.].toString() == arr.toString(); }) == true --> Left side `" + Std.string(left1) + "` does not equal `" + Std.string(right1) + "`.",{ lineNumber : 32, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left2;
		try {
			var this6 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var a = this6;
			var this7 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var b = this7;
			var delta = 0.0000001;
			left2 = !(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta || Math.abs(a.e - b.e) >= delta || Math.abs(a.f - b.f) >= delta || Math.abs(a.g - b.g) >= delta || Math.abs(a.h - b.h) >= delta || Math.abs(a.i - b.i) >= delta || Math.abs(a.j - b.j) >= delta || Math.abs(a.k - b.k) >= delta || Math.abs(a.l - b.l) >= delta);
		} catch( ex4 ) {
			haxe_CallStack.lastException = ex4;
			left2 = "exception: " + Std.string(((ex4) instanceof js__$Boot_HaxeError) ? ex4.val : ex4) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right2;
		try {
			right2 = true;
		} catch( ex5 ) {
			haxe_CallStack.lastException = ex5;
			right2 = "exception: " + Std.string(((ex5) instanceof js__$Boot_HaxeError) ? ex5.val : ex5) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left2,right2)) {
			utest_Assert.pass("Matrix4x3.hx:53 [OK] ({\nMatrix4x3.zero == new Matrix4x3({ a: 0., b: 0., c: 0., d: 0.\n, e: 0., f: 0., g: 0., h: 0.\n, i: 0., j: 0., k: 0., l: 0. } );\n}) == true",{ lineNumber : 53, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.zero == new Matrix4x3({ a: 0., b: 0., c: 0., d: 0.\n, e: 0., f: 0., g: 0., h: 0.\n, i: 0., j: 0., k: 0., l: 0. } );\n}) == true --> Left side `" + Std.string(left2) + "` does not equal `" + Std.string(right2) + "`.",{ lineNumber : 53, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left3;
		try {
			var this8 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
			var a1 = this8;
			var this9 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
			var b1 = this9;
			var delta1 = 0.0000001;
			left3 = !(Math.abs(a1.a - b1.a) >= delta1 || Math.abs(a1.b - b1.b) >= delta1 || Math.abs(a1.c - b1.c) >= delta1 || Math.abs(a1.d - b1.d) >= delta1 || Math.abs(a1.e - b1.e) >= delta1 || Math.abs(a1.f - b1.f) >= delta1 || Math.abs(a1.g - b1.g) >= delta1 || Math.abs(a1.h - b1.h) >= delta1 || Math.abs(a1.i - b1.i) >= delta1 || Math.abs(a1.j - b1.j) >= delta1 || Math.abs(a1.k - b1.k) >= delta1 || Math.abs(a1.l - b1.l) >= delta1);
		} catch( ex6 ) {
			haxe_CallStack.lastException = ex6;
			left3 = "exception: " + Std.string(((ex6) instanceof js__$Boot_HaxeError) ? ex6.val : ex6) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right3;
		try {
			right3 = true;
		} catch( ex7 ) {
			haxe_CallStack.lastException = ex7;
			right3 = "exception: " + Std.string(((ex7) instanceof js__$Boot_HaxeError) ? ex7.val : ex7) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left3,right3)) {
			utest_Assert.pass("Matrix4x3.hx:74 [OK] ({\nMatrix4x3.unit == new Matrix4x3({ a: 1., b: 0., c: 0., d: 0.\n, e: 0., f: 1., g: 0., h: 0.\n, i: 0., j: 0., k: 1., l: 0. } );\n}) == true",{ lineNumber : 74, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.unit == new Matrix4x3({ a: 1., b: 0., c: 0., d: 0.\n, e: 0., f: 1., g: 0., h: 0.\n, i: 0., j: 0., k: 1., l: 0. } );\n}) == true --> Left side `" + Std.string(left3) + "` does not equal `" + Std.string(right3) + "`.",{ lineNumber : 74, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left4;
		try {
			var this10 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
			var a2 = this10;
			var this11 = new geom_structure_Mat4x3(-a2.a,-a2.b,-a2.c,-a2.d,-a2.e,-a2.f,-a2.g,-a2.h,-a2.i,-a2.j,-a2.k,-a2.l);
			var a3 = this11;
			var this12 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.,0.);
			var b2 = this12;
			var delta2 = 0.0000001;
			left4 = !(Math.abs(a3.a - b2.a) >= delta2 || Math.abs(a3.b - b2.b) >= delta2 || Math.abs(a3.c - b2.c) >= delta2 || Math.abs(a3.d - b2.d) >= delta2 || Math.abs(a3.e - b2.e) >= delta2 || Math.abs(a3.f - b2.f) >= delta2 || Math.abs(a3.g - b2.g) >= delta2 || Math.abs(a3.h - b2.h) >= delta2 || Math.abs(a3.i - b2.i) >= delta2 || Math.abs(a3.j - b2.j) >= delta2 || Math.abs(a3.k - b2.k) >= delta2 || Math.abs(a3.l - b2.l) >= delta2);
		} catch( ex8 ) {
			haxe_CallStack.lastException = ex8;
			left4 = "exception: " + Std.string(((ex8) instanceof js__$Boot_HaxeError) ? ex8.val : ex8) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right4;
		try {
			right4 = true;
		} catch( ex9 ) {
			haxe_CallStack.lastException = ex9;
			right4 = "exception: " + Std.string(((ex9) instanceof js__$Boot_HaxeError) ? ex9.val : ex9) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left4,right4)) {
			utest_Assert.pass("Matrix4x3.hx:95 [OK] ({\nMatrix4x3.minus1 == new Matrix4x3({ a: -1., b: 0., c: 0., d: 0.\n, e: 0., f: -1., g: 0., h: 0.\n, i: 0., j: 0., k: -1., l: 0. } );\n}) == true",{ lineNumber : 95, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.minus1 == new Matrix4x3({ a: -1., b: 0., c: 0., d: 0.\n, e: 0., f: -1., g: 0., h: 0.\n, i: 0., j: 0., k: -1., l: 0. } );\n}) == true --> Left side `" + Std.string(left4) + "` does not equal `" + Std.string(right4) + "`.",{ lineNumber : 95, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left5;
		try {
			var this13 = new geom_structure_Mat4x3(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.);
			var a4 = this13;
			var this14 = new geom_structure_Mat4x3(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.);
			var b3 = this14;
			var delta3 = 0.0000001;
			left5 = !(Math.abs(a4.a - b3.a) >= delta3 || Math.abs(a4.b - b3.b) >= delta3 || Math.abs(a4.c - b3.c) >= delta3 || Math.abs(a4.d - b3.d) >= delta3 || Math.abs(a4.e - b3.e) >= delta3 || Math.abs(a4.f - b3.f) >= delta3 || Math.abs(a4.g - b3.g) >= delta3 || Math.abs(a4.h - b3.h) >= delta3 || Math.abs(a4.i - b3.i) >= delta3 || Math.abs(a4.j - b3.j) >= delta3 || Math.abs(a4.k - b3.k) >= delta3 || Math.abs(a4.l - b3.l) >= delta3);
		} catch( ex10 ) {
			haxe_CallStack.lastException = ex10;
			left5 = "exception: " + Std.string(((ex10) instanceof js__$Boot_HaxeError) ? ex10.val : ex10) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right5;
		try {
			right5 = true;
		} catch( ex11 ) {
			haxe_CallStack.lastException = ex11;
			right5 = "exception: " + Std.string(((ex11) instanceof js__$Boot_HaxeError) ? ex11.val : ex11) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left5,right5)) {
			utest_Assert.pass("Matrix4x3.hx:109 [OK] ({\nMatrix4x3.counting == new Matrix4x3({ a: 1., b: 2.,  c: 3.,  d: 4.\n, e: 5., f: 6.,  g: 7.,  h: 8.\n, i: 9., j: 10., k: 11., l: 12. } );\n}) == true",{ lineNumber : 109, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.counting == new Matrix4x3({ a: 1., b: 2.,  c: 3.,  d: 4.\n, e: 5., f: 6.,  g: 7.,  h: 8.\n, i: 9., j: 10., k: 11., l: 12. } );\n}) == true --> Left side `" + Std.string(left5) + "` does not equal `" + Std.string(right5) + "`.",{ lineNumber : 109, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left6;
		try {
			var this15 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.);
			var a5 = this15;
			var this16 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.);
			var b4 = this16;
			var delta4 = 0.0000001;
			left6 = !(Math.abs(a5.a - b4.a) >= delta4 || Math.abs(a5.b - b4.b) >= delta4 || Math.abs(a5.c - b4.c) >= delta4 || Math.abs(a5.d - b4.d) >= delta4 || Math.abs(a5.e - b4.e) >= delta4 || Math.abs(a5.f - b4.f) >= delta4 || Math.abs(a5.g - b4.g) >= delta4 || Math.abs(a5.h - b4.h) >= delta4 || Math.abs(a5.i - b4.i) >= delta4 || Math.abs(a5.j - b4.j) >= delta4 || Math.abs(a5.k - b4.k) >= delta4 || Math.abs(a5.l - b4.l) >= delta4);
		} catch( ex12 ) {
			haxe_CallStack.lastException = ex12;
			left6 = "exception: " + Std.string(((ex12) instanceof js__$Boot_HaxeError) ? ex12.val : ex12) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right6;
		try {
			right6 = true;
		} catch( ex13 ) {
			haxe_CallStack.lastException = ex13;
			right6 = "exception: " + Std.string(((ex13) instanceof js__$Boot_HaxeError) ? ex13.val : ex13) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left6,right6)) {
			utest_Assert.pass("Matrix4x3.hx:133 [OK] ({\nMatrix4x3.topLeft == new Matrix4x3({ a: -1., b: 0., c: 0., d: 0.\n, e: 0.,  f: 1., g: 0., h: 0.\n, i: 0.,  j: 0., k: 0., l: 0. } );\n}) == true",{ lineNumber : 133, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.topLeft == new Matrix4x3({ a: -1., b: 0., c: 0., d: 0.\n, e: 0.,  f: 1., g: 0., h: 0.\n, i: 0.,  j: 0., k: 0., l: 0. } );\n}) == true --> Left side `" + Std.string(left6) + "` does not equal `" + Std.string(right6) + "`.",{ lineNumber : 133, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left7;
		try {
			var this17 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.);
			var a6 = this17;
			var this18 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.);
			var b5 = this18;
			var delta5 = 0.0000001;
			left7 = !(Math.abs(a6.a - b5.a) >= delta5 || Math.abs(a6.b - b5.b) >= delta5 || Math.abs(a6.c - b5.c) >= delta5 || Math.abs(a6.d - b5.d) >= delta5 || Math.abs(a6.e - b5.e) >= delta5 || Math.abs(a6.f - b5.f) >= delta5 || Math.abs(a6.g - b5.g) >= delta5 || Math.abs(a6.h - b5.h) >= delta5 || Math.abs(a6.i - b5.i) >= delta5 || Math.abs(a6.j - b5.j) >= delta5 || Math.abs(a6.k - b5.k) >= delta5 || Math.abs(a6.l - b5.l) >= delta5);
		} catch( ex14 ) {
			haxe_CallStack.lastException = ex14;
			left7 = "exception: " + Std.string(((ex14) instanceof js__$Boot_HaxeError) ? ex14.val : ex14) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right7;
		try {
			right7 = true;
		} catch( ex15 ) {
			haxe_CallStack.lastException = ex15;
			right7 = "exception: " + Std.string(((ex15) instanceof js__$Boot_HaxeError) ? ex15.val : ex15) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left7,right7)) {
			utest_Assert.pass("Matrix4x3.hx:149 [OK] ({\nMatrix4x3.topRight == new Matrix4x3({ a: 1., b: 0., c: 0., d: 0.\n, e: 0., f: 1., g: 0., h: 0.\n, i: 0., j: 0., k: 0., l: 0. } );\n}) == true",{ lineNumber : 149, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.topRight == new Matrix4x3({ a: 1., b: 0., c: 0., d: 0.\n, e: 0., f: 1., g: 0., h: 0.\n, i: 0., j: 0., k: 0., l: 0. } );\n}) == true --> Left side `" + Std.string(left7) + "` does not equal `" + Std.string(right7) + "`.",{ lineNumber : 149, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left8;
		try {
			var this19 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.);
			var a7 = this19;
			var this20 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.);
			var b6 = this20;
			var delta6 = 0.0000001;
			left8 = !(Math.abs(a7.a - b6.a) >= delta6 || Math.abs(a7.b - b6.b) >= delta6 || Math.abs(a7.c - b6.c) >= delta6 || Math.abs(a7.d - b6.d) >= delta6 || Math.abs(a7.e - b6.e) >= delta6 || Math.abs(a7.f - b6.f) >= delta6 || Math.abs(a7.g - b6.g) >= delta6 || Math.abs(a7.h - b6.h) >= delta6 || Math.abs(a7.i - b6.i) >= delta6 || Math.abs(a7.j - b6.j) >= delta6 || Math.abs(a7.k - b6.k) >= delta6 || Math.abs(a7.l - b6.l) >= delta6);
		} catch( ex16 ) {
			haxe_CallStack.lastException = ex16;
			left8 = "exception: " + Std.string(((ex16) instanceof js__$Boot_HaxeError) ? ex16.val : ex16) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right8;
		try {
			right8 = true;
		} catch( ex17 ) {
			haxe_CallStack.lastException = ex17;
			right8 = "exception: " + Std.string(((ex17) instanceof js__$Boot_HaxeError) ? ex17.val : ex17) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left8,right8)) {
			utest_Assert.pass("Matrix4x3.hx:165 [OK] ({\nMatrix4x3.bottomLeft == new Matrix4x3({ a: -1., b: 0.,  c: 0., d: 0.\n, e: 0.,  f: -1., g: 0., h: 0.\n, i: 0.,  j: 0.,  k: 0., l: 0. } );\n}) == true",{ lineNumber : 165, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.bottomLeft == new Matrix4x3({ a: -1., b: 0.,  c: 0., d: 0.\n, e: 0.,  f: -1., g: 0., h: 0.\n, i: 0.,  j: 0.,  k: 0., l: 0. } );\n}) == true --> Left side `" + Std.string(left8) + "` does not equal `" + Std.string(right8) + "`.",{ lineNumber : 165, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left9;
		try {
			var this21 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.);
			var a8 = this21;
			var this22 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.);
			var b7 = this22;
			var delta7 = 0.0000001;
			left9 = !(Math.abs(a8.a - b7.a) >= delta7 || Math.abs(a8.b - b7.b) >= delta7 || Math.abs(a8.c - b7.c) >= delta7 || Math.abs(a8.d - b7.d) >= delta7 || Math.abs(a8.e - b7.e) >= delta7 || Math.abs(a8.f - b7.f) >= delta7 || Math.abs(a8.g - b7.g) >= delta7 || Math.abs(a8.h - b7.h) >= delta7 || Math.abs(a8.i - b7.i) >= delta7 || Math.abs(a8.j - b7.j) >= delta7 || Math.abs(a8.k - b7.k) >= delta7 || Math.abs(a8.l - b7.l) >= delta7);
		} catch( ex18 ) {
			haxe_CallStack.lastException = ex18;
			left9 = "exception: " + Std.string(((ex18) instanceof js__$Boot_HaxeError) ? ex18.val : ex18) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right9;
		try {
			right9 = true;
		} catch( ex19 ) {
			haxe_CallStack.lastException = ex19;
			right9 = "exception: " + Std.string(((ex19) instanceof js__$Boot_HaxeError) ? ex19.val : ex19) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left9,right9)) {
			utest_Assert.pass("Matrix4x3.hx:181 [OK] ({\nMatrix4x3.bottomRight == new Matrix4x3({ a: 1., b: 0.,  c: 0., d: 0.\n, e: 0., f: -1., g: 0., h: 0.\n, i: 0., j: 0.,  k: 0., l: 0. } );\n}) == true",{ lineNumber : 181, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.bottomRight == new Matrix4x3({ a: 1., b: 0.,  c: 0., d: 0.\n, e: 0., f: -1., g: 0., h: 0.\n, i: 0., j: 0.,  k: 0., l: 0. } );\n}) == true --> Left side `" + Std.string(left9) + "` does not equal `" + Std.string(right9) + "`.",{ lineNumber : 181, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left10;
		try {
			var this23 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.);
			var a9 = this23;
			var this24 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.);
			var b8 = this24;
			var delta8 = 0.0000001;
			left10 = !(Math.abs(a9.a - b8.a) >= delta8 || Math.abs(a9.b - b8.b) >= delta8 || Math.abs(a9.c - b8.c) >= delta8 || Math.abs(a9.d - b8.d) >= delta8 || Math.abs(a9.e - b8.e) >= delta8 || Math.abs(a9.f - b8.f) >= delta8 || Math.abs(a9.g - b8.g) >= delta8 || Math.abs(a9.h - b8.h) >= delta8 || Math.abs(a9.i - b8.i) >= delta8 || Math.abs(a9.j - b8.j) >= delta8 || Math.abs(a9.k - b8.k) >= delta8 || Math.abs(a9.l - b8.l) >= delta8);
		} catch( ex20 ) {
			haxe_CallStack.lastException = ex20;
			left10 = "exception: " + Std.string(((ex20) instanceof js__$Boot_HaxeError) ? ex20.val : ex20) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right10;
		try {
			right10 = true;
		} catch( ex21 ) {
			haxe_CallStack.lastException = ex21;
			right10 = "exception: " + Std.string(((ex21) instanceof js__$Boot_HaxeError) ? ex21.val : ex21) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left10,right10)) {
			utest_Assert.pass("Matrix4x3.hx:197 [OK] ({\nMatrix4x3.north == new Matrix4x3({ a: 0., b: 0., c: 0., d: 0.\n, e: 0., f: 1., g: 0., h: 0.\n, i: 0., j: 0., k: 0., l: 0. } );\n}) == true",{ lineNumber : 197, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.north == new Matrix4x3({ a: 0., b: 0., c: 0., d: 0.\n, e: 0., f: 1., g: 0., h: 0.\n, i: 0., j: 0., k: 0., l: 0. } );\n}) == true --> Left side `" + Std.string(left10) + "` does not equal `" + Std.string(right10) + "`.",{ lineNumber : 197, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left11;
		try {
			var this25 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.);
			var a10 = this25;
			var this26 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.);
			var b9 = this26;
			var delta9 = 0.0000001;
			left11 = !(Math.abs(a10.a - b9.a) >= delta9 || Math.abs(a10.b - b9.b) >= delta9 || Math.abs(a10.c - b9.c) >= delta9 || Math.abs(a10.d - b9.d) >= delta9 || Math.abs(a10.e - b9.e) >= delta9 || Math.abs(a10.f - b9.f) >= delta9 || Math.abs(a10.g - b9.g) >= delta9 || Math.abs(a10.h - b9.h) >= delta9 || Math.abs(a10.i - b9.i) >= delta9 || Math.abs(a10.j - b9.j) >= delta9 || Math.abs(a10.k - b9.k) >= delta9 || Math.abs(a10.l - b9.l) >= delta9);
		} catch( ex22 ) {
			haxe_CallStack.lastException = ex22;
			left11 = "exception: " + Std.string(((ex22) instanceof js__$Boot_HaxeError) ? ex22.val : ex22) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right11;
		try {
			right11 = true;
		} catch( ex23 ) {
			haxe_CallStack.lastException = ex23;
			right11 = "exception: " + Std.string(((ex23) instanceof js__$Boot_HaxeError) ? ex23.val : ex23) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left11,right11)) {
			utest_Assert.pass("Matrix4x3.hx:213 [OK] ({\nMatrix4x3.south == new Matrix4x3({ a: 0., b: 0.,  c: 0., d: 0.\n, e: 0., f: -1., g: 0., h: 0.\n, i: 0., j: 0.,  k: 0., l: 0. } );\n}) == true",{ lineNumber : 213, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.south == new Matrix4x3({ a: 0., b: 0.,  c: 0., d: 0.\n, e: 0., f: -1., g: 0., h: 0.\n, i: 0., j: 0.,  k: 0., l: 0. } );\n}) == true --> Left side `" + Std.string(left11) + "` does not equal `" + Std.string(right11) + "`.",{ lineNumber : 213, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left12;
		try {
			var this27 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var a11 = this27;
			var this28 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var b10 = this28;
			var delta10 = 0.0000001;
			left12 = !(Math.abs(a11.a - b10.a) >= delta10 || Math.abs(a11.b - b10.b) >= delta10 || Math.abs(a11.c - b10.c) >= delta10 || Math.abs(a11.d - b10.d) >= delta10 || Math.abs(a11.e - b10.e) >= delta10 || Math.abs(a11.f - b10.f) >= delta10 || Math.abs(a11.g - b10.g) >= delta10 || Math.abs(a11.h - b10.h) >= delta10 || Math.abs(a11.i - b10.i) >= delta10 || Math.abs(a11.j - b10.j) >= delta10 || Math.abs(a11.k - b10.k) >= delta10 || Math.abs(a11.l - b10.l) >= delta10);
		} catch( ex24 ) {
			haxe_CallStack.lastException = ex24;
			left12 = "exception: " + Std.string(((ex24) instanceof js__$Boot_HaxeError) ? ex24.val : ex24) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right12;
		try {
			right12 = true;
		} catch( ex25 ) {
			haxe_CallStack.lastException = ex25;
			right12 = "exception: " + Std.string(((ex25) instanceof js__$Boot_HaxeError) ? ex25.val : ex25) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left12,right12)) {
			utest_Assert.pass("Matrix4x3.hx:229 [OK] ({\nMatrix4x3.west == new Matrix4x3({ a: -1., b: 0., c: 0., d: 0.\n, e: 0.,  f: 0., g: 0., h: 0.\n, i: 0.,  j: 0., k: 0., l: 0. } );\n}) == true",{ lineNumber : 229, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.west == new Matrix4x3({ a: -1., b: 0., c: 0., d: 0.\n, e: 0.,  f: 0., g: 0., h: 0.\n, i: 0.,  j: 0., k: 0., l: 0. } );\n}) == true --> Left side `" + Std.string(left12) + "` does not equal `" + Std.string(right12) + "`.",{ lineNumber : 229, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left13;
		try {
			var this29 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var a12 = this29;
			var this30 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var b11 = this30;
			var delta11 = 0.0000001;
			left13 = !(Math.abs(a12.a - b11.a) >= delta11 || Math.abs(a12.b - b11.b) >= delta11 || Math.abs(a12.c - b11.c) >= delta11 || Math.abs(a12.d - b11.d) >= delta11 || Math.abs(a12.e - b11.e) >= delta11 || Math.abs(a12.f - b11.f) >= delta11 || Math.abs(a12.g - b11.g) >= delta11 || Math.abs(a12.h - b11.h) >= delta11 || Math.abs(a12.i - b11.i) >= delta11 || Math.abs(a12.j - b11.j) >= delta11 || Math.abs(a12.k - b11.k) >= delta11 || Math.abs(a12.l - b11.l) >= delta11);
		} catch( ex26 ) {
			haxe_CallStack.lastException = ex26;
			left13 = "exception: " + Std.string(((ex26) instanceof js__$Boot_HaxeError) ? ex26.val : ex26) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right13;
		try {
			right13 = true;
		} catch( ex27 ) {
			haxe_CallStack.lastException = ex27;
			right13 = "exception: " + Std.string(((ex27) instanceof js__$Boot_HaxeError) ? ex27.val : ex27) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left13,right13)) {
			utest_Assert.pass("Matrix4x3.hx:245 [OK] ({\nMatrix4x3.east == new Matrix4x3({ a: 1., b: 0., c: 0., d: 0.\n, e: 0., f: 0., g: 0., h: 0.\n, i: 0., j: 0., k: 0., l: 0. } );\n}) == true",{ lineNumber : 245, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.east == new Matrix4x3({ a: 1., b: 0., c: 0., d: 0.\n, e: 0., f: 0., g: 0., h: 0.\n, i: 0., j: 0., k: 0., l: 0. } );\n}) == true --> Left side `" + Std.string(left13) + "` does not equal `" + Std.string(right13) + "`.",{ lineNumber : 245, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left14;
		try {
			var this31 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.);
			var a13 = this31;
			var this32 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.);
			var b12 = this32;
			var delta12 = 0.0000001;
			left14 = !(Math.abs(a13.a - b12.a) >= delta12 || Math.abs(a13.b - b12.b) >= delta12 || Math.abs(a13.c - b12.c) >= delta12 || Math.abs(a13.d - b12.d) >= delta12 || Math.abs(a13.e - b12.e) >= delta12 || Math.abs(a13.f - b12.f) >= delta12 || Math.abs(a13.g - b12.g) >= delta12 || Math.abs(a13.h - b12.h) >= delta12 || Math.abs(a13.i - b12.i) >= delta12 || Math.abs(a13.j - b12.j) >= delta12 || Math.abs(a13.k - b12.k) >= delta12 || Math.abs(a13.l - b12.l) >= delta12);
		} catch( ex28 ) {
			haxe_CallStack.lastException = ex28;
			left14 = "exception: " + Std.string(((ex28) instanceof js__$Boot_HaxeError) ? ex28.val : ex28) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right14;
		try {
			right14 = true;
		} catch( ex29 ) {
			haxe_CallStack.lastException = ex29;
			right14 = "exception: " + Std.string(((ex29) instanceof js__$Boot_HaxeError) ? ex29.val : ex29) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left14,right14)) {
			utest_Assert.pass("Matrix4x3.hx:261 [OK] ({\nMatrix4x3.front == new Matrix4x3({ a: 0., b: 0., c: 0., d: 0.\n, e: 0., f: 0., g: 0., h: 0.\n, i: 0., j: 0., k: 1., l: 0. } );\n}) == true",{ lineNumber : 261, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.front == new Matrix4x3({ a: 0., b: 0., c: 0., d: 0.\n, e: 0., f: 0., g: 0., h: 0.\n, i: 0., j: 0., k: 1., l: 0. } );\n}) == true --> Left side `" + Std.string(left14) + "` does not equal `" + Std.string(right14) + "`.",{ lineNumber : 261, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left15;
		try {
			var this33 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
			var a14 = this33;
			var this34 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
			var b13 = this34;
			var delta13 = 0.0000001;
			left15 = !(Math.abs(a14.a - b13.a) >= delta13 || Math.abs(a14.b - b13.b) >= delta13 || Math.abs(a14.c - b13.c) >= delta13 || Math.abs(a14.d - b13.d) >= delta13 || Math.abs(a14.e - b13.e) >= delta13 || Math.abs(a14.f - b13.f) >= delta13 || Math.abs(a14.g - b13.g) >= delta13 || Math.abs(a14.h - b13.h) >= delta13 || Math.abs(a14.i - b13.i) >= delta13 || Math.abs(a14.j - b13.j) >= delta13 || Math.abs(a14.k - b13.k) >= delta13 || Math.abs(a14.l - b13.l) >= delta13);
		} catch( ex30 ) {
			haxe_CallStack.lastException = ex30;
			left15 = "exception: " + Std.string(((ex30) instanceof js__$Boot_HaxeError) ? ex30.val : ex30) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right15;
		try {
			right15 = true;
		} catch( ex31 ) {
			haxe_CallStack.lastException = ex31;
			right15 = "exception: " + Std.string(((ex31) instanceof js__$Boot_HaxeError) ? ex31.val : ex31) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left15,right15)) {
			utest_Assert.pass("Matrix4x3.hx:277 [OK] ({\nMatrix4x3.frontNorth == new Matrix4x3({ a: 0., b: 0., c: 0., d: 0.\n, e: 0., f: 1., g: 0., h: 0.\n, i: 0., j: 0., k: 1., l: 0. } );\n}) == true",{ lineNumber : 277, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.frontNorth == new Matrix4x3({ a: 0., b: 0., c: 0., d: 0.\n, e: 0., f: 1., g: 0., h: 0.\n, i: 0., j: 0., k: 1., l: 0. } );\n}) == true --> Left side `" + Std.string(left15) + "` does not equal `" + Std.string(right15) + "`.",{ lineNumber : 277, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left16;
		try {
			var this35 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
			var a15 = this35;
			var this36 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
			var b14 = this36;
			var delta14 = 0.0000001;
			left16 = !(Math.abs(a15.a - b14.a) >= delta14 || Math.abs(a15.b - b14.b) >= delta14 || Math.abs(a15.c - b14.c) >= delta14 || Math.abs(a15.d - b14.d) >= delta14 || Math.abs(a15.e - b14.e) >= delta14 || Math.abs(a15.f - b14.f) >= delta14 || Math.abs(a15.g - b14.g) >= delta14 || Math.abs(a15.h - b14.h) >= delta14 || Math.abs(a15.i - b14.i) >= delta14 || Math.abs(a15.j - b14.j) >= delta14 || Math.abs(a15.k - b14.k) >= delta14 || Math.abs(a15.l - b14.l) >= delta14);
		} catch( ex32 ) {
			haxe_CallStack.lastException = ex32;
			left16 = "exception: " + Std.string(((ex32) instanceof js__$Boot_HaxeError) ? ex32.val : ex32) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right16;
		try {
			right16 = true;
		} catch( ex33 ) {
			haxe_CallStack.lastException = ex33;
			right16 = "exception: " + Std.string(((ex33) instanceof js__$Boot_HaxeError) ? ex33.val : ex33) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left16,right16)) {
			utest_Assert.pass("Matrix4x3.hx:293 [OK] ({\nMatrix4x3.frontTopLeft == new Matrix4x3({ a: -1., b: 0., c: 0., d: 0.\n, e: 0.,  f: 1., g: 0., h: 0.\n, i: 0.,  j: 0., k: 1., l: 0. } );\n}) == true",{ lineNumber : 293, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.frontTopLeft == new Matrix4x3({ a: -1., b: 0., c: 0., d: 0.\n, e: 0.,  f: 1., g: 0., h: 0.\n, i: 0.,  j: 0., k: 1., l: 0. } );\n}) == true --> Left side `" + Std.string(left16) + "` does not equal `" + Std.string(right16) + "`.",{ lineNumber : 293, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left17;
		try {
			var this37 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
			var a16 = this37;
			var this38 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
			var b15 = this38;
			var delta15 = 0.0000001;
			left17 = !(Math.abs(a16.a - b15.a) >= delta15 || Math.abs(a16.b - b15.b) >= delta15 || Math.abs(a16.c - b15.c) >= delta15 || Math.abs(a16.d - b15.d) >= delta15 || Math.abs(a16.e - b15.e) >= delta15 || Math.abs(a16.f - b15.f) >= delta15 || Math.abs(a16.g - b15.g) >= delta15 || Math.abs(a16.h - b15.h) >= delta15 || Math.abs(a16.i - b15.i) >= delta15 || Math.abs(a16.j - b15.j) >= delta15 || Math.abs(a16.k - b15.k) >= delta15 || Math.abs(a16.l - b15.l) >= delta15);
		} catch( ex34 ) {
			haxe_CallStack.lastException = ex34;
			left17 = "exception: " + Std.string(((ex34) instanceof js__$Boot_HaxeError) ? ex34.val : ex34) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right17;
		try {
			right17 = true;
		} catch( ex35 ) {
			haxe_CallStack.lastException = ex35;
			right17 = "exception: " + Std.string(((ex35) instanceof js__$Boot_HaxeError) ? ex35.val : ex35) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left17,right17)) {
			utest_Assert.pass("Matrix4x3.hx:309 [OK] ({\nMatrix4x3.frontTopRight == new Matrix4x3({ a: 1., b: 0., c: 0., d: 0.\n, e: 0., f: 1., g: 0., h: 0.\n, i: 0., j: 0., k: 1., l: 0. } );\n}) == true",{ lineNumber : 309, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.frontTopRight == new Matrix4x3({ a: 1., b: 0., c: 0., d: 0.\n, e: 0., f: 1., g: 0., h: 0.\n, i: 0., j: 0., k: 1., l: 0. } );\n}) == true --> Left side `" + Std.string(left17) + "` does not equal `" + Std.string(right17) + "`.",{ lineNumber : 309, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left18;
		try {
			var this39 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,1.,0.);
			var a17 = this39;
			var this40 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,1.,0.);
			var b16 = this40;
			var delta16 = 0.0000001;
			left18 = !(Math.abs(a17.a - b16.a) >= delta16 || Math.abs(a17.b - b16.b) >= delta16 || Math.abs(a17.c - b16.c) >= delta16 || Math.abs(a17.d - b16.d) >= delta16 || Math.abs(a17.e - b16.e) >= delta16 || Math.abs(a17.f - b16.f) >= delta16 || Math.abs(a17.g - b16.g) >= delta16 || Math.abs(a17.h - b16.h) >= delta16 || Math.abs(a17.i - b16.i) >= delta16 || Math.abs(a17.j - b16.j) >= delta16 || Math.abs(a17.k - b16.k) >= delta16 || Math.abs(a17.l - b16.l) >= delta16);
		} catch( ex36 ) {
			haxe_CallStack.lastException = ex36;
			left18 = "exception: " + Std.string(((ex36) instanceof js__$Boot_HaxeError) ? ex36.val : ex36) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right18;
		try {
			right18 = true;
		} catch( ex37 ) {
			haxe_CallStack.lastException = ex37;
			right18 = "exception: " + Std.string(((ex37) instanceof js__$Boot_HaxeError) ? ex37.val : ex37) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left18,right18)) {
			utest_Assert.pass("Matrix4x3.hx:325 [OK] ({\nMatrix4x3.frontBottomLeft == new Matrix4x3({ a: -1., b: 0.,  c: 0., d: 0.\n, e: 0.,  f: -1., g: 0., h: 0.\n, i: 0.,  j: 0.,  k: 1., l: 0. } );\n}) == true",{ lineNumber : 325, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.frontBottomLeft == new Matrix4x3({ a: -1., b: 0.,  c: 0., d: 0.\n, e: 0.,  f: -1., g: 0., h: 0.\n, i: 0.,  j: 0.,  k: 1., l: 0. } );\n}) == true --> Left side `" + Std.string(left18) + "` does not equal `" + Std.string(right18) + "`.",{ lineNumber : 325, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left19;
		try {
			var this41 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,1.,0.);
			var a18 = this41;
			var this42 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,1.,0.);
			var b17 = this42;
			var delta17 = 0.0000001;
			left19 = !(Math.abs(a18.a - b17.a) >= delta17 || Math.abs(a18.b - b17.b) >= delta17 || Math.abs(a18.c - b17.c) >= delta17 || Math.abs(a18.d - b17.d) >= delta17 || Math.abs(a18.e - b17.e) >= delta17 || Math.abs(a18.f - b17.f) >= delta17 || Math.abs(a18.g - b17.g) >= delta17 || Math.abs(a18.h - b17.h) >= delta17 || Math.abs(a18.i - b17.i) >= delta17 || Math.abs(a18.j - b17.j) >= delta17 || Math.abs(a18.k - b17.k) >= delta17 || Math.abs(a18.l - b17.l) >= delta17);
		} catch( ex38 ) {
			haxe_CallStack.lastException = ex38;
			left19 = "exception: " + Std.string(((ex38) instanceof js__$Boot_HaxeError) ? ex38.val : ex38) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right19;
		try {
			right19 = true;
		} catch( ex39 ) {
			haxe_CallStack.lastException = ex39;
			right19 = "exception: " + Std.string(((ex39) instanceof js__$Boot_HaxeError) ? ex39.val : ex39) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left19,right19)) {
			utest_Assert.pass("Matrix4x3.hx:341 [OK] ({\nMatrix4x3.frontBottomRight == new Matrix4x3({ a: 1., b: 0.,  c: 0., d: 0.\n, e: 0., f: -1., g: 0., h: 0.\n, i: 0., j: 0.,  k: 1., l: 0. } );\n}) == true",{ lineNumber : 341, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.frontBottomRight == new Matrix4x3({ a: 1., b: 0.,  c: 0., d: 0.\n, e: 0., f: -1., g: 0., h: 0.\n, i: 0., j: 0.,  k: 1., l: 0. } );\n}) == true --> Left side `" + Std.string(left19) + "` does not equal `" + Std.string(right19) + "`.",{ lineNumber : 341, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left20;
		try {
			var this43 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,1.,0.);
			var a19 = this43;
			var this44 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,1.,0.);
			var b18 = this44;
			var delta18 = 0.0000001;
			left20 = !(Math.abs(a19.a - b18.a) >= delta18 || Math.abs(a19.b - b18.b) >= delta18 || Math.abs(a19.c - b18.c) >= delta18 || Math.abs(a19.d - b18.d) >= delta18 || Math.abs(a19.e - b18.e) >= delta18 || Math.abs(a19.f - b18.f) >= delta18 || Math.abs(a19.g - b18.g) >= delta18 || Math.abs(a19.h - b18.h) >= delta18 || Math.abs(a19.i - b18.i) >= delta18 || Math.abs(a19.j - b18.j) >= delta18 || Math.abs(a19.k - b18.k) >= delta18 || Math.abs(a19.l - b18.l) >= delta18);
		} catch( ex40 ) {
			haxe_CallStack.lastException = ex40;
			left20 = "exception: " + Std.string(((ex40) instanceof js__$Boot_HaxeError) ? ex40.val : ex40) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right20;
		try {
			right20 = true;
		} catch( ex41 ) {
			haxe_CallStack.lastException = ex41;
			right20 = "exception: " + Std.string(((ex41) instanceof js__$Boot_HaxeError) ? ex41.val : ex41) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left20,right20)) {
			utest_Assert.pass("Matrix4x3.hx:357 [OK] ({\nMatrix4x3.frontSouth == new Matrix4x3({ a: 0., b: 0.,  c: 0., d: 0.\n, e: 0., f: -1., g: 0., h: 0.\n, i: 0., j: 0.,  k: 1., l: 0. } );\n}) == true",{ lineNumber : 357, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.frontSouth == new Matrix4x3({ a: 0., b: 0.,  c: 0., d: 0.\n, e: 0., f: -1., g: 0., h: 0.\n, i: 0., j: 0.,  k: 1., l: 0. } );\n}) == true --> Left side `" + Std.string(left20) + "` does not equal `" + Std.string(right20) + "`.",{ lineNumber : 357, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left21;
		try {
			var this45 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.);
			var a20 = this45;
			var this46 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.);
			var b19 = this46;
			var delta19 = 0.0000001;
			left21 = !(Math.abs(a20.a - b19.a) >= delta19 || Math.abs(a20.b - b19.b) >= delta19 || Math.abs(a20.c - b19.c) >= delta19 || Math.abs(a20.d - b19.d) >= delta19 || Math.abs(a20.e - b19.e) >= delta19 || Math.abs(a20.f - b19.f) >= delta19 || Math.abs(a20.g - b19.g) >= delta19 || Math.abs(a20.h - b19.h) >= delta19 || Math.abs(a20.i - b19.i) >= delta19 || Math.abs(a20.j - b19.j) >= delta19 || Math.abs(a20.k - b19.k) >= delta19 || Math.abs(a20.l - b19.l) >= delta19);
		} catch( ex42 ) {
			haxe_CallStack.lastException = ex42;
			left21 = "exception: " + Std.string(((ex42) instanceof js__$Boot_HaxeError) ? ex42.val : ex42) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right21;
		try {
			right21 = true;
		} catch( ex43 ) {
			haxe_CallStack.lastException = ex43;
			right21 = "exception: " + Std.string(((ex43) instanceof js__$Boot_HaxeError) ? ex43.val : ex43) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left21,right21)) {
			utest_Assert.pass("Matrix4x3.hx:373 [OK] ({\nMatrix4x3.frontWest == new Matrix4x3({ a: -1., b: 0., c: 0., d: 0.\n, e: 0.,  f: 0., g: 0., h: 0.\n, i: 0.,  j: 0., k: 1., l: 0. } );\n}) == true",{ lineNumber : 373, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.frontWest == new Matrix4x3({ a: -1., b: 0., c: 0., d: 0.\n, e: 0.,  f: 0., g: 0., h: 0.\n, i: 0.,  j: 0., k: 1., l: 0. } );\n}) == true --> Left side `" + Std.string(left21) + "` does not equal `" + Std.string(right21) + "`.",{ lineNumber : 373, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left22;
		try {
			var this47 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.);
			var a21 = this47;
			var this48 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.);
			var b20 = this48;
			var delta20 = 0.0000001;
			left22 = !(Math.abs(a21.a - b20.a) >= delta20 || Math.abs(a21.b - b20.b) >= delta20 || Math.abs(a21.c - b20.c) >= delta20 || Math.abs(a21.d - b20.d) >= delta20 || Math.abs(a21.e - b20.e) >= delta20 || Math.abs(a21.f - b20.f) >= delta20 || Math.abs(a21.g - b20.g) >= delta20 || Math.abs(a21.h - b20.h) >= delta20 || Math.abs(a21.i - b20.i) >= delta20 || Math.abs(a21.j - b20.j) >= delta20 || Math.abs(a21.k - b20.k) >= delta20 || Math.abs(a21.l - b20.l) >= delta20);
		} catch( ex44 ) {
			haxe_CallStack.lastException = ex44;
			left22 = "exception: " + Std.string(((ex44) instanceof js__$Boot_HaxeError) ? ex44.val : ex44) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right22;
		try {
			right22 = true;
		} catch( ex45 ) {
			haxe_CallStack.lastException = ex45;
			right22 = "exception: " + Std.string(((ex45) instanceof js__$Boot_HaxeError) ? ex45.val : ex45) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left22,right22)) {
			utest_Assert.pass("Matrix4x3.hx:389 [OK] ({\nMatrix4x3.frontEast == new Matrix4x3({ a: 1., b: 0., c: 0., d: 0.\n, e: 0., f: 0., g: 0., h: 0.\n, i: 0., j: 0., k: 1., l: 0. } );\n}) == true",{ lineNumber : 389, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.frontEast == new Matrix4x3({ a: 1., b: 0., c: 0., d: 0.\n, e: 0., f: 0., g: 0., h: 0.\n, i: 0., j: 0., k: 1., l: 0. } );\n}) == true --> Left side `" + Std.string(left22) + "` does not equal `" + Std.string(right22) + "`.",{ lineNumber : 389, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left23;
		try {
			var this49 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.);
			var a22 = this49;
			var this50 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.);
			var b21 = this50;
			var delta21 = 0.0000001;
			left23 = !(Math.abs(a22.a - b21.a) >= delta21 || Math.abs(a22.b - b21.b) >= delta21 || Math.abs(a22.c - b21.c) >= delta21 || Math.abs(a22.d - b21.d) >= delta21 || Math.abs(a22.e - b21.e) >= delta21 || Math.abs(a22.f - b21.f) >= delta21 || Math.abs(a22.g - b21.g) >= delta21 || Math.abs(a22.h - b21.h) >= delta21 || Math.abs(a22.i - b21.i) >= delta21 || Math.abs(a22.j - b21.j) >= delta21 || Math.abs(a22.k - b21.k) >= delta21 || Math.abs(a22.l - b21.l) >= delta21);
		} catch( ex46 ) {
			haxe_CallStack.lastException = ex46;
			left23 = "exception: " + Std.string(((ex46) instanceof js__$Boot_HaxeError) ? ex46.val : ex46) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right23;
		try {
			right23 = true;
		} catch( ex47 ) {
			haxe_CallStack.lastException = ex47;
			right23 = "exception: " + Std.string(((ex47) instanceof js__$Boot_HaxeError) ? ex47.val : ex47) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left23,right23)) {
			utest_Assert.pass("Matrix4x3.hx:405 [OK] ({\nMatrix4x3.back == new Matrix4x3({ a: 0., b: 0., c: 0.,  d: 0.\n, e: 0., f: 0., g: 0.,  h: 0.\n, i: 0., j: 0., k: -1., l: 0. } );\n}) == true",{ lineNumber : 405, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.back == new Matrix4x3({ a: 0., b: 0., c: 0.,  d: 0.\n, e: 0., f: 0., g: 0.,  h: 0.\n, i: 0., j: 0., k: -1., l: 0. } );\n}) == true --> Left side `" + Std.string(left23) + "` does not equal `" + Std.string(right23) + "`.",{ lineNumber : 405, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left24;
		try {
			var this51 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,-1.,0.);
			var a23 = this51;
			var this52 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,-1.,0.);
			var b22 = this52;
			var delta22 = 0.0000001;
			left24 = !(Math.abs(a23.a - b22.a) >= delta22 || Math.abs(a23.b - b22.b) >= delta22 || Math.abs(a23.c - b22.c) >= delta22 || Math.abs(a23.d - b22.d) >= delta22 || Math.abs(a23.e - b22.e) >= delta22 || Math.abs(a23.f - b22.f) >= delta22 || Math.abs(a23.g - b22.g) >= delta22 || Math.abs(a23.h - b22.h) >= delta22 || Math.abs(a23.i - b22.i) >= delta22 || Math.abs(a23.j - b22.j) >= delta22 || Math.abs(a23.k - b22.k) >= delta22 || Math.abs(a23.l - b22.l) >= delta22);
		} catch( ex48 ) {
			haxe_CallStack.lastException = ex48;
			left24 = "exception: " + Std.string(((ex48) instanceof js__$Boot_HaxeError) ? ex48.val : ex48) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right24;
		try {
			right24 = true;
		} catch( ex49 ) {
			haxe_CallStack.lastException = ex49;
			right24 = "exception: " + Std.string(((ex49) instanceof js__$Boot_HaxeError) ? ex49.val : ex49) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left24,right24)) {
			utest_Assert.pass("Matrix4x3.hx:421 [OK] ({\nMatrix4x3.backTopLeft == new Matrix4x3({ a: -1., b: 0., c: 0., d: 0.\n, e: 0.,  f: 1., g: 0., h: 0.\n, i: 0.,  j: 0., k: -1., l: 0. } );\n}) == true",{ lineNumber : 421, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.backTopLeft == new Matrix4x3({ a: -1., b: 0., c: 0., d: 0.\n, e: 0.,  f: 1., g: 0., h: 0.\n, i: 0.,  j: 0., k: -1., l: 0. } );\n}) == true --> Left side `" + Std.string(left24) + "` does not equal `" + Std.string(right24) + "`.",{ lineNumber : 421, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left25;
		try {
			var this53 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,-1.,0.);
			var a24 = this53;
			var this54 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,-1.,0.);
			var b23 = this54;
			var delta23 = 0.0000001;
			left25 = !(Math.abs(a24.a - b23.a) >= delta23 || Math.abs(a24.b - b23.b) >= delta23 || Math.abs(a24.c - b23.c) >= delta23 || Math.abs(a24.d - b23.d) >= delta23 || Math.abs(a24.e - b23.e) >= delta23 || Math.abs(a24.f - b23.f) >= delta23 || Math.abs(a24.g - b23.g) >= delta23 || Math.abs(a24.h - b23.h) >= delta23 || Math.abs(a24.i - b23.i) >= delta23 || Math.abs(a24.j - b23.j) >= delta23 || Math.abs(a24.k - b23.k) >= delta23 || Math.abs(a24.l - b23.l) >= delta23);
		} catch( ex50 ) {
			haxe_CallStack.lastException = ex50;
			left25 = "exception: " + Std.string(((ex50) instanceof js__$Boot_HaxeError) ? ex50.val : ex50) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right25;
		try {
			right25 = true;
		} catch( ex51 ) {
			haxe_CallStack.lastException = ex51;
			right25 = "exception: " + Std.string(((ex51) instanceof js__$Boot_HaxeError) ? ex51.val : ex51) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left25,right25)) {
			utest_Assert.pass("Matrix4x3.hx:437 [OK] ({\nMatrix4x3.backTopRight == new Matrix4x3({ a: 1., b: 0., c: 0.,  d: 0.\n, e: 0., f: 1., g: 0.,  h: 0.\n, i: 0., j: 0., k: -1., l: 0. } );\n}) == true",{ lineNumber : 437, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.backTopRight == new Matrix4x3({ a: 1., b: 0., c: 0.,  d: 0.\n, e: 0., f: 1., g: 0.,  h: 0.\n, i: 0., j: 0., k: -1., l: 0. } );\n}) == true --> Left side `" + Std.string(left25) + "` does not equal `" + Std.string(right25) + "`.",{ lineNumber : 437, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left26;
		try {
			var this55 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.,0.);
			var a25 = this55;
			var this56 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.,0.);
			var b24 = this56;
			var delta24 = 0.0000001;
			left26 = !(Math.abs(a25.a - b24.a) >= delta24 || Math.abs(a25.b - b24.b) >= delta24 || Math.abs(a25.c - b24.c) >= delta24 || Math.abs(a25.d - b24.d) >= delta24 || Math.abs(a25.e - b24.e) >= delta24 || Math.abs(a25.f - b24.f) >= delta24 || Math.abs(a25.g - b24.g) >= delta24 || Math.abs(a25.h - b24.h) >= delta24 || Math.abs(a25.i - b24.i) >= delta24 || Math.abs(a25.j - b24.j) >= delta24 || Math.abs(a25.k - b24.k) >= delta24 || Math.abs(a25.l - b24.l) >= delta24);
		} catch( ex52 ) {
			haxe_CallStack.lastException = ex52;
			left26 = "exception: " + Std.string(((ex52) instanceof js__$Boot_HaxeError) ? ex52.val : ex52) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right26;
		try {
			right26 = true;
		} catch( ex53 ) {
			haxe_CallStack.lastException = ex53;
			right26 = "exception: " + Std.string(((ex53) instanceof js__$Boot_HaxeError) ? ex53.val : ex53) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left26,right26)) {
			utest_Assert.pass("Matrix4x3.hx:453 [OK] ({\nMatrix4x3.backBottomLeft == new Matrix4x3({ a: -1., b: 0.,  c: 0.,  d: 0.\n, e: 0.,  f: -1., g: 0.,  h: 0.\n, i: 0.,  j: 0.,  k: -1., l: 0. } );\n}) == true",{ lineNumber : 453, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.backBottomLeft == new Matrix4x3({ a: -1., b: 0.,  c: 0.,  d: 0.\n, e: 0.,  f: -1., g: 0.,  h: 0.\n, i: 0.,  j: 0.,  k: -1., l: 0. } );\n}) == true --> Left side `" + Std.string(left26) + "` does not equal `" + Std.string(right26) + "`.",{ lineNumber : 453, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left27;
		try {
			var this57 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.,0.);
			var a26 = this57;
			var this58 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.,0.);
			var b25 = this58;
			var delta25 = 0.0000001;
			left27 = !(Math.abs(a26.a - b25.a) >= delta25 || Math.abs(a26.b - b25.b) >= delta25 || Math.abs(a26.c - b25.c) >= delta25 || Math.abs(a26.d - b25.d) >= delta25 || Math.abs(a26.e - b25.e) >= delta25 || Math.abs(a26.f - b25.f) >= delta25 || Math.abs(a26.g - b25.g) >= delta25 || Math.abs(a26.h - b25.h) >= delta25 || Math.abs(a26.i - b25.i) >= delta25 || Math.abs(a26.j - b25.j) >= delta25 || Math.abs(a26.k - b25.k) >= delta25 || Math.abs(a26.l - b25.l) >= delta25);
		} catch( ex54 ) {
			haxe_CallStack.lastException = ex54;
			left27 = "exception: " + Std.string(((ex54) instanceof js__$Boot_HaxeError) ? ex54.val : ex54) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right27;
		try {
			right27 = true;
		} catch( ex55 ) {
			haxe_CallStack.lastException = ex55;
			right27 = "exception: " + Std.string(((ex55) instanceof js__$Boot_HaxeError) ? ex55.val : ex55) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left27,right27)) {
			utest_Assert.pass("Matrix4x3.hx:469 [OK] ({\nMatrix4x3.backBottomRight == new Matrix4x3({ a: 1., b: 0.,  c: 0.,  d: 0.\n, e: 0., f: -1., g: 0.,  h: 0.\n, i: 0., j: 0.,  k: -1., l: 0. } );\n}) == true",{ lineNumber : 469, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.backBottomRight == new Matrix4x3({ a: 1., b: 0.,  c: 0.,  d: 0.\n, e: 0., f: -1., g: 0.,  h: 0.\n, i: 0., j: 0.,  k: -1., l: 0. } );\n}) == true --> Left side `" + Std.string(left27) + "` does not equal `" + Std.string(right27) + "`.",{ lineNumber : 469, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left28;
		try {
			var this59 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,-1.,0.);
			var a27 = this59;
			var this60 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,-1.,0.);
			var b26 = this60;
			var delta26 = 0.0000001;
			left28 = !(Math.abs(a27.a - b26.a) >= delta26 || Math.abs(a27.b - b26.b) >= delta26 || Math.abs(a27.c - b26.c) >= delta26 || Math.abs(a27.d - b26.d) >= delta26 || Math.abs(a27.e - b26.e) >= delta26 || Math.abs(a27.f - b26.f) >= delta26 || Math.abs(a27.g - b26.g) >= delta26 || Math.abs(a27.h - b26.h) >= delta26 || Math.abs(a27.i - b26.i) >= delta26 || Math.abs(a27.j - b26.j) >= delta26 || Math.abs(a27.k - b26.k) >= delta26 || Math.abs(a27.l - b26.l) >= delta26);
		} catch( ex56 ) {
			haxe_CallStack.lastException = ex56;
			left28 = "exception: " + Std.string(((ex56) instanceof js__$Boot_HaxeError) ? ex56.val : ex56) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right28;
		try {
			right28 = true;
		} catch( ex57 ) {
			haxe_CallStack.lastException = ex57;
			right28 = "exception: " + Std.string(((ex57) instanceof js__$Boot_HaxeError) ? ex57.val : ex57) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left28,right28)) {
			utest_Assert.pass("Matrix4x3.hx:485 [OK] ({\nMatrix4x3.backNorth == new Matrix4x3({ a: 0., b: 0., c: 0.,  d: 0.\n, e: 0., f: 1., g: 0.,  h: 0.\n, i: 0., j: 0., k: -1., l: 0. } );\n}) == true",{ lineNumber : 485, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.backNorth == new Matrix4x3({ a: 0., b: 0., c: 0.,  d: 0.\n, e: 0., f: 1., g: 0.,  h: 0.\n, i: 0., j: 0., k: -1., l: 0. } );\n}) == true --> Left side `" + Std.string(left28) + "` does not equal `" + Std.string(right28) + "`.",{ lineNumber : 485, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left29;
		try {
			var this61 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.,0.);
			var a28 = this61;
			var this62 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.,0.);
			var b27 = this62;
			var delta27 = 0.0000001;
			left29 = !(Math.abs(a28.a - b27.a) >= delta27 || Math.abs(a28.b - b27.b) >= delta27 || Math.abs(a28.c - b27.c) >= delta27 || Math.abs(a28.d - b27.d) >= delta27 || Math.abs(a28.e - b27.e) >= delta27 || Math.abs(a28.f - b27.f) >= delta27 || Math.abs(a28.g - b27.g) >= delta27 || Math.abs(a28.h - b27.h) >= delta27 || Math.abs(a28.i - b27.i) >= delta27 || Math.abs(a28.j - b27.j) >= delta27 || Math.abs(a28.k - b27.k) >= delta27 || Math.abs(a28.l - b27.l) >= delta27);
		} catch( ex58 ) {
			haxe_CallStack.lastException = ex58;
			left29 = "exception: " + Std.string(((ex58) instanceof js__$Boot_HaxeError) ? ex58.val : ex58) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right29;
		try {
			right29 = true;
		} catch( ex59 ) {
			haxe_CallStack.lastException = ex59;
			right29 = "exception: " + Std.string(((ex59) instanceof js__$Boot_HaxeError) ? ex59.val : ex59) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left29,right29)) {
			utest_Assert.pass("Matrix4x3.hx:501 [OK] ({\nMatrix4x3.backSouth == new Matrix4x3({ a: 0., b: 0.,  c: 0.,  d: 0.\n, e: 0., f: -1., g: 0.,  h: 0.\n, i: 0., j: 0.,  k: -1., l: 0. } );\n}) == true",{ lineNumber : 501, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.backSouth == new Matrix4x3({ a: 0., b: 0.,  c: 0.,  d: 0.\n, e: 0., f: -1., g: 0.,  h: 0.\n, i: 0., j: 0.,  k: -1., l: 0. } );\n}) == true --> Left side `" + Std.string(left29) + "` does not equal `" + Std.string(right29) + "`.",{ lineNumber : 501, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left30;
		try {
			var this63 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.);
			var a29 = this63;
			var this64 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.);
			var b28 = this64;
			var delta28 = 0.0000001;
			left30 = !(Math.abs(a29.a - b28.a) >= delta28 || Math.abs(a29.b - b28.b) >= delta28 || Math.abs(a29.c - b28.c) >= delta28 || Math.abs(a29.d - b28.d) >= delta28 || Math.abs(a29.e - b28.e) >= delta28 || Math.abs(a29.f - b28.f) >= delta28 || Math.abs(a29.g - b28.g) >= delta28 || Math.abs(a29.h - b28.h) >= delta28 || Math.abs(a29.i - b28.i) >= delta28 || Math.abs(a29.j - b28.j) >= delta28 || Math.abs(a29.k - b28.k) >= delta28 || Math.abs(a29.l - b28.l) >= delta28);
		} catch( ex60 ) {
			haxe_CallStack.lastException = ex60;
			left30 = "exception: " + Std.string(((ex60) instanceof js__$Boot_HaxeError) ? ex60.val : ex60) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right30;
		try {
			right30 = true;
		} catch( ex61 ) {
			haxe_CallStack.lastException = ex61;
			right30 = "exception: " + Std.string(((ex61) instanceof js__$Boot_HaxeError) ? ex61.val : ex61) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left30,right30)) {
			utest_Assert.pass("Matrix4x3.hx:517 [OK] ({\nMatrix4x3.backWest == new Matrix4x3({ a: -1., b: 0., c: 0.,  d: 0.\n, e: 0.,  f: 0., g: 0.,  h: 0.\n, i: 0.,  j: 0., k: -1., l: 0. } );\n}) == true",{ lineNumber : 517, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.backWest == new Matrix4x3({ a: -1., b: 0., c: 0.,  d: 0.\n, e: 0.,  f: 0., g: 0.,  h: 0.\n, i: 0.,  j: 0., k: -1., l: 0. } );\n}) == true --> Left side `" + Std.string(left30) + "` does not equal `" + Std.string(right30) + "`.",{ lineNumber : 517, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left31;
		try {
			var this65 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.);
			var a30 = this65;
			var this66 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.);
			var b29 = this66;
			var delta29 = 0.0000001;
			left31 = !(Math.abs(a30.a - b29.a) >= delta29 || Math.abs(a30.b - b29.b) >= delta29 || Math.abs(a30.c - b29.c) >= delta29 || Math.abs(a30.d - b29.d) >= delta29 || Math.abs(a30.e - b29.e) >= delta29 || Math.abs(a30.f - b29.f) >= delta29 || Math.abs(a30.g - b29.g) >= delta29 || Math.abs(a30.h - b29.h) >= delta29 || Math.abs(a30.i - b29.i) >= delta29 || Math.abs(a30.j - b29.j) >= delta29 || Math.abs(a30.k - b29.k) >= delta29 || Math.abs(a30.l - b29.l) >= delta29);
		} catch( ex62 ) {
			haxe_CallStack.lastException = ex62;
			left31 = "exception: " + Std.string(((ex62) instanceof js__$Boot_HaxeError) ? ex62.val : ex62) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right31;
		try {
			right31 = true;
		} catch( ex63 ) {
			haxe_CallStack.lastException = ex63;
			right31 = "exception: " + Std.string(((ex63) instanceof js__$Boot_HaxeError) ? ex63.val : ex63) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left31,right31)) {
			utest_Assert.pass("Matrix4x3.hx:533 [OK] ({\nMatrix4x3.backEast == new Matrix4x3({ a: 1., b: 0., c: 0.,  d: 0.\n, e: 0., f: 0., g: 0.,  h: 0.\n, i: 0., j: 0., k: -1., l: 0. } );\n}) == true",{ lineNumber : 533, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x3.backEast == new Matrix4x3({ a: 1., b: 0., c: 0.,  d: 0.\n, e: 0., f: 0., g: 0.,  h: 0.\n, i: 0., j: 0., k: -1., l: 0. } );\n}) == true --> Left side `" + Std.string(left31) + "` does not equal `" + Std.string(right31) + "`.",{ lineNumber : 533, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left32;
		try {
			var this67 = new geom_structure_Mat4x3(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.);
			var a31 = this67;
			var this68 = new geom_structure_Mat4x3(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.);
			var b30 = this68;
			var delta30 = 0.0000001;
			left32 = !(Math.abs(a31.a - b30.a) >= delta30 || Math.abs(a31.b - b30.b) >= delta30 || Math.abs(a31.c - b30.c) >= delta30 || Math.abs(a31.d - b30.d) >= delta30 || Math.abs(a31.e - b30.e) >= delta30 || Math.abs(a31.f - b30.f) >= delta30 || Math.abs(a31.g - b30.g) >= delta30 || Math.abs(a31.h - b30.h) >= delta30 || Math.abs(a31.i - b30.i) >= delta30 || Math.abs(a31.j - b30.j) >= delta30 || Math.abs(a31.k - b30.k) >= delta30 || Math.abs(a31.l - b30.l) >= delta30);
		} catch( ex64 ) {
			haxe_CallStack.lastException = ex64;
			left32 = "exception: " + Std.string(((ex64) instanceof js__$Boot_HaxeError) ? ex64.val : ex64) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right32;
		try {
			right32 = true;
		} catch( ex65 ) {
			haxe_CallStack.lastException = ex65;
			right32 = "exception: " + Std.string(((ex65) instanceof js__$Boot_HaxeError) ? ex65.val : ex65) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left32,right32)) {
			utest_Assert.pass("Matrix4x3.hx:728 [OK] ({\nvar a = new Matrix4x3({ a: 1., b: 2., c: 3., d: 4.\n, e: 5., f: 6., g: 7., h: 8.\n, i: 9., j:10., k:11., l:12. });\nvar b = new Matrix4x3({ a: 1., b: 2., c: 3., d: 4.\n, e: 5., f: 6., g: 7., h: 8.\n, i: 9., j:10., k:11., l:12. });\na == b; }) == true",{ lineNumber : 728, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix4x3({ a: 1., b: 2., c: 3., d: 4.\n, e: 5., f: 6., g: 7., h: 8.\n, i: 9., j:10., k:11., l:12. });\nvar b = new Matrix4x3({ a: 1., b: 2., c: 3., d: 4.\n, e: 5., f: 6., g: 7., h: 8.\n, i: 9., j:10., k:11., l:12. });\na == b; }) == true --> Left side `" + Std.string(left32) + "` does not equal `" + Std.string(right32) + "`.",{ lineNumber : 728, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left33;
		try {
			var this69 = new geom_structure_Mat4x3(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.);
			var a32 = this69;
			var this70 = new geom_structure_Mat4x3(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,11.);
			var b31 = this70;
			var delta31 = 0.0000001;
			left33 = !(!(Math.abs(a32.a - b31.a) >= delta31 || Math.abs(a32.b - b31.b) >= delta31 || Math.abs(a32.c - b31.c) >= delta31 || Math.abs(a32.d - b31.d) >= delta31 || Math.abs(a32.e - b31.e) >= delta31 || Math.abs(a32.f - b31.f) >= delta31 || Math.abs(a32.g - b31.g) >= delta31 || Math.abs(a32.h - b31.h) >= delta31 || Math.abs(a32.i - b31.i) >= delta31 || Math.abs(a32.j - b31.j) >= delta31 || Math.abs(a32.k - b31.k) >= delta31 || Math.abs(a32.l - b31.l) >= delta31));
		} catch( ex66 ) {
			haxe_CallStack.lastException = ex66;
			left33 = "exception: " + Std.string(((ex66) instanceof js__$Boot_HaxeError) ? ex66.val : ex66) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right33;
		try {
			right33 = true;
		} catch( ex67 ) {
			haxe_CallStack.lastException = ex67;
			right33 = "exception: " + Std.string(((ex67) instanceof js__$Boot_HaxeError) ? ex67.val : ex67) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left33,right33)) {
			utest_Assert.pass("Matrix4x3.hx:759 [OK] ({\nvar a = new Matrix4x3({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9., j:10., k:11., l:12. });\nvar b = new Matrix4x3({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9., j:10., k:11., l:11. });\na != b; }) == true",{ lineNumber : 759, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix4x3({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9., j:10., k:11., l:12. });\nvar b = new Matrix4x3({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9., j:10., k:11., l:11. });\na != b; }) == true --> Left side `" + Std.string(left33) + "` does not equal `" + Std.string(right33) + "`.",{ lineNumber : 759, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left34;
		try {
			var this71 = new geom_structure_Mat4x3(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.);
			var a33 = this71;
			var this72 = new geom_structure_Mat4x3(-a33.a,-a33.b,-a33.c,-a33.d,-a33.e,-a33.f,-a33.g,-a33.h,-a33.i,-a33.j,-a33.k,-a33.l);
			var b32 = this72;
			var this73 = new geom_structure_Mat4x3(-1.,-2.,-3.,-4.,-5.,-6.,-7.,-8,-9.,-10.,-11.,-12.);
			var b33 = this73;
			var delta32 = 0.0000001;
			left34 = !(Math.abs(b32.a - b33.a) >= delta32 || Math.abs(b32.b - b33.b) >= delta32 || Math.abs(b32.c - b33.c) >= delta32 || Math.abs(b32.d - b33.d) >= delta32 || Math.abs(b32.e - b33.e) >= delta32 || Math.abs(b32.f - b33.f) >= delta32 || Math.abs(b32.g - b33.g) >= delta32 || Math.abs(b32.h - b33.h) >= delta32 || Math.abs(b32.i - b33.i) >= delta32 || Math.abs(b32.j - b33.j) >= delta32 || Math.abs(b32.k - b33.k) >= delta32 || Math.abs(b32.l - b33.l) >= delta32);
		} catch( ex68 ) {
			haxe_CallStack.lastException = ex68;
			left34 = "exception: " + Std.string(((ex68) instanceof js__$Boot_HaxeError) ? ex68.val : ex68) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right34;
		try {
			right34 = true;
		} catch( ex69 ) {
			haxe_CallStack.lastException = ex69;
			right34 = "exception: " + Std.string(((ex69) instanceof js__$Boot_HaxeError) ? ex69.val : ex69) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left34,right34)) {
			utest_Assert.pass("Matrix4x3.hx:774 [OK] ({\nvar a = Matrix4x3.counting;\nvar b = -a;\nb == new Matrix4x3({ a: -1., b: -2., c: -3., d: -4.\n, e: -5., f: -6., g: -7., h: -8\n, i: -9., j: -10., k: -11., l: -12. }); }) == true",{ lineNumber : 774, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix4x3.counting;\nvar b = -a;\nb == new Matrix4x3({ a: -1., b: -2., c: -3., d: -4.\n, e: -5., f: -6., g: -7., h: -8\n, i: -9., j: -10., k: -11., l: -12. }); }) == true --> Left side `" + Std.string(left34) + "` does not equal `" + Std.string(right34) + "`.",{ lineNumber : 774, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left35;
		try {
			var this74 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
			var a34 = this74;
			var this75 = new geom_structure_Mat4x3(a34.a + a34.a,a34.b + a34.b,a34.c + a34.c,a34.d + a34.d,a34.e + a34.e,a34.f + a34.f,a34.g + a34.g,a34.h + a34.h,a34.i + a34.i,a34.j + a34.j,a34.k + a34.k,a34.l + a34.l);
			var a35 = this75;
			var this76 = new geom_structure_Mat4x3(2.,0.,0.,0.,0.,2.,0.,0.,0.,0.,2.,0.);
			var b34 = this76;
			var delta33 = 0.0000001;
			left35 = !(Math.abs(a35.a - b34.a) >= delta33 || Math.abs(a35.b - b34.b) >= delta33 || Math.abs(a35.c - b34.c) >= delta33 || Math.abs(a35.d - b34.d) >= delta33 || Math.abs(a35.e - b34.e) >= delta33 || Math.abs(a35.f - b34.f) >= delta33 || Math.abs(a35.g - b34.g) >= delta33 || Math.abs(a35.h - b34.h) >= delta33 || Math.abs(a35.i - b34.i) >= delta33 || Math.abs(a35.j - b34.j) >= delta33 || Math.abs(a35.k - b34.k) >= delta33 || Math.abs(a35.l - b34.l) >= delta33);
		} catch( ex70 ) {
			haxe_CallStack.lastException = ex70;
			left35 = "exception: " + Std.string(((ex70) instanceof js__$Boot_HaxeError) ? ex70.val : ex70) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right35;
		try {
			right35 = true;
		} catch( ex71 ) {
			haxe_CallStack.lastException = ex71;
			right35 = "exception: " + Std.string(((ex71) instanceof js__$Boot_HaxeError) ? ex71.val : ex71) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left35,right35)) {
			utest_Assert.pass("Matrix4x3.hx:794 [OK] ({\nvar a = Matrix4x3.unit;\na + a == new Matrix4x3( { a: 2., b: 0., c: 0., d: 0.\n, e: 0., f: 2., g: 0., h: 0.\n, i: 0., j: 0., k: 2., l: 0. } ); }) == true",{ lineNumber : 794, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix4x3.unit;\na + a == new Matrix4x3( { a: 2., b: 0., c: 0., d: 0.\n, e: 0., f: 2., g: 0., h: 0.\n, i: 0., j: 0., k: 2., l: 0. } ); }) == true --> Left side `" + Std.string(left35) + "` does not equal `" + Std.string(right35) + "`.",{ lineNumber : 794, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
		var left36;
		try {
			var this77 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
			var a36 = this77;
			var this78 = new geom_structure_Mat4x3(a36.a - a36.a,a36.b - a36.b,a36.c - a36.c,a36.d - a36.d,a36.e - a36.e,a36.f - a36.f,a36.g - a36.g,a36.h - a36.h,a36.i - a36.i,a36.j - a36.j,a36.k - a36.k,a36.l - a36.l);
			var a37 = this78;
			var this79 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var b35 = this79;
			var delta34 = 0.0000001;
			left36 = !(Math.abs(a37.a - b35.a) >= delta34 || Math.abs(a37.b - b35.b) >= delta34 || Math.abs(a37.c - b35.c) >= delta34 || Math.abs(a37.d - b35.d) >= delta34 || Math.abs(a37.e - b35.e) >= delta34 || Math.abs(a37.f - b35.f) >= delta34 || Math.abs(a37.g - b35.g) >= delta34 || Math.abs(a37.h - b35.h) >= delta34 || Math.abs(a37.i - b35.i) >= delta34 || Math.abs(a37.j - b35.j) >= delta34 || Math.abs(a37.k - b35.k) >= delta34 || Math.abs(a37.l - b35.l) >= delta34);
		} catch( ex72 ) {
			haxe_CallStack.lastException = ex72;
			left36 = "exception: " + Std.string(((ex72) instanceof js__$Boot_HaxeError) ? ex72.val : ex72) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right36;
		try {
			right36 = true;
		} catch( ex73 ) {
			haxe_CallStack.lastException = ex73;
			right36 = "exception: " + Std.string(((ex73) instanceof js__$Boot_HaxeError) ? ex73.val : ex73) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left36,right36)) {
			utest_Assert.pass("Matrix4x3.hx:809 [OK] ({\nvar a = Matrix4x3.unit;\na - a == Matrix4x3.zero; }) == true",{ lineNumber : 809, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix4x3.unit;\na - a == Matrix4x3.zero; }) == true --> Left side `" + Std.string(left36) + "` does not equal `" + Std.string(right36) + "`.",{ lineNumber : 809, fileName : "src/geom/matrix/Matrix4x3.hx", className : "", methodName : ""});
		}
	}
	,testMatrix4x4_1: function() {
		var left;
		try {
			var this1 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
			left = this1;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			var this2 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
			var this3 = this2;
			var this4 = new geom_structure_Mat4x4(this3.a,this3.b,this3.c,this3.d,this3.e,this3.f,this3.g,this3.h,this3.i,this3.j,this3.k,this3.l,this3.m,this3.n,this3.o,this3.p);
			right = this4;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("Matrix4x4.hx:21 [OK] Matrix4x4.counting == Matrix4x4.counting.clone()",{ lineNumber : 21, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix4x4.counting == Matrix4x4.counting.clone() --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 21, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		}
		var left1;
		try {
			var this5 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
			var m = this5;
			var arr = [];
			var i = HxOverrides.iter([m.a,m.b,m.c,m.d,m.e,m.f,m.g,m.h,m.i,m.j,m.k,m.l,m.m,m.n,m.o,m.p]);
			while(i.hasNext()) {
				var i1 = i.next();
				arr.push(i1);
			}
			left1 = [1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.].toString() == arr.toString();
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			right1 = true;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left1,right1)) {
			utest_Assert.pass("Matrix4x4.hx:33 [OK] ({\nvar m = Matrix4x4.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.].toString() == arr.toString(); }) == true",{ lineNumber : 33, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar m = Matrix4x4.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.].toString() == arr.toString(); }) == true --> Left side `" + Std.string(left1) + "` does not equal `" + Std.string(right1) + "`.",{ lineNumber : 33, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		}
		var left2;
		try {
			var this6 = new geom_structure_Mat4x4(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var a = this6;
			var this7 = new geom_structure_Mat4x4(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var b = this7;
			var delta = 0.0000001;
			left2 = !(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta || Math.abs(a.e - b.e) >= delta || Math.abs(a.f - b.f) >= delta || Math.abs(a.g - b.g) >= delta || Math.abs(a.h - b.h) >= delta || Math.abs(a.i - b.i) >= delta || Math.abs(a.j - b.j) >= delta || Math.abs(a.k - b.k) >= delta || Math.abs(a.l - b.l) >= delta || Math.abs(a.m - b.m) >= delta || Math.abs(a.n - b.n) >= delta || Math.abs(a.o - b.o) >= delta || Math.abs(a.p - b.p) >= delta);
		} catch( ex4 ) {
			haxe_CallStack.lastException = ex4;
			left2 = "exception: " + Std.string(((ex4) instanceof js__$Boot_HaxeError) ? ex4.val : ex4) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right2;
		try {
			right2 = true;
		} catch( ex5 ) {
			haxe_CallStack.lastException = ex5;
			right2 = "exception: " + Std.string(((ex5) instanceof js__$Boot_HaxeError) ? ex5.val : ex5) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left2,right2)) {
			utest_Assert.pass("Matrix4x4.hx:53 [OK] ({\nMatrix4x4.zero == new Matrix4x4({ a: 0., b: 0., c: 0., d: 0.\n, e: 0., f: 0., g: 0., h: 0.\n, i: 0., j: 0., k: 0., l: 0.\n, m: 0., n: 0., o: 0., p: 0. } );\n}) == true",{ lineNumber : 53, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x4.zero == new Matrix4x4({ a: 0., b: 0., c: 0., d: 0.\n, e: 0., f: 0., g: 0., h: 0.\n, i: 0., j: 0., k: 0., l: 0.\n, m: 0., n: 0., o: 0., p: 0. } );\n}) == true --> Left side `" + Std.string(left2) + "` does not equal `" + Std.string(right2) + "`.",{ lineNumber : 53, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		}
		var left3;
		try {
			var this8 = new geom_structure_Mat4x4(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.);
			var a1 = this8;
			var this9 = new geom_structure_Mat4x4(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.);
			var b1 = this9;
			var delta1 = 0.0000001;
			left3 = !(Math.abs(a1.a - b1.a) >= delta1 || Math.abs(a1.b - b1.b) >= delta1 || Math.abs(a1.c - b1.c) >= delta1 || Math.abs(a1.d - b1.d) >= delta1 || Math.abs(a1.e - b1.e) >= delta1 || Math.abs(a1.f - b1.f) >= delta1 || Math.abs(a1.g - b1.g) >= delta1 || Math.abs(a1.h - b1.h) >= delta1 || Math.abs(a1.i - b1.i) >= delta1 || Math.abs(a1.j - b1.j) >= delta1 || Math.abs(a1.k - b1.k) >= delta1 || Math.abs(a1.l - b1.l) >= delta1 || Math.abs(a1.m - b1.m) >= delta1 || Math.abs(a1.n - b1.n) >= delta1 || Math.abs(a1.o - b1.o) >= delta1 || Math.abs(a1.p - b1.p) >= delta1);
		} catch( ex6 ) {
			haxe_CallStack.lastException = ex6;
			left3 = "exception: " + Std.string(((ex6) instanceof js__$Boot_HaxeError) ? ex6.val : ex6) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right3;
		try {
			right3 = true;
		} catch( ex7 ) {
			haxe_CallStack.lastException = ex7;
			right3 = "exception: " + Std.string(((ex7) instanceof js__$Boot_HaxeError) ? ex7.val : ex7) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left3,right3)) {
			utest_Assert.pass("Matrix4x4.hx:76 [OK] ({\nMatrix4x4.unit == new Matrix4x4({ a: 1., b: 0., c: 0., d: 0.\n, e: 0., f: 1., g: 0., h: 0.\n, i: 0., j: 0., k: 1., l: 0.\n, m: 0., n: 0., o: 0., p: 1. } );\n}) == true",{ lineNumber : 76, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x4.unit == new Matrix4x4({ a: 1., b: 0., c: 0., d: 0.\n, e: 0., f: 1., g: 0., h: 0.\n, i: 0., j: 0., k: 1., l: 0.\n, m: 0., n: 0., o: 0., p: 1. } );\n}) == true --> Left side `" + Std.string(left3) + "` does not equal `" + Std.string(right3) + "`.",{ lineNumber : 76, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		}
		var left4;
		try {
			var this10 = new geom_structure_Mat4x4(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.);
			var a2 = this10;
			var this11 = new geom_structure_Mat4x4(-a2.a,-a2.b,-a2.c,-a2.d,-a2.e,-a2.f,-a2.g,-a2.h,-a2.i,-a2.j,-a2.k,-a2.l,-a2.m,-a2.n,-a2.o,-a2.p);
			var a3 = this11;
			var this12 = new geom_structure_Mat4x4(-1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.);
			var b2 = this12;
			var delta2 = 0.0000001;
			left4 = !(Math.abs(a3.a - b2.a) >= delta2 || Math.abs(a3.b - b2.b) >= delta2 || Math.abs(a3.c - b2.c) >= delta2 || Math.abs(a3.d - b2.d) >= delta2 || Math.abs(a3.e - b2.e) >= delta2 || Math.abs(a3.f - b2.f) >= delta2 || Math.abs(a3.g - b2.g) >= delta2 || Math.abs(a3.h - b2.h) >= delta2 || Math.abs(a3.i - b2.i) >= delta2 || Math.abs(a3.j - b2.j) >= delta2 || Math.abs(a3.k - b2.k) >= delta2 || Math.abs(a3.l - b2.l) >= delta2 || Math.abs(a3.m - b2.m) >= delta2 || Math.abs(a3.n - b2.n) >= delta2 || Math.abs(a3.o - b2.o) >= delta2 || Math.abs(a3.p - b2.p) >= delta2);
		} catch( ex8 ) {
			haxe_CallStack.lastException = ex8;
			left4 = "exception: " + Std.string(((ex8) instanceof js__$Boot_HaxeError) ? ex8.val : ex8) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right4;
		try {
			right4 = true;
		} catch( ex9 ) {
			haxe_CallStack.lastException = ex9;
			right4 = "exception: " + Std.string(((ex9) instanceof js__$Boot_HaxeError) ? ex9.val : ex9) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left4,right4)) {
			utest_Assert.pass("Matrix4x4.hx:99 [OK] ({\nMatrix4x4.minus1 == new Matrix4x4({ a: -1., b: 0., c: 0., d: 0.\n, e: 0., f: -1., g: 0., h: 0.\n, i: 0., j: 0., k: -1., l: 0.\n, m: 0., n: 0., o: 0., p: -1. } );\n}) == true",{ lineNumber : 99, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x4.minus1 == new Matrix4x4({ a: -1., b: 0., c: 0., d: 0.\n, e: 0., f: -1., g: 0., h: 0.\n, i: 0., j: 0., k: -1., l: 0.\n, m: 0., n: 0., o: 0., p: -1. } );\n}) == true --> Left side `" + Std.string(left4) + "` does not equal `" + Std.string(right4) + "`.",{ lineNumber : 99, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		}
		var left5;
		try {
			var this13 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
			var a4 = this13;
			var this14 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
			var b3 = this14;
			var delta3 = 0.0000001;
			left5 = !(Math.abs(a4.a - b3.a) >= delta3 || Math.abs(a4.b - b3.b) >= delta3 || Math.abs(a4.c - b3.c) >= delta3 || Math.abs(a4.d - b3.d) >= delta3 || Math.abs(a4.e - b3.e) >= delta3 || Math.abs(a4.f - b3.f) >= delta3 || Math.abs(a4.g - b3.g) >= delta3 || Math.abs(a4.h - b3.h) >= delta3 || Math.abs(a4.i - b3.i) >= delta3 || Math.abs(a4.j - b3.j) >= delta3 || Math.abs(a4.k - b3.k) >= delta3 || Math.abs(a4.l - b3.l) >= delta3 || Math.abs(a4.m - b3.m) >= delta3 || Math.abs(a4.n - b3.n) >= delta3 || Math.abs(a4.o - b3.o) >= delta3 || Math.abs(a4.p - b3.p) >= delta3);
		} catch( ex10 ) {
			haxe_CallStack.lastException = ex10;
			left5 = "exception: " + Std.string(((ex10) instanceof js__$Boot_HaxeError) ? ex10.val : ex10) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right5;
		try {
			right5 = true;
		} catch( ex11 ) {
			haxe_CallStack.lastException = ex11;
			right5 = "exception: " + Std.string(((ex11) instanceof js__$Boot_HaxeError) ? ex11.val : ex11) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left5,right5)) {
			utest_Assert.pass("Matrix4x4.hx:114 [OK] ({\nMatrix4x4.counting == new Matrix4x4({ a: 1., b: 2., c: 3., d: 4.\n, e: 5., f: 6., g: 7., h: 8.\n, i: 9., j: 10., k: 11., l: 12.\n, m: 13., n: 14., o: 15., p: 16. } );\n}) == true",{ lineNumber : 114, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x4.counting == new Matrix4x4({ a: 1., b: 2., c: 3., d: 4.\n, e: 5., f: 6., g: 7., h: 8.\n, i: 9., j: 10., k: 11., l: 12.\n, m: 13., n: 14., o: 15., p: 16. } );\n}) == true --> Left side `" + Std.string(left5) + "` does not equal `" + Std.string(right5) + "`.",{ lineNumber : 114, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		}
		var left6;
		try {
			var this15 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
			var a5 = this15;
			var this16 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
			var b4 = this16;
			var delta4 = 0.0000001;
			left6 = !(Math.abs(a5.a - b4.a) >= delta4 || Math.abs(a5.b - b4.b) >= delta4 || Math.abs(a5.c - b4.c) >= delta4 || Math.abs(a5.d - b4.d) >= delta4 || Math.abs(a5.e - b4.e) >= delta4 || Math.abs(a5.f - b4.f) >= delta4 || Math.abs(a5.g - b4.g) >= delta4 || Math.abs(a5.h - b4.h) >= delta4 || Math.abs(a5.i - b4.i) >= delta4 || Math.abs(a5.j - b4.j) >= delta4 || Math.abs(a5.k - b4.k) >= delta4 || Math.abs(a5.l - b4.l) >= delta4 || Math.abs(a5.m - b4.m) >= delta4 || Math.abs(a5.n - b4.n) >= delta4 || Math.abs(a5.o - b4.o) >= delta4 || Math.abs(a5.p - b4.p) >= delta4);
		} catch( ex12 ) {
			haxe_CallStack.lastException = ex12;
			left6 = "exception: " + Std.string(((ex12) instanceof js__$Boot_HaxeError) ? ex12.val : ex12) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right6;
		try {
			right6 = true;
		} catch( ex13 ) {
			haxe_CallStack.lastException = ex13;
			right6 = "exception: " + Std.string(((ex13) instanceof js__$Boot_HaxeError) ? ex13.val : ex13) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left6,right6)) {
			utest_Assert.pass("Matrix4x4.hx:138 [OK] ({\nMatrix4x4._1_16 == new Matrix4x4({ a: 1., b: 2., c: 3., d: 4.\n, e: 5., f: 6., g: 7., h: 8.\n, i: 9., j: 10., k: 11., l: 12.\n, m: 13., n: 14., o: 15., p: 16. } );\n}) == true",{ lineNumber : 138, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix4x4._1_16 == new Matrix4x4({ a: 1., b: 2., c: 3., d: 4.\n, e: 5., f: 6., g: 7., h: 8.\n, i: 9., j: 10., k: 11., l: 12.\n, m: 13., n: 14., o: 15., p: 16. } );\n}) == true --> Left side `" + Std.string(left6) + "` does not equal `" + Std.string(right6) + "`.",{ lineNumber : 138, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		}
		var left7;
		try {
			var this17 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
			var a6 = this17;
			var this18 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
			var b5 = this18;
			var delta5 = 0.0000001;
			left7 = !(Math.abs(a6.a - b5.a) >= delta5 || Math.abs(a6.b - b5.b) >= delta5 || Math.abs(a6.c - b5.c) >= delta5 || Math.abs(a6.d - b5.d) >= delta5 || Math.abs(a6.e - b5.e) >= delta5 || Math.abs(a6.f - b5.f) >= delta5 || Math.abs(a6.g - b5.g) >= delta5 || Math.abs(a6.h - b5.h) >= delta5 || Math.abs(a6.i - b5.i) >= delta5 || Math.abs(a6.j - b5.j) >= delta5 || Math.abs(a6.k - b5.k) >= delta5 || Math.abs(a6.l - b5.l) >= delta5 || Math.abs(a6.m - b5.m) >= delta5 || Math.abs(a6.n - b5.n) >= delta5 || Math.abs(a6.o - b5.o) >= delta5 || Math.abs(a6.p - b5.p) >= delta5);
		} catch( ex14 ) {
			haxe_CallStack.lastException = ex14;
			left7 = "exception: " + Std.string(((ex14) instanceof js__$Boot_HaxeError) ? ex14.val : ex14) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right7;
		try {
			right7 = true;
		} catch( ex15 ) {
			haxe_CallStack.lastException = ex15;
			right7 = "exception: " + Std.string(((ex15) instanceof js__$Boot_HaxeError) ? ex15.val : ex15) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left7,right7)) {
			utest_Assert.pass("Matrix4x4.hx:151 [OK] ({\nvar a = new Matrix4x4({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9., j:10., k:11., l:12., m:13.,n:14.,o:15.,p:16. });\nvar b = new Matrix4x4({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9., j:10., k:11., l:12., m:13.,n:14.,o:15.,p:16. });\na == b; }) == true",{ lineNumber : 151, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix4x4({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9., j:10., k:11., l:12., m:13.,n:14.,o:15.,p:16. });\nvar b = new Matrix4x4({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9., j:10., k:11., l:12., m:13.,n:14.,o:15.,p:16. });\na == b; }) == true --> Left side `" + Std.string(left7) + "` does not equal `" + Std.string(right7) + "`.",{ lineNumber : 151, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		}
		var left8;
		try {
			var this19 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
			var a7 = this19;
			var this20 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,15.);
			var b6 = this20;
			var delta6 = 0.0000001;
			left8 = !(!(Math.abs(a7.a - b6.a) >= delta6 || Math.abs(a7.b - b6.b) >= delta6 || Math.abs(a7.c - b6.c) >= delta6 || Math.abs(a7.d - b6.d) >= delta6 || Math.abs(a7.e - b6.e) >= delta6 || Math.abs(a7.f - b6.f) >= delta6 || Math.abs(a7.g - b6.g) >= delta6 || Math.abs(a7.h - b6.h) >= delta6 || Math.abs(a7.i - b6.i) >= delta6 || Math.abs(a7.j - b6.j) >= delta6 || Math.abs(a7.k - b6.k) >= delta6 || Math.abs(a7.l - b6.l) >= delta6 || Math.abs(a7.m - b6.m) >= delta6 || Math.abs(a7.n - b6.n) >= delta6 || Math.abs(a7.o - b6.o) >= delta6 || Math.abs(a7.p - b6.p) >= delta6));
		} catch( ex16 ) {
			haxe_CallStack.lastException = ex16;
			left8 = "exception: " + Std.string(((ex16) instanceof js__$Boot_HaxeError) ? ex16.val : ex16) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right8;
		try {
			right8 = true;
		} catch( ex17 ) {
			haxe_CallStack.lastException = ex17;
			right8 = "exception: " + Std.string(((ex17) instanceof js__$Boot_HaxeError) ? ex17.val : ex17) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left8,right8)) {
			utest_Assert.pass("Matrix4x4.hx:182 [OK] ({\nvar a = new Matrix4x4({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9., j:10., k:11., l:12. , m:13.,n:14.,o:15.,p:16.});\nvar b = new Matrix4x4({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9., j:10., k:11., l:12., m:13.,n:14.,o:15.,p:15. });\na != b; }) == true",{ lineNumber : 182, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Matrix4x4({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9., j:10., k:11., l:12. , m:13.,n:14.,o:15.,p:16.});\nvar b = new Matrix4x4({ a: 1., b: 2., c: 3., d: 4., e: 5., f: 6., g: 7., h: 8., i: 9., j:10., k:11., l:12., m:13.,n:14.,o:15.,p:15. });\na != b; }) == true --> Left side `" + Std.string(left8) + "` does not equal `" + Std.string(right8) + "`.",{ lineNumber : 182, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		}
		var left9;
		try {
			var this21 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
			var a8 = this21;
			var this22 = new geom_structure_Mat4x4(-a8.a,-a8.b,-a8.c,-a8.d,-a8.e,-a8.f,-a8.g,-a8.h,-a8.i,-a8.j,-a8.k,-a8.l,-a8.m,-a8.n,-a8.o,-a8.p);
			var b7 = this22;
			var this23 = new geom_structure_Mat4x4(-1.,-2.,-3.,-4.,-5.,-6.,-7.,-8,-9.,-10.,-11.,-12.,-13.,-14.,-15.,-16.);
			var b8 = this23;
			var delta7 = 0.0000001;
			left9 = !(Math.abs(b7.a - b8.a) >= delta7 || Math.abs(b7.b - b8.b) >= delta7 || Math.abs(b7.c - b8.c) >= delta7 || Math.abs(b7.d - b8.d) >= delta7 || Math.abs(b7.e - b8.e) >= delta7 || Math.abs(b7.f - b8.f) >= delta7 || Math.abs(b7.g - b8.g) >= delta7 || Math.abs(b7.h - b8.h) >= delta7 || Math.abs(b7.i - b8.i) >= delta7 || Math.abs(b7.j - b8.j) >= delta7 || Math.abs(b7.k - b8.k) >= delta7 || Math.abs(b7.l - b8.l) >= delta7 || Math.abs(b7.m - b8.m) >= delta7 || Math.abs(b7.n - b8.n) >= delta7 || Math.abs(b7.o - b8.o) >= delta7 || Math.abs(b7.p - b8.p) >= delta7);
		} catch( ex18 ) {
			haxe_CallStack.lastException = ex18;
			left9 = "exception: " + Std.string(((ex18) instanceof js__$Boot_HaxeError) ? ex18.val : ex18) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right9;
		try {
			right9 = true;
		} catch( ex19 ) {
			haxe_CallStack.lastException = ex19;
			right9 = "exception: " + Std.string(((ex19) instanceof js__$Boot_HaxeError) ? ex19.val : ex19) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left9,right9)) {
			utest_Assert.pass("Matrix4x4.hx:197 [OK] ({\nvar a = Matrix4x4.counting;\nvar b = -a;\nb == new Matrix4x4({ a: -1., b: -2., c: -3., d: -4.\n, e: -5., f: -6., g: -7., h: -8\n, i: -9., j: -10., k: -11., l: -12.\n, m: -13., n: -14., o:-15., p: -16. });\n}) == true",{ lineNumber : 197, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix4x4.counting;\nvar b = -a;\nb == new Matrix4x4({ a: -1., b: -2., c: -3., d: -4.\n, e: -5., f: -6., g: -7., h: -8\n, i: -9., j: -10., k: -11., l: -12.\n, m: -13., n: -14., o:-15., p: -16. });\n}) == true --> Left side `" + Std.string(left9) + "` does not equal `" + Std.string(right9) + "`.",{ lineNumber : 197, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		}
		var left10;
		try {
			var this24 = new geom_structure_Mat4x4(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.);
			var a9 = this24;
			var this25 = new geom_structure_Mat4x4(a9.a + a9.a,a9.b + a9.b,a9.c + a9.c,a9.d + a9.d,a9.e + a9.e,a9.f + a9.f,a9.g + a9.g,a9.h + a9.h,a9.i + a9.i,a9.j + a9.j,a9.k + a9.k,a9.l + a9.l,a9.m + a9.m,a9.n + a9.n,a9.o + a9.o,a9.p + a9.p);
			var a10 = this25;
			var this26 = new geom_structure_Mat4x4(2.,0.,0.,0.,0.,2.,0.,0.,0.,0.,2.,0.,0.,0.,0.,2.);
			var b9 = this26;
			var delta8 = 0.0000001;
			left10 = !(Math.abs(a10.a - b9.a) >= delta8 || Math.abs(a10.b - b9.b) >= delta8 || Math.abs(a10.c - b9.c) >= delta8 || Math.abs(a10.d - b9.d) >= delta8 || Math.abs(a10.e - b9.e) >= delta8 || Math.abs(a10.f - b9.f) >= delta8 || Math.abs(a10.g - b9.g) >= delta8 || Math.abs(a10.h - b9.h) >= delta8 || Math.abs(a10.i - b9.i) >= delta8 || Math.abs(a10.j - b9.j) >= delta8 || Math.abs(a10.k - b9.k) >= delta8 || Math.abs(a10.l - b9.l) >= delta8 || Math.abs(a10.m - b9.m) >= delta8 || Math.abs(a10.n - b9.n) >= delta8 || Math.abs(a10.o - b9.o) >= delta8 || Math.abs(a10.p - b9.p) >= delta8);
		} catch( ex20 ) {
			haxe_CallStack.lastException = ex20;
			left10 = "exception: " + Std.string(((ex20) instanceof js__$Boot_HaxeError) ? ex20.val : ex20) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right10;
		try {
			right10 = true;
		} catch( ex21 ) {
			haxe_CallStack.lastException = ex21;
			right10 = "exception: " + Std.string(((ex21) instanceof js__$Boot_HaxeError) ? ex21.val : ex21) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left10,right10)) {
			utest_Assert.pass("Matrix4x4.hx:220 [OK] ({\nvar a = Matrix4x4.unit;\na + a == new Matrix4x4( { a: 2., b: 0., c: 0., d: 0.\n, e: 0., f: 2., g: 0., h: 0.\n, i: 0., j: 0., k: 2., l: 0.\n, m: 0., n: 0., o: 0., p: 2. } ); }) == true",{ lineNumber : 220, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix4x4.unit;\na + a == new Matrix4x4( { a: 2., b: 0., c: 0., d: 0.\n, e: 0., f: 2., g: 0., h: 0.\n, i: 0., j: 0., k: 2., l: 0.\n, m: 0., n: 0., o: 0., p: 2. } ); }) == true --> Left side `" + Std.string(left10) + "` does not equal `" + Std.string(right10) + "`.",{ lineNumber : 220, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		}
		var left11;
		try {
			var this27 = new geom_structure_Mat4x4(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.);
			var a11 = this27;
			var this28 = new geom_structure_Mat4x4(a11.a - a11.a,a11.b - a11.b,a11.c - a11.c,a11.d - a11.d,a11.e - a11.e,a11.f - a11.f,a11.g - a11.g,a11.h - a11.h,a11.i - a11.i,a11.j - a11.j,a11.k - a11.k,a11.l - a11.l,a11.m - a11.m,a11.n - a11.n,a11.o - a11.o,a11.p - a11.p);
			var a12 = this28;
			var this29 = new geom_structure_Mat4x4(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var b10 = this29;
			var delta9 = 0.0000001;
			left11 = !(Math.abs(a12.a - b10.a) >= delta9 || Math.abs(a12.b - b10.b) >= delta9 || Math.abs(a12.c - b10.c) >= delta9 || Math.abs(a12.d - b10.d) >= delta9 || Math.abs(a12.e - b10.e) >= delta9 || Math.abs(a12.f - b10.f) >= delta9 || Math.abs(a12.g - b10.g) >= delta9 || Math.abs(a12.h - b10.h) >= delta9 || Math.abs(a12.i - b10.i) >= delta9 || Math.abs(a12.j - b10.j) >= delta9 || Math.abs(a12.k - b10.k) >= delta9 || Math.abs(a12.l - b10.l) >= delta9 || Math.abs(a12.m - b10.m) >= delta9 || Math.abs(a12.n - b10.n) >= delta9 || Math.abs(a12.o - b10.o) >= delta9 || Math.abs(a12.p - b10.p) >= delta9);
		} catch( ex22 ) {
			haxe_CallStack.lastException = ex22;
			left11 = "exception: " + Std.string(((ex22) instanceof js__$Boot_HaxeError) ? ex22.val : ex22) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right11;
		try {
			right11 = true;
		} catch( ex23 ) {
			haxe_CallStack.lastException = ex23;
			right11 = "exception: " + Std.string(((ex23) instanceof js__$Boot_HaxeError) ? ex23.val : ex23) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left11,right11)) {
			utest_Assert.pass("Matrix4x4.hx:237 [OK] ({\nvar a = Matrix4x4.unit;\na - a == Matrix4x4.zero; }) == true",{ lineNumber : 237, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix4x4.unit;\na - a == Matrix4x4.zero; }) == true --> Left side `" + Std.string(left11) + "` does not equal `" + Std.string(right11) + "`.",{ lineNumber : 237, fileName : "src/geom/matrix/Matrix4x4.hx", className : "", methodName : ""});
		}
	}
	,testMatrix5x5_1: function() {
		var left;
		try {
			var this1 = new geom_structure_Mat5x5(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.);
			left = this1;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			var this2 = new geom_structure_Mat5x5(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.);
			var this3 = this2;
			var this4 = new geom_structure_Mat5x5(this3.a,this3.b,this3.c,this3.d,this3.e,this3.f,this3.g,this3.h,this3.i,this3.j,this3.k,this3.l,this3.m,this3.n,this3.o,this3.p,this3.q,this3.r,this3.s,this3.t,this3.u,this3.v,this3.w,this3.x,this3.y);
			right = this4;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("Matrix5x5.hx:20 [OK] Matrix5x5.counting == Matrix5x5.counting.clone()",{ lineNumber : 20, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Matrix5x5.counting == Matrix5x5.counting.clone() --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 20, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		}
		var left1;
		try {
			var this5 = new geom_structure_Mat5x5(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.);
			var m = this5;
			var arr = [];
			var i = HxOverrides.iter([m.a,m.b,m.c,m.d,m.e,m.f,m.g,m.h,m.i,m.j,m.k,m.l,m.m,m.n,m.o,m.p,m.q,m.r,m.s,m.t,m.u,m.v,m.w,m.x,m.y]);
			while(i.hasNext()) {
				var i1 = i.next();
				arr.push(i1);
			}
			left1 = [1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.].toString() == arr.toString();
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			right1 = true;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left1,right1)) {
			utest_Assert.pass("Matrix5x5.hx:33 [OK] ({\nvar m = Matrix5x5.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.].toString() == arr.toString(); }) == true",{ lineNumber : 33, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar m = Matrix5x5.counting;\nvar arr = new Array<Float>();\nfor( i in m ){\narr.push(i);\n}\n[1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.].toString() == arr.toString(); }) == true --> Left side `" + Std.string(left1) + "` does not equal `" + Std.string(right1) + "`.",{ lineNumber : 33, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		}
		var left2;
		try {
			var this6 = new geom_structure_Mat5x5(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var a = this6;
			var this7 = new geom_structure_Mat5x5(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var b = this7;
			var delta = 0.0000001;
			left2 = !(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta || Math.abs(a.e - b.e) >= delta || Math.abs(a.f - b.f) >= delta || Math.abs(a.g - b.g) >= delta || Math.abs(a.h - b.h) >= delta || Math.abs(a.i - b.i) >= delta || Math.abs(a.j - b.j) >= delta || Math.abs(a.k - b.k) >= delta || Math.abs(a.l - b.l) >= delta || Math.abs(a.m - b.m) >= delta || Math.abs(a.n - b.n) >= delta || Math.abs(a.o - b.o) >= delta || Math.abs(a.p - b.p) >= delta || Math.abs(a.q - b.q) >= delta || Math.abs(a.r - b.r) >= delta || Math.abs(a.s - b.s) >= delta || Math.abs(a.t - b.t) >= delta || Math.abs(a.u - b.u) >= delta || Math.abs(a.v - b.v) >= delta || Math.abs(a.w - b.w) >= delta || Math.abs(a.x - b.x) >= delta || Math.abs(a.y - b.y) >= delta);
		} catch( ex4 ) {
			haxe_CallStack.lastException = ex4;
			left2 = "exception: " + Std.string(((ex4) instanceof js__$Boot_HaxeError) ? ex4.val : ex4) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right2;
		try {
			right2 = true;
		} catch( ex5 ) {
			haxe_CallStack.lastException = ex5;
			right2 = "exception: " + Std.string(((ex5) instanceof js__$Boot_HaxeError) ? ex5.val : ex5) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left2,right2)) {
			utest_Assert.pass("Matrix5x5.hx:54 [OK] ({\nMatrix5x5.zero == new Matrix5x5({ a: 0., b: 0., c: 0., d: 0., e: 0.\n, f: 0., g: 0., h: 0., i: 0., j: 0.\n, k: 0., l: 0., m: 0., n: 0., o: 0.\n, p: 0., q: 0., r: 0., s: 0., t: 0.\n, u: 0., v: 0., w: 0., x: 0., y: 0. } );\n}) == true",{ lineNumber : 54, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix5x5.zero == new Matrix5x5({ a: 0., b: 0., c: 0., d: 0., e: 0.\n, f: 0., g: 0., h: 0., i: 0., j: 0.\n, k: 0., l: 0., m: 0., n: 0., o: 0.\n, p: 0., q: 0., r: 0., s: 0., t: 0.\n, u: 0., v: 0., w: 0., x: 0., y: 0. } );\n}) == true --> Left side `" + Std.string(left2) + "` does not equal `" + Std.string(right2) + "`.",{ lineNumber : 54, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		}
		var left3;
		try {
			var this8 = new geom_structure_Mat5x5(1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.);
			var a1 = this8;
			var this9 = new geom_structure_Mat5x5(1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.);
			var b1 = this9;
			var delta1 = 0.0000001;
			left3 = !(Math.abs(a1.a - b1.a) >= delta1 || Math.abs(a1.b - b1.b) >= delta1 || Math.abs(a1.c - b1.c) >= delta1 || Math.abs(a1.d - b1.d) >= delta1 || Math.abs(a1.e - b1.e) >= delta1 || Math.abs(a1.f - b1.f) >= delta1 || Math.abs(a1.g - b1.g) >= delta1 || Math.abs(a1.h - b1.h) >= delta1 || Math.abs(a1.i - b1.i) >= delta1 || Math.abs(a1.j - b1.j) >= delta1 || Math.abs(a1.k - b1.k) >= delta1 || Math.abs(a1.l - b1.l) >= delta1 || Math.abs(a1.m - b1.m) >= delta1 || Math.abs(a1.n - b1.n) >= delta1 || Math.abs(a1.o - b1.o) >= delta1 || Math.abs(a1.p - b1.p) >= delta1 || Math.abs(a1.q - b1.q) >= delta1 || Math.abs(a1.r - b1.r) >= delta1 || Math.abs(a1.s - b1.s) >= delta1 || Math.abs(a1.t - b1.t) >= delta1 || Math.abs(a1.u - b1.u) >= delta1 || Math.abs(a1.v - b1.v) >= delta1 || Math.abs(a1.w - b1.w) >= delta1 || Math.abs(a1.x - b1.x) >= delta1 || Math.abs(a1.y - b1.y) >= delta1);
		} catch( ex6 ) {
			haxe_CallStack.lastException = ex6;
			left3 = "exception: " + Std.string(((ex6) instanceof js__$Boot_HaxeError) ? ex6.val : ex6) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right3;
		try {
			right3 = true;
		} catch( ex7 ) {
			haxe_CallStack.lastException = ex7;
			right3 = "exception: " + Std.string(((ex7) instanceof js__$Boot_HaxeError) ? ex7.val : ex7) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left3,right3)) {
			utest_Assert.pass("Matrix5x5.hx:82 [OK] ({\nMatrix5x5.unit == new Matrix5x5({ a: 1., b: 0., c: 0., d: 0., e: 0.\n, f: 0., g: 1., h: 0., i: 0., j: 0.\n, k: 0., l: 0., m: 1., n: 0., o: 0.\n, p: 0., q: 0., r: 0., s: 1., t: 0.\n, u: 0., v: 0., w: 0., x: 0., y: 1. } );\n}) == true",{ lineNumber : 82, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix5x5.unit == new Matrix5x5({ a: 1., b: 0., c: 0., d: 0., e: 0.\n, f: 0., g: 1., h: 0., i: 0., j: 0.\n, k: 0., l: 0., m: 1., n: 0., o: 0.\n, p: 0., q: 0., r: 0., s: 1., t: 0.\n, u: 0., v: 0., w: 0., x: 0., y: 1. } );\n}) == true --> Left side `" + Std.string(left3) + "` does not equal `" + Std.string(right3) + "`.",{ lineNumber : 82, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		}
		var left4;
		try {
			var this10 = new geom_structure_Mat5x5(1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.);
			var a2 = this10;
			var this11 = new geom_structure_Mat5x5(-a2.a,-a2.b,-a2.c,-a2.d,-a2.e,-a2.f,-a2.g,-a2.h,-a2.i,-a2.j,-a2.k,-a2.l,-a2.m,-a2.n,-a2.o,-a2.p,-a2.q,-a2.r,-a2.s,-a2.t,-a2.u,-a2.v,-a2.w,-a2.x,-a2.y);
			var a3 = this11;
			var this12 = new geom_structure_Mat5x5(-1.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,-1.);
			var b2 = this12;
			var delta2 = 0.0000001;
			left4 = !(Math.abs(a3.a - b2.a) >= delta2 || Math.abs(a3.b - b2.b) >= delta2 || Math.abs(a3.c - b2.c) >= delta2 || Math.abs(a3.d - b2.d) >= delta2 || Math.abs(a3.e - b2.e) >= delta2 || Math.abs(a3.f - b2.f) >= delta2 || Math.abs(a3.g - b2.g) >= delta2 || Math.abs(a3.h - b2.h) >= delta2 || Math.abs(a3.i - b2.i) >= delta2 || Math.abs(a3.j - b2.j) >= delta2 || Math.abs(a3.k - b2.k) >= delta2 || Math.abs(a3.l - b2.l) >= delta2 || Math.abs(a3.m - b2.m) >= delta2 || Math.abs(a3.n - b2.n) >= delta2 || Math.abs(a3.o - b2.o) >= delta2 || Math.abs(a3.p - b2.p) >= delta2 || Math.abs(a3.q - b2.q) >= delta2 || Math.abs(a3.r - b2.r) >= delta2 || Math.abs(a3.s - b2.s) >= delta2 || Math.abs(a3.t - b2.t) >= delta2 || Math.abs(a3.u - b2.u) >= delta2 || Math.abs(a3.v - b2.v) >= delta2 || Math.abs(a3.w - b2.w) >= delta2 || Math.abs(a3.x - b2.x) >= delta2 || Math.abs(a3.y - b2.y) >= delta2);
		} catch( ex8 ) {
			haxe_CallStack.lastException = ex8;
			left4 = "exception: " + Std.string(((ex8) instanceof js__$Boot_HaxeError) ? ex8.val : ex8) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right4;
		try {
			right4 = true;
		} catch( ex9 ) {
			haxe_CallStack.lastException = ex9;
			right4 = "exception: " + Std.string(((ex9) instanceof js__$Boot_HaxeError) ? ex9.val : ex9) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left4,right4)) {
			utest_Assert.pass("Matrix5x5.hx:107 [OK] ({\nMatrix5x5.minus1 == new Matrix5x5({ a: -1., b: 0., c: 0., d: 0., e: 0.\n, f: 0., g: -1., h: 0., i: 0., j: 0.\n, k: 0., l: 0., m: -1., n: 0., o: 0.\n, p: 0., q: 0., r: 0., s: -1., t: 0.\n, u: 0., v: 0., w: 0., x: 0., y: -1. } );\n}) == true",{ lineNumber : 107, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix5x5.minus1 == new Matrix5x5({ a: -1., b: 0., c: 0., d: 0., e: 0.\n, f: 0., g: -1., h: 0., i: 0., j: 0.\n, k: 0., l: 0., m: -1., n: 0., o: 0.\n, p: 0., q: 0., r: 0., s: -1., t: 0.\n, u: 0., v: 0., w: 0., x: 0., y: -1. } );\n}) == true --> Left side `" + Std.string(left4) + "` does not equal `" + Std.string(right4) + "`.",{ lineNumber : 107, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		}
		var left5;
		try {
			var this13 = new geom_structure_Mat5x5(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.);
			var a4 = this13;
			var this14 = new geom_structure_Mat5x5(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.);
			var b3 = this14;
			var delta3 = 0.0000001;
			left5 = !(Math.abs(a4.a - b3.a) >= delta3 || Math.abs(a4.b - b3.b) >= delta3 || Math.abs(a4.c - b3.c) >= delta3 || Math.abs(a4.d - b3.d) >= delta3 || Math.abs(a4.e - b3.e) >= delta3 || Math.abs(a4.f - b3.f) >= delta3 || Math.abs(a4.g - b3.g) >= delta3 || Math.abs(a4.h - b3.h) >= delta3 || Math.abs(a4.i - b3.i) >= delta3 || Math.abs(a4.j - b3.j) >= delta3 || Math.abs(a4.k - b3.k) >= delta3 || Math.abs(a4.l - b3.l) >= delta3 || Math.abs(a4.m - b3.m) >= delta3 || Math.abs(a4.n - b3.n) >= delta3 || Math.abs(a4.o - b3.o) >= delta3 || Math.abs(a4.p - b3.p) >= delta3 || Math.abs(a4.q - b3.q) >= delta3 || Math.abs(a4.r - b3.r) >= delta3 || Math.abs(a4.s - b3.s) >= delta3 || Math.abs(a4.t - b3.t) >= delta3 || Math.abs(a4.u - b3.u) >= delta3 || Math.abs(a4.v - b3.v) >= delta3 || Math.abs(a4.w - b3.w) >= delta3 || Math.abs(a4.x - b3.x) >= delta3 || Math.abs(a4.y - b3.y) >= delta3);
		} catch( ex10 ) {
			haxe_CallStack.lastException = ex10;
			left5 = "exception: " + Std.string(((ex10) instanceof js__$Boot_HaxeError) ? ex10.val : ex10) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right5;
		try {
			right5 = true;
		} catch( ex11 ) {
			haxe_CallStack.lastException = ex11;
			right5 = "exception: " + Std.string(((ex11) instanceof js__$Boot_HaxeError) ? ex11.val : ex11) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left5,right5)) {
			utest_Assert.pass("Matrix5x5.hx:123 [OK] ({\nMatrix5x5.counting == new Matrix5x5({ a: 1.,  b: 2.,  c: 3.,  d: 4.,  e: 5.\n, f: 6.,  g: 7.,  h: 8.,  i: 9.,  j: 10.\n, k: 11., l: 12., m: 13., n: 14., o: 15.\n, p: 16., q: 17., r: 18., s: 19., t: 20.\n, u: 21., v: 22., w: 23., x: 24., y: 25. } );\n}) == true",{ lineNumber : 123, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nMatrix5x5.counting == new Matrix5x5({ a: 1.,  b: 2.,  c: 3.,  d: 4.,  e: 5.\n, f: 6.,  g: 7.,  h: 8.,  i: 9.,  j: 10.\n, k: 11., l: 12., m: 13., n: 14., o: 15.\n, p: 16., q: 17., r: 18., s: 19., t: 20.\n, u: 21., v: 22., w: 23., x: 24., y: 25. } );\n}) == true --> Left side `" + Std.string(left5) + "` does not equal `" + Std.string(right5) + "`.",{ lineNumber : 123, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		}
		var left6;
		try {
			var this15 = new geom_structure_Mat5x5(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.);
			var a5 = this15;
			var this16 = new geom_structure_Mat5x5(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.);
			var b4 = this16;
			var delta4 = 0.0000001;
			left6 = !(Math.abs(a5.a - b4.a) >= delta4 || Math.abs(a5.b - b4.b) >= delta4 || Math.abs(a5.c - b4.c) >= delta4 || Math.abs(a5.d - b4.d) >= delta4 || Math.abs(a5.e - b4.e) >= delta4 || Math.abs(a5.f - b4.f) >= delta4 || Math.abs(a5.g - b4.g) >= delta4 || Math.abs(a5.h - b4.h) >= delta4 || Math.abs(a5.i - b4.i) >= delta4 || Math.abs(a5.j - b4.j) >= delta4 || Math.abs(a5.k - b4.k) >= delta4 || Math.abs(a5.l - b4.l) >= delta4 || Math.abs(a5.m - b4.m) >= delta4 || Math.abs(a5.n - b4.n) >= delta4 || Math.abs(a5.o - b4.o) >= delta4 || Math.abs(a5.p - b4.p) >= delta4 || Math.abs(a5.q - b4.q) >= delta4 || Math.abs(a5.r - b4.r) >= delta4 || Math.abs(a5.s - b4.s) >= delta4 || Math.abs(a5.t - b4.t) >= delta4 || Math.abs(a5.u - b4.u) >= delta4 || Math.abs(a5.v - b4.v) >= delta4 || Math.abs(a5.w - b4.w) >= delta4 || Math.abs(a5.x - b4.x) >= delta4 || Math.abs(a5.y - b4.y) >= delta4);
		} catch( ex12 ) {
			haxe_CallStack.lastException = ex12;
			left6 = "exception: " + Std.string(((ex12) instanceof js__$Boot_HaxeError) ? ex12.val : ex12) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right6;
		try {
			right6 = true;
		} catch( ex13 ) {
			haxe_CallStack.lastException = ex13;
			right6 = "exception: " + Std.string(((ex13) instanceof js__$Boot_HaxeError) ? ex13.val : ex13) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left6,right6)) {
			utest_Assert.pass("Matrix5x5.hx:148 [OK] ({\nvar a = Matrix5x5.counting;\nvar b = Matrix5x5.counting;\na == b; }) == true",{ lineNumber : 148, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix5x5.counting;\nvar b = Matrix5x5.counting;\na == b; }) == true --> Left side `" + Std.string(left6) + "` does not equal `" + Std.string(right6) + "`.",{ lineNumber : 148, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		}
		var left7;
		try {
			var this17 = new geom_structure_Mat5x5(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.);
			var a6 = this17;
			var this18 = new geom_structure_Mat5x5(a6.a + a6.a,a6.b + a6.b,a6.c + a6.c,a6.d + a6.d,a6.e + a6.e,a6.f + a6.f,a6.g + a6.g,a6.h + a6.h,a6.i + a6.i,a6.j + a6.j,a6.k + a6.k,a6.l + a6.l,a6.m + a6.m,a6.n + a6.n,a6.o + a6.o,a6.p + a6.p,a6.q + a6.q,a6.r + a6.r,a6.s + a6.s,a6.t + a6.t,a6.u + a6.u,a6.v + a6.v,a6.w + a6.w,a6.x + a6.x,a6.y + a6.y);
			var b5 = this18;
			var delta5 = 0.0000001;
			left7 = !(!(Math.abs(a6.a - b5.a) >= delta5 || Math.abs(a6.b - b5.b) >= delta5 || Math.abs(a6.c - b5.c) >= delta5 || Math.abs(a6.d - b5.d) >= delta5 || Math.abs(a6.e - b5.e) >= delta5 || Math.abs(a6.f - b5.f) >= delta5 || Math.abs(a6.g - b5.g) >= delta5 || Math.abs(a6.h - b5.h) >= delta5 || Math.abs(a6.i - b5.i) >= delta5 || Math.abs(a6.j - b5.j) >= delta5 || Math.abs(a6.k - b5.k) >= delta5 || Math.abs(a6.l - b5.l) >= delta5 || Math.abs(a6.m - b5.m) >= delta5 || Math.abs(a6.n - b5.n) >= delta5 || Math.abs(a6.o - b5.o) >= delta5 || Math.abs(a6.p - b5.p) >= delta5 || Math.abs(a6.q - b5.q) >= delta5 || Math.abs(a6.r - b5.r) >= delta5 || Math.abs(a6.s - b5.s) >= delta5 || Math.abs(a6.t - b5.t) >= delta5 || Math.abs(a6.u - b5.u) >= delta5 || Math.abs(a6.v - b5.v) >= delta5 || Math.abs(a6.w - b5.w) >= delta5 || Math.abs(a6.x - b5.x) >= delta5 || Math.abs(a6.y - b5.y) >= delta5));
		} catch( ex14 ) {
			haxe_CallStack.lastException = ex14;
			left7 = "exception: " + Std.string(((ex14) instanceof js__$Boot_HaxeError) ? ex14.val : ex14) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right7;
		try {
			right7 = true;
		} catch( ex15 ) {
			haxe_CallStack.lastException = ex15;
			right7 = "exception: " + Std.string(((ex15) instanceof js__$Boot_HaxeError) ? ex15.val : ex15) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left7,right7)) {
			utest_Assert.pass("Matrix5x5.hx:188 [OK] ({\nvar a = Matrix5x5.counting;\nvar b = a + a;\na != b; }) == true",{ lineNumber : 188, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix5x5.counting;\nvar b = a + a;\na != b; }) == true --> Left side `" + Std.string(left7) + "` does not equal `" + Std.string(right7) + "`.",{ lineNumber : 188, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		}
		var left8;
		try {
			var this19 = new geom_structure_Mat5x5(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.);
			var a7 = this19;
			var this20 = new geom_structure_Mat5x5(-a7.a,-a7.b,-a7.c,-a7.d,-a7.e,-a7.f,-a7.g,-a7.h,-a7.i,-a7.j,-a7.k,-a7.l,-a7.m,-a7.n,-a7.o,-a7.p,-a7.q,-a7.r,-a7.s,-a7.t,-a7.u,-a7.v,-a7.w,-a7.x,-a7.y);
			var b6 = this20;
			var this21 = new geom_structure_Mat5x5(-1.,-2.,-3.,-4.,-5.,-6.,-7.,-8,-9.,-10.,-11.,-12.,-13.,-14.,-15.,-16.,-17.,-18.,-19.,-20.,-21.,-22.,-23.,-24.,-25.);
			var b7 = this21;
			var delta6 = 0.0000001;
			left8 = !(Math.abs(b6.a - b7.a) >= delta6 || Math.abs(b6.b - b7.b) >= delta6 || Math.abs(b6.c - b7.c) >= delta6 || Math.abs(b6.d - b7.d) >= delta6 || Math.abs(b6.e - b7.e) >= delta6 || Math.abs(b6.f - b7.f) >= delta6 || Math.abs(b6.g - b7.g) >= delta6 || Math.abs(b6.h - b7.h) >= delta6 || Math.abs(b6.i - b7.i) >= delta6 || Math.abs(b6.j - b7.j) >= delta6 || Math.abs(b6.k - b7.k) >= delta6 || Math.abs(b6.l - b7.l) >= delta6 || Math.abs(b6.m - b7.m) >= delta6 || Math.abs(b6.n - b7.n) >= delta6 || Math.abs(b6.o - b7.o) >= delta6 || Math.abs(b6.p - b7.p) >= delta6 || Math.abs(b6.q - b7.q) >= delta6 || Math.abs(b6.r - b7.r) >= delta6 || Math.abs(b6.s - b7.s) >= delta6 || Math.abs(b6.t - b7.t) >= delta6 || Math.abs(b6.u - b7.u) >= delta6 || Math.abs(b6.v - b7.v) >= delta6 || Math.abs(b6.w - b7.w) >= delta6 || Math.abs(b6.x - b7.x) >= delta6 || Math.abs(b6.y - b7.y) >= delta6);
		} catch( ex16 ) {
			haxe_CallStack.lastException = ex16;
			left8 = "exception: " + Std.string(((ex16) instanceof js__$Boot_HaxeError) ? ex16.val : ex16) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right8;
		try {
			right8 = true;
		} catch( ex17 ) {
			haxe_CallStack.lastException = ex17;
			right8 = "exception: " + Std.string(((ex17) instanceof js__$Boot_HaxeError) ? ex17.val : ex17) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left8,right8)) {
			utest_Assert.pass("Matrix5x5.hx:203 [OK] ({\nvar a = Matrix5x5.counting;\nvar b = -a;\nb == new Matrix5x5({ a: -1., b: -2., c: -3., d: -4., e: -5.\n, f: -6., g: -7., h: -8, i: -9., j: -10.\n, k: -11., l: -12., m: -13., n: -14., o:-15.\n, p: -16., q: -17., r: -18., s: -19., t: -20.\n, u: -21., v: -22., w: -23., x: -24., y: -25. } );\n}) == true",{ lineNumber : 203, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix5x5.counting;\nvar b = -a;\nb == new Matrix5x5({ a: -1., b: -2., c: -3., d: -4., e: -5.\n, f: -6., g: -7., h: -8, i: -9., j: -10.\n, k: -11., l: -12., m: -13., n: -14., o:-15.\n, p: -16., q: -17., r: -18., s: -19., t: -20.\n, u: -21., v: -22., w: -23., x: -24., y: -25. } );\n}) == true --> Left side `" + Std.string(left8) + "` does not equal `" + Std.string(right8) + "`.",{ lineNumber : 203, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		}
		var left9;
		try {
			var this22 = new geom_structure_Mat5x5(1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.);
			var a8 = this22;
			var this23 = new geom_structure_Mat5x5(a8.a + a8.a,a8.b + a8.b,a8.c + a8.c,a8.d + a8.d,a8.e + a8.e,a8.f + a8.f,a8.g + a8.g,a8.h + a8.h,a8.i + a8.i,a8.j + a8.j,a8.k + a8.k,a8.l + a8.l,a8.m + a8.m,a8.n + a8.n,a8.o + a8.o,a8.p + a8.p,a8.q + a8.q,a8.r + a8.r,a8.s + a8.s,a8.t + a8.t,a8.u + a8.u,a8.v + a8.v,a8.w + a8.w,a8.x + a8.x,a8.y + a8.y);
			var a9 = this23;
			var this24 = new geom_structure_Mat5x5(2.,0.,0.,0.,0.,0.,2.,0.,0.,0.,0.,0.,2.,0.,0.,0.,0.,0.,2.,0.,0.,0.,0.,0.,2.);
			var b8 = this24;
			var delta7 = 0.0000001;
			left9 = !(Math.abs(a9.a - b8.a) >= delta7 || Math.abs(a9.b - b8.b) >= delta7 || Math.abs(a9.c - b8.c) >= delta7 || Math.abs(a9.d - b8.d) >= delta7 || Math.abs(a9.e - b8.e) >= delta7 || Math.abs(a9.f - b8.f) >= delta7 || Math.abs(a9.g - b8.g) >= delta7 || Math.abs(a9.h - b8.h) >= delta7 || Math.abs(a9.i - b8.i) >= delta7 || Math.abs(a9.j - b8.j) >= delta7 || Math.abs(a9.k - b8.k) >= delta7 || Math.abs(a9.l - b8.l) >= delta7 || Math.abs(a9.m - b8.m) >= delta7 || Math.abs(a9.n - b8.n) >= delta7 || Math.abs(a9.o - b8.o) >= delta7 || Math.abs(a9.p - b8.p) >= delta7 || Math.abs(a9.q - b8.q) >= delta7 || Math.abs(a9.r - b8.r) >= delta7 || Math.abs(a9.s - b8.s) >= delta7 || Math.abs(a9.t - b8.t) >= delta7 || Math.abs(a9.u - b8.u) >= delta7 || Math.abs(a9.v - b8.v) >= delta7 || Math.abs(a9.w - b8.w) >= delta7 || Math.abs(a9.x - b8.x) >= delta7 || Math.abs(a9.y - b8.y) >= delta7);
		} catch( ex18 ) {
			haxe_CallStack.lastException = ex18;
			left9 = "exception: " + Std.string(((ex18) instanceof js__$Boot_HaxeError) ? ex18.val : ex18) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right9;
		try {
			right9 = true;
		} catch( ex19 ) {
			haxe_CallStack.lastException = ex19;
			right9 = "exception: " + Std.string(((ex19) instanceof js__$Boot_HaxeError) ? ex19.val : ex19) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left9,right9)) {
			utest_Assert.pass("Matrix5x5.hx:365 [OK] ({\nvar a = Matrix5x5.unit;\na + a == new Matrix5x5( { a: 2., b: 0., c: 0., d: 0., e: 0.\n, f: 0., g: 2., h: 0., i: 0., j: 0.\n, k: 0., l: 0., m: 2., n: 0., o: 0.\n, p: 0., q: 0., r: 0., s: 2., t: 0.\n, u: 0., v: 0., w: 0., x: 0., y: 2. } ); }) == true",{ lineNumber : 365, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix5x5.unit;\na + a == new Matrix5x5( { a: 2., b: 0., c: 0., d: 0., e: 0.\n, f: 0., g: 2., h: 0., i: 0., j: 0.\n, k: 0., l: 0., m: 2., n: 0., o: 0.\n, p: 0., q: 0., r: 0., s: 2., t: 0.\n, u: 0., v: 0., w: 0., x: 0., y: 2. } ); }) == true --> Left side `" + Std.string(left9) + "` does not equal `" + Std.string(right9) + "`.",{ lineNumber : 365, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		}
		var left10;
		try {
			var this25 = new geom_structure_Mat5x5(1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.);
			var a10 = this25;
			var this26 = new geom_structure_Mat5x5(a10.a - a10.a,a10.b - a10.b,a10.c - a10.c,a10.d - a10.d,a10.e - a10.e,a10.f - a10.f,a10.g - a10.g,a10.h - a10.h,a10.i - a10.i,a10.j - a10.j,a10.k - a10.k,a10.l - a10.l,a10.m - a10.m,a10.n - a10.n,a10.o - a10.o,a10.p - a10.p,a10.q - a10.q,a10.r - a10.r,a10.s - a10.s,a10.t - a10.t,a10.u - a10.u,a10.v - a10.v,a10.w - a10.w,a10.x - a10.x,a10.y - a10.y);
			var a11 = this26;
			var this27 = new geom_structure_Mat5x5(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
			var b9 = this27;
			var delta8 = 0.0000001;
			left10 = !(Math.abs(a11.a - b9.a) >= delta8 || Math.abs(a11.b - b9.b) >= delta8 || Math.abs(a11.c - b9.c) >= delta8 || Math.abs(a11.d - b9.d) >= delta8 || Math.abs(a11.e - b9.e) >= delta8 || Math.abs(a11.f - b9.f) >= delta8 || Math.abs(a11.g - b9.g) >= delta8 || Math.abs(a11.h - b9.h) >= delta8 || Math.abs(a11.i - b9.i) >= delta8 || Math.abs(a11.j - b9.j) >= delta8 || Math.abs(a11.k - b9.k) >= delta8 || Math.abs(a11.l - b9.l) >= delta8 || Math.abs(a11.m - b9.m) >= delta8 || Math.abs(a11.n - b9.n) >= delta8 || Math.abs(a11.o - b9.o) >= delta8 || Math.abs(a11.p - b9.p) >= delta8 || Math.abs(a11.q - b9.q) >= delta8 || Math.abs(a11.r - b9.r) >= delta8 || Math.abs(a11.s - b9.s) >= delta8 || Math.abs(a11.t - b9.t) >= delta8 || Math.abs(a11.u - b9.u) >= delta8 || Math.abs(a11.v - b9.v) >= delta8 || Math.abs(a11.w - b9.w) >= delta8 || Math.abs(a11.x - b9.x) >= delta8 || Math.abs(a11.y - b9.y) >= delta8);
		} catch( ex20 ) {
			haxe_CallStack.lastException = ex20;
			left10 = "exception: " + Std.string(((ex20) instanceof js__$Boot_HaxeError) ? ex20.val : ex20) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right10;
		try {
			right10 = true;
		} catch( ex21 ) {
			haxe_CallStack.lastException = ex21;
			right10 = "exception: " + Std.string(((ex21) instanceof js__$Boot_HaxeError) ? ex21.val : ex21) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left10,right10)) {
			utest_Assert.pass("Matrix5x5.hx:385 [OK] ({\nvar a = Matrix5x5.unit;\na - a == Matrix5x5.zero; }) == true",{ lineNumber : 385, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Matrix5x5.unit;\na - a == Matrix5x5.zero; }) == true --> Left side `" + Std.string(left10) + "` does not equal `" + Std.string(right10) + "`.",{ lineNumber : 385, fileName : "src/geom/matrix/Matrix5x5.hx", className : "", methodName : ""});
		}
	}
	,testQuaternion_1: function() {
		var left;
		try {
			var this1 = new geom_structure_Mat1x4(0.,0.,0.,0.);
			left = this1;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			var this2 = new geom_structure_Mat1x4(0.,0.,0.,0.);
			right = this2;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("Quaternion.hx:28 [OK] Quaternion.zero == new Quaternion({ x: 0., y: 0., z: 0., w: 0. })",{ lineNumber : 28, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Quaternion.zero == new Quaternion({ x: 0., y: 0., z: 0., w: 0. }) --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 28, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left1;
		try {
			var this3 = new geom_structure_Mat1x4(0.,0.,0.,1.);
			left1 = this3;
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			var this4 = new geom_structure_Mat1x4(0.,0.,0.,1.);
			right1 = this4;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left1,right1)) {
			utest_Assert.pass("Quaternion.hx:38 [OK] Quaternion.zeroNormal == new Quaternion({ x: 0., y: 0., z: 0., w: 1. })",{ lineNumber : 38, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Quaternion.zeroNormal == new Quaternion({ x: 0., y: 0., z: 0., w: 1. }) --> Left side `" + Std.string(left1) + "` does not equal `" + Std.string(right1) + "`.",{ lineNumber : 38, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left2;
		try {
			var this5 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			left2 = this5;
		} catch( ex4 ) {
			haxe_CallStack.lastException = ex4;
			left2 = "exception: " + Std.string(((ex4) instanceof js__$Boot_HaxeError) ? ex4.val : ex4) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right2;
		try {
			var this6 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			right2 = this6;
		} catch( ex5 ) {
			haxe_CallStack.lastException = ex5;
			right2 = "exception: " + Std.string(((ex5) instanceof js__$Boot_HaxeError) ? ex5.val : ex5) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left2,right2)) {
			utest_Assert.pass("Quaternion.hx:48 [OK] Quaternion.unit == new Quaternion({ x: 1., y: 1., z: 1., w: 1. })",{ lineNumber : 48, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("Quaternion.unit == new Quaternion({ x: 1., y: 1., z: 1., w: 1. }) --> Left side `" + Std.string(left2) + "` does not equal `" + Std.string(right2) + "`.",{ lineNumber : 48, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left3;
		try {
			var this7 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var q = this7;
			var this8 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var this9 = this8;
			var currentLength = Math.sqrt(this9.x * this9.x + this9.y * this9.y + this9.z * this9.z + this9.w * this9.w);
			if(currentLength != 0.) {
				var mul = 1. / currentLength;
				this9.x *= mul;
				this9.y *= mul;
				this9.z *= mul;
				this9.w *= mul;
				var a = this9.x * this9.x + this9.y * this9.y + this9.z * this9.z + this9.w * this9.w;
			}
			var a1 = this9;
			var currentLength1 = Math.sqrt(q.x * q.x + q.y * q.y + q.z * q.z + q.w * q.w);
			if(currentLength1 != 0.) {
				var mul1 = 1. / currentLength1;
				q.x *= mul1;
				q.y *= mul1;
				q.z *= mul1;
				q.w *= mul1;
				var b = q.x * q.x + q.y * q.y + q.z * q.z + q.w * q.w;
			}
			var b1 = q;
			var delta = 0.0000001;
			left3 = !(Math.abs(a1.x - b1.x) >= delta || Math.abs(a1.y - b1.y) >= delta || Math.abs(a1.z - b1.z) >= delta || Math.abs(a1.w - b1.w) >= delta);
		} catch( ex6 ) {
			haxe_CallStack.lastException = ex6;
			left3 = "exception: " + Std.string(((ex6) instanceof js__$Boot_HaxeError) ? ex6.val : ex6) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right3;
		try {
			right3 = true;
		} catch( ex7 ) {
			haxe_CallStack.lastException = ex7;
			right3 = "exception: " + Std.string(((ex7) instanceof js__$Boot_HaxeError) ? ex7.val : ex7) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left3,right3)) {
			utest_Assert.pass("Quaternion.hx:58 [OK] ({\nvar q = new Quaternion( { x: 1., y: 1., z: 1., w: 1. } );\nQuaternion.unitNormal == q.normalize();\n}) == true",{ lineNumber : 58, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar q = new Quaternion( { x: 1., y: 1., z: 1., w: 1. } );\nQuaternion.unitNormal == q.normalize();\n}) == true --> Left side `" + Std.string(left3) + "` does not equal `" + Std.string(right3) + "`.",{ lineNumber : 58, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left4;
		try {
			var this10 = new geom_structure_Mat1x4(0.,0.,0.,0.);
			var out = this10;
			out.x = 0.;
			out.y = 0.;
			out.z = 0.;
			out.w = 1.;
			var a2 = out;
			var this11 = new geom_structure_Mat1x4(0.,0.,0.,1.);
			var b2 = this11;
			var delta1 = 0.0000001;
			left4 = !(Math.abs(a2.x - b2.x) >= delta1 || Math.abs(a2.y - b2.y) >= delta1 || Math.abs(a2.z - b2.z) >= delta1 || Math.abs(a2.w - b2.w) >= delta1);
		} catch( ex8 ) {
			haxe_CallStack.lastException = ex8;
			left4 = "exception: " + Std.string(((ex8) instanceof js__$Boot_HaxeError) ? ex8.val : ex8) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right4;
		try {
			right4 = true;
		} catch( ex9 ) {
			haxe_CallStack.lastException = ex9;
			right4 = "exception: " + Std.string(((ex9) instanceof js__$Boot_HaxeError) ? ex9.val : ex9) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left4,right4)) {
			utest_Assert.pass("Quaternion.hx:170 [OK] ({\nvar a = Quaternion.identity( Quaternion.zero );\nvar b = Quaternion.zeroNormal;\na == b; }) == true",{ lineNumber : 170, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Quaternion.identity( Quaternion.zero );\nvar b = Quaternion.zeroNormal;\na == b; }) == true --> Left side `" + Std.string(left4) + "` does not equal `" + Std.string(right4) + "`.",{ lineNumber : 170, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left5;
		try {
			var this12 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a3 = this12;
			var this13 = new geom_structure_Mat1x4(0.,0.,0.,0.);
			var b3 = this13;
			b3.x = a3.x;
			b3.y = a3.y;
			b3.z = a3.z;
			b3.w = a3.w;
			var c = b3;
			var delta2 = 0.0000001;
			left5 = !(Math.abs(a3.x - c.x) >= delta2 || Math.abs(a3.y - c.y) >= delta2 || Math.abs(a3.z - c.z) >= delta2 || Math.abs(a3.w - c.w) >= delta2);
		} catch( ex10 ) {
			haxe_CallStack.lastException = ex10;
			left5 = "exception: " + Std.string(((ex10) instanceof js__$Boot_HaxeError) ? ex10.val : ex10) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right5;
		try {
			right5 = true;
		} catch( ex11 ) {
			haxe_CallStack.lastException = ex11;
			right5 = "exception: " + Std.string(((ex11) instanceof js__$Boot_HaxeError) ? ex11.val : ex11) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left5,right5)) {
			utest_Assert.pass("Quaternion.hx:190 [OK] ({\nvar a = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\nvar b = Quaternion.zero;\nvar c = Quaternion.copy( a, b );\na == c; }) == true",{ lineNumber : 190, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\nvar b = Quaternion.zero;\nvar c = Quaternion.copy( a, b );\na == c; }) == true --> Left side `" + Std.string(left5) + "` does not equal `" + Std.string(right5) + "`.",{ lineNumber : 190, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left6;
		try {
			var this14 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a4 = this14;
			var this15 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var b4 = this15;
			var delta3 = 0.0000001;
			left6 = !(Math.abs(a4.x - b4.x) >= delta3 || Math.abs(a4.y - b4.y) >= delta3 || Math.abs(a4.z - b4.z) >= delta3 || Math.abs(a4.w - b4.w) >= delta3);
		} catch( ex12 ) {
			haxe_CallStack.lastException = ex12;
			left6 = "exception: " + Std.string(((ex12) instanceof js__$Boot_HaxeError) ? ex12.val : ex12) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right6;
		try {
			right6 = true;
		} catch( ex13 ) {
			haxe_CallStack.lastException = ex13;
			right6 = "exception: " + Std.string(((ex13) instanceof js__$Boot_HaxeError) ? ex13.val : ex13) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left6,right6)) {
			utest_Assert.pass("Quaternion.hx:238 [OK] ({\nvar a = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\nvar b = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\na == b; }) == true",{ lineNumber : 238, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\nvar b = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\na == b; }) == true --> Left side `" + Std.string(left6) + "` does not equal `" + Std.string(right6) + "`.",{ lineNumber : 238, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left7;
		try {
			var this16 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a5 = this16;
			var this17 = new geom_structure_Mat1x4(1.,2.,4.,1.);
			var b5 = this17;
			var delta4 = 0.0000001;
			left7 = !(!(Math.abs(a5.x - b5.x) >= delta4 || Math.abs(a5.y - b5.y) >= delta4 || Math.abs(a5.z - b5.z) >= delta4 || Math.abs(a5.w - b5.w) >= delta4));
		} catch( ex14 ) {
			haxe_CallStack.lastException = ex14;
			left7 = "exception: " + Std.string(((ex14) instanceof js__$Boot_HaxeError) ? ex14.val : ex14) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right7;
		try {
			right7 = true;
		} catch( ex15 ) {
			haxe_CallStack.lastException = ex15;
			right7 = "exception: " + Std.string(((ex15) instanceof js__$Boot_HaxeError) ? ex15.val : ex15) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left7,right7)) {
			utest_Assert.pass("Quaternion.hx:272 [OK] ({\nvar a = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\nvar b = new Quaternion({ x: 1., y: 2., z: 4., w: 1. });\na != b; }) == true",{ lineNumber : 272, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\nvar b = new Quaternion({ x: 1., y: 2., z: 4., w: 1. });\na != b; }) == true --> Left side `" + Std.string(left7) + "` does not equal `" + Std.string(right7) + "`.",{ lineNumber : 272, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left8;
		try {
			var this18 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a6 = this18;
			var this19 = new geom_structure_Mat1x4(a6.x + a6.x,a6.y + a6.y,a6.z + a6.z,a6.w + a6.w);
			var a7 = this19;
			var this20 = new geom_structure_Mat1x4(2.,2.,2.,2.);
			var b6 = this20;
			var delta5 = 0.0000001;
			left8 = !(Math.abs(a7.x - b6.x) >= delta5 || Math.abs(a7.y - b6.y) >= delta5 || Math.abs(a7.z - b6.z) >= delta5 || Math.abs(a7.w - b6.w) >= delta5);
		} catch( ex16 ) {
			haxe_CallStack.lastException = ex16;
			left8 = "exception: " + Std.string(((ex16) instanceof js__$Boot_HaxeError) ? ex16.val : ex16) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right8;
		try {
			right8 = true;
		} catch( ex17 ) {
			haxe_CallStack.lastException = ex17;
			right8 = "exception: " + Std.string(((ex17) instanceof js__$Boot_HaxeError) ? ex17.val : ex17) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left8,right8)) {
			utest_Assert.pass("Quaternion.hx:289 [OK] ({\nvar a = Quaternion.unit;\na + a == new Quaternion({ x: 2., y: 2., z: 2., w: 2. });\n}) == true",{ lineNumber : 289, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Quaternion.unit;\na + a == new Quaternion({ x: 2., y: 2., z: 2., w: 2. });\n}) == true --> Left side `" + Std.string(left8) + "` does not equal `" + Std.string(right8) + "`.",{ lineNumber : 289, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left9;
		try {
			var this21 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a8 = this21;
			var this22 = new geom_structure_Mat1x4(a8.x - a8.x,a8.y - a8.y,a8.z - a8.z,a8.w - a8.w);
			var a9 = this22;
			var this23 = new geom_structure_Mat1x4(0.,0.,0.,0.);
			var b7 = this23;
			var delta6 = 0.0000001;
			left9 = !(Math.abs(a9.x - b7.x) >= delta6 || Math.abs(a9.y - b7.y) >= delta6 || Math.abs(a9.z - b7.z) >= delta6 || Math.abs(a9.w - b7.w) >= delta6);
		} catch( ex18 ) {
			haxe_CallStack.lastException = ex18;
			left9 = "exception: " + Std.string(((ex18) instanceof js__$Boot_HaxeError) ? ex18.val : ex18) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right9;
		try {
			right9 = true;
		} catch( ex19 ) {
			haxe_CallStack.lastException = ex19;
			right9 = "exception: " + Std.string(((ex19) instanceof js__$Boot_HaxeError) ? ex19.val : ex19) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left9,right9)) {
			utest_Assert.pass("Quaternion.hx:301 [OK] ({\nvar a = Quaternion.unit;\na - a == Quaternion.zero;\n}) == true",{ lineNumber : 301, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Quaternion.unit;\na - a == Quaternion.zero;\n}) == true --> Left side `" + Std.string(left9) + "` does not equal `" + Std.string(right9) + "`.",{ lineNumber : 301, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left10;
		try {
			var this24 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a10 = this24;
			var this25 = new geom_structure_Mat1x4(-a10.x,-a10.y,-a10.z,a10.w);
			var b8 = this25;
			var this26 = new geom_structure_Mat1x4(-1.,-2.,-3.,1.);
			var b9 = this26;
			var delta7 = 0.0000001;
			left10 = !(Math.abs(b8.x - b9.x) >= delta7 || Math.abs(b8.y - b9.y) >= delta7 || Math.abs(b8.z - b9.z) >= delta7 || Math.abs(b8.w - b9.w) >= delta7);
		} catch( ex20 ) {
			haxe_CallStack.lastException = ex20;
			left10 = "exception: " + Std.string(((ex20) instanceof js__$Boot_HaxeError) ? ex20.val : ex20) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right10;
		try {
			right10 = true;
		} catch( ex21 ) {
			haxe_CallStack.lastException = ex21;
			right10 = "exception: " + Std.string(((ex21) instanceof js__$Boot_HaxeError) ? ex21.val : ex21) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left10,right10)) {
			utest_Assert.pass("Quaternion.hx:325 [OK] ({\nvar a = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\nvar b = ~a;\nb == new Quaternion({ x: -1., y: -2., z: -3., w: 1. }); }) == true",{ lineNumber : 325, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\nvar b = ~a;\nb == new Quaternion({ x: -1., y: -2., z: -3., w: 1. }); }) == true --> Left side `" + Std.string(left10) + "` does not equal `" + Std.string(right10) + "`.",{ lineNumber : 325, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left11;
		try {
			var this27 = new geom_structure_Mat1x4(1.,2.,3.,1.);
			var a11 = this27;
			var this28 = new geom_structure_Mat1x4(-a11.x,-a11.y,-a11.z,-a11.w);
			var b10 = this28;
			var this29 = new geom_structure_Mat1x4(-1.,-2.,-3.,-1.);
			var b11 = this29;
			var delta8 = 0.0000001;
			left11 = !(Math.abs(b10.x - b11.x) >= delta8 || Math.abs(b10.y - b11.y) >= delta8 || Math.abs(b10.z - b11.z) >= delta8 || Math.abs(b10.w - b11.w) >= delta8);
		} catch( ex22 ) {
			haxe_CallStack.lastException = ex22;
			left11 = "exception: " + Std.string(((ex22) instanceof js__$Boot_HaxeError) ? ex22.val : ex22) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right11;
		try {
			right11 = true;
		} catch( ex23 ) {
			haxe_CallStack.lastException = ex23;
			right11 = "exception: " + Std.string(((ex23) instanceof js__$Boot_HaxeError) ? ex23.val : ex23) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left11,right11)) {
			utest_Assert.pass("Quaternion.hx:341 [OK] ({\nvar a = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\nvar b = -a;\nb == new Quaternion({ x: -1., y: -2., z: -3., w: -1. }); }) == true",{ lineNumber : 341, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = new Quaternion({ x: 1., y: 2., z: 3., w: 1. });\nvar b = -a;\nb == new Quaternion({ x: -1., y: -2., z: -3., w: -1. }); }) == true --> Left side `" + Std.string(left11) + "` does not equal `" + Std.string(right11) + "`.",{ lineNumber : 341, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left12;
		try {
			var this30 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a12 = this30;
			var b12 = [1.,1.,1.,1.].slice(0);
			var this31 = new geom_structure_Mat1x4(b12[0],b12[1],b12[2],b12[3]);
			var c1 = this31;
			var this32 = new geom_structure_Mat1x4(b12[0],b12[1],b12[2],b12[3]);
			var b13 = this32;
			var delta9 = 0.0000001;
			left12 = !(Math.abs(a12.x - b13.x) >= delta9 || Math.abs(a12.y - b13.y) >= delta9 || Math.abs(a12.z - b13.z) >= delta9 || Math.abs(a12.w - b13.w) >= delta9);
		} catch( ex24 ) {
			haxe_CallStack.lastException = ex24;
			left12 = "exception: " + Std.string(((ex24) instanceof js__$Boot_HaxeError) ? ex24.val : ex24) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right12;
		try {
			right12 = true;
		} catch( ex25 ) {
			haxe_CallStack.lastException = ex25;
			right12 = "exception: " + Std.string(((ex25) instanceof js__$Boot_HaxeError) ? ex25.val : ex25) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left12,right12)) {
			utest_Assert.pass("Quaternion.hx:551 [OK] ({\nvar a = Quaternion.unit;\nvar b = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1., 1. ]);\nvar c: Quaternion = b;\na == b; }) == true",{ lineNumber : 551, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Quaternion.unit;\nvar b = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1., 1. ]);\nvar c: Quaternion = b;\na == b; }) == true --> Left side `" + Std.string(left12) + "` does not equal `" + Std.string(right12) + "`.",{ lineNumber : 551, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left13;
		try {
			var this33 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a13 = this33;
			var this34 = new Array(4);
			var vec = this34;
			vec[0] = a13.x;
			vec[1] = a13.y;
			vec[2] = a13.z;
			vec[3] = a13.w;
			var b14 = vec;
			var c2 = [1.,1.,1.,1.].slice(0);
			left13 = equals_Equal.equals(b14,c2);
		} catch( ex26 ) {
			haxe_CallStack.lastException = ex26;
			left13 = "exception: " + Std.string(((ex26) instanceof js__$Boot_HaxeError) ? ex26.val : ex26) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right13;
		try {
			right13 = true;
		} catch( ex27 ) {
			haxe_CallStack.lastException = ex27;
			right13 = "exception: " + Std.string(((ex27) instanceof js__$Boot_HaxeError) ? ex27.val : ex27) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left13,right13)) {
			utest_Assert.pass("Quaternion.hx:564 [OK] ({\nvar a = Quaternion.unit;\nvar b: haxe.ds.Vector<Float> = a;\nvar c = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1., 1. ]);\nEqual.equals( b, c ); }) == true",{ lineNumber : 564, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Quaternion.unit;\nvar b: haxe.ds.Vector<Float> = a;\nvar c = haxe.ds.Vector.fromArrayCopy([ 1., 1., 1., 1. ]);\nEqual.equals( b, c ); }) == true --> Left side `" + Std.string(left13) + "` does not equal `" + Std.string(right13) + "`.",{ lineNumber : 564, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left14;
		try {
			var this35 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a14 = this35;
			var arr_0 = 1.;
			var arr_1 = 1.;
			var arr_2 = 1.;
			var arr_3 = 1.;
			var this36 = new geom_structure_Mat1x4(arr_0,arr_1,arr_2,arr_3);
			var b15 = this36;
			left14 = equals_Equal.equals(a14,b15);
		} catch( ex28 ) {
			haxe_CallStack.lastException = ex28;
			left14 = "exception: " + Std.string(((ex28) instanceof js__$Boot_HaxeError) ? ex28.val : ex28) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right14;
		try {
			right14 = true;
		} catch( ex29 ) {
			haxe_CallStack.lastException = ex29;
			right14 = "exception: " + Std.string(((ex29) instanceof js__$Boot_HaxeError) ? ex29.val : ex29) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left14,right14)) {
			utest_Assert.pass("Quaternion.hx:583 [OK] ({\nvar a = Quaternion.unit;\nvar b: Quaternion = [ 1., 1., 1., 1. ];\nEqual.equals( a, b ); }) == true",{ lineNumber : 583, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Quaternion.unit;\nvar b: Quaternion = [ 1., 1., 1., 1. ];\nEqual.equals( a, b ); }) == true --> Left side `" + Std.string(left14) + "` does not equal `" + Std.string(right14) + "`.",{ lineNumber : 583, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
		var left15;
		try {
			var this37 = new geom_structure_Mat1x4(1.,1.,1.,1.);
			var a15 = this37;
			var b16 = [a15.x,a15.y,a15.z,a15.w];
			left15 = equals_Equal.equals(b16,[1.,1.,1.,1.]);
		} catch( ex30 ) {
			haxe_CallStack.lastException = ex30;
			left15 = "exception: " + Std.string(((ex30) instanceof js__$Boot_HaxeError) ? ex30.val : ex30) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right15;
		try {
			right15 = true;
		} catch( ex31 ) {
			haxe_CallStack.lastException = ex31;
			right15 = "exception: " + Std.string(((ex31) instanceof js__$Boot_HaxeError) ? ex31.val : ex31) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left15,right15)) {
			utest_Assert.pass("Quaternion.hx:595 [OK] ({\nvar a = Quaternion.unit;\nvar b: Array<Float> = a;\nEqual.equals( b, [ 1., 1., 1., 1. ] ); }) == true",{ lineNumber : 595, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar a = Quaternion.unit;\nvar b: Array<Float> = a;\nEqual.equals( b, [ 1., 1., 1., 1. ] ); }) == true --> Left side `" + Std.string(left15) + "` does not equal `" + Std.string(right15) + "`.",{ lineNumber : 595, fileName : "src/geom/matrix/Quaternion.hx", className : "", methodName : ""});
		}
	}
	,testFloat32Flat_1: function() {
		var left;
		try {
			var this1 = new Float32Array(4);
			var this2 = this1;
			this2[0] = 0.;
			this2[1] = 0.;
			var ff = this2;
			ff[2] = 1.;
			left = ff[2] == 1.;
		} catch( ex ) {
			haxe_CallStack.lastException = ex;
			left = "exception: " + Std.string(((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right;
		try {
			right = true;
		} catch( ex1 ) {
			haxe_CallStack.lastException = ex1;
			right = "exception: " + Std.string(((ex1) instanceof js__$Boot_HaxeError) ? ex1.val : ex1) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left,right)) {
			utest_Assert.pass("Float32Flat.hx:10 [OK] ({\nvar ff = new Float32Flat(2);\nff[0] = 1.;\nff[0] == 1.; }) == true",{ lineNumber : 10, fileName : "src/geom/flat/f32/Float32Flat.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar ff = new Float32Flat(2);\nff[0] = 1.;\nff[0] == 1.; }) == true --> Left side `" + Std.string(left) + "` does not equal `" + Std.string(right) + "`.",{ lineNumber : 10, fileName : "src/geom/flat/f32/Float32Flat.hx", className : "", methodName : ""});
		}
		var left1;
		try {
			var this3 = new Float32Array(4);
			var this4 = this3;
			this4[0] = 0.;
			this4[1] = 0.;
			var ff1 = this4;
			ff1[2] = 1.;
			left1 = ff1[2] == 1.;
		} catch( ex2 ) {
			haxe_CallStack.lastException = ex2;
			left1 = "exception: " + Std.string(((ex2) instanceof js__$Boot_HaxeError) ? ex2.val : ex2) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		var right1;
		try {
			right1 = true;
		} catch( ex3 ) {
			haxe_CallStack.lastException = ex3;
			right1 = "exception: " + Std.string(((ex3) instanceof js__$Boot_HaxeError) ? ex3.val : ex3) + hx_doctest_internal_DocTestUtils.exceptionStackAsString();
		}
		if(hx_doctest_internal_DocTestUtils.deepEquals(left1,right1)) {
			utest_Assert.pass("Float32Flat.hx:23 [OK] ({\nvar ff = new Float32Flat(2);\nff[0] = 1.;\nff[0] == 1.; }) == true",{ lineNumber : 23, fileName : "src/geom/flat/f32/Float32Flat.hx", className : "", methodName : ""});
		} else {
			utest_Assert.fail("({\nvar ff = new Float32Flat(2);\nff[0] = 1.;\nff[0] == 1.; }) == true --> Left side `" + Std.string(left1) + "` does not equal `" + Std.string(right1) + "`.",{ lineNumber : 23, fileName : "src/geom/flat/f32/Float32Flat.hx", className : "", methodName : ""});
		}
	}
	,__initializeUtest__: function() {
		var _gthis = this;
		var init = utest_Test.prototype.__initializeUtest__.call(this);
		init.tests.push({ name : "testMultiVector2_1", execute : function() {
			_gthis.testMultiVector2_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testMultiVector3_1", execute : function() {
			_gthis.testMultiVector3_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testComplex_1", execute : function() {
			_gthis.testComplex_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testDualQuaternion_1", execute : function() {
			_gthis.testDualQuaternion_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testMatrix1x2_1", execute : function() {
			_gthis.testMatrix1x2_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testMatrix1x3_1", execute : function() {
			_gthis.testMatrix1x3_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testMatrix1x4_1", execute : function() {
			_gthis.testMatrix1x4_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testMatrix2x2_1", execute : function() {
			_gthis.testMatrix2x2_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testMatrix3x3_1", execute : function() {
			_gthis.testMatrix3x3_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testMatrix4x3_1", execute : function() {
			_gthis.testMatrix4x3_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testMatrix4x4_1", execute : function() {
			_gthis.testMatrix4x4_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testMatrix5x5_1", execute : function() {
			_gthis.testMatrix5x5_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testQuaternion_1", execute : function() {
			_gthis.testQuaternion_1();
			return utest_Async.getResolved();
		}});
		init.tests.push({ name : "testFloat32Flat_1", execute : function() {
			_gthis.testFloat32Flat_1();
			return utest_Async.getResolved();
		}});
		return init;
	}
	,__class__: geom_GeomTest
});
var geom_Numerical = function() { };
geom_Numerical.__name__ = "geom.Numerical";
geom_Numerical.clz32 = function(v) {
	var asUint = v >>> 0;
	if(asUint == 0.) {
		return 32;
	}
	var v1 = 0.69314718055994530941723212145817656807550013436025;
	var out = Math.floor(Math.log(asUint) / v1);
	return 31 - out;
};
geom_Numerical.maxInt2 = function(a,b) {
	if(a > b) {
		return a;
	} else {
		return b;
	}
};
geom_Numerical.minInt2 = function(a,b,c) {
	if(a < b) {
		return a;
	} else {
		return b;
	}
};
geom_Numerical.minInt3 = function(a,b,c) {
	if(a < b) {
		if(a < c) {
			return a;
		} else {
			return c;
		}
	} else if(b < c) {
		return b;
	} else {
		return c;
	}
};
geom_Numerical.maxInt3 = function(a,b,c) {
	if(a > b) {
		if(a > c) {
			return a;
		} else {
			return c;
		}
	} else if(b > c) {
		return b;
	} else {
		return c;
	}
};
var geom_constraints__$Interval_Interval_$Impl_$ = {};
geom_constraints__$Interval_Interval_$Impl_$.__name__ = "geom.constraints._Interval.Interval_Impl_";
geom_constraints__$Interval_Interval_$Impl_$._new = function(interval) {
	var this1 = interval;
	return this1;
};
geom_constraints__$Interval_Interval_$Impl_$.valid = function(this1) {
	return this1.u > this1.l;
};
geom_constraints__$Interval_Interval_$Impl_$.fix = function(this1) {
	if(!(this1.u > this1.l)) {
		var l = this1.u;
		this1.u = this1.l;
		this1.l = l;
	}
};
geom_constraints__$Interval_Interval_$Impl_$.clampClosed = function(this1,v) {
	if(v <= this1.l) {
		return this1.l;
	} else if(v >= this1.u) {
		return this1.u;
	} else {
		return v;
	}
};
geom_constraints__$Interval_Interval_$Impl_$.clampOpen = function(this1,v) {
	if(v < this1.l) {
		return this1.l;
	} else if(v > this1.u) {
		return this1.u;
	} else {
		return v;
	}
};
geom_constraints__$Interval_Interval_$Impl_$.close = function(this1,v,delta) {
	if(delta == null) {
		delta = 0.00001;
	}
	var interval = new geom_structure_Range(this1.u + delta,this1.l - delta);
	return v == (v <= interval.l ? interval.l : v >= interval.u ? interval.u : v);
};
geom_constraints__$Interval_Interval_$Impl_$.above = function(this1,v) {
	return v > this1.u;
};
geom_constraints__$Interval_Interval_$Impl_$.below = function(this1,v) {
	return v < this1.l;
};
geom_constraints__$Interval_Interval_$Impl_$.inClampOpen = function(this1,v) {
	return v == (v < this1.l ? this1.l : v > this1.u ? this1.u : v);
};
geom_constraints__$Interval_Interval_$Impl_$.inClampClosed = function(this1,v) {
	return v == (v <= this1.l ? this1.l : v >= this1.u ? this1.u : v);
};
geom_constraints__$Interval_Interval_$Impl_$.unit = function(v) {
	var interval = new geom_structure_Range(1.,0.);
	if(v <= interval.l) {
		return interval.l;
	} else if(v >= interval.u) {
		return interval.u;
	} else {
		return v;
	}
};
geom_constraints__$Interval_Interval_$Impl_$.unitFloat = function(v) {
	var interval = new geom_structure_Range(1.,-1.);
	if(v <= interval.l) {
		return interval.l;
	} else if(v >= interval.u) {
		return interval.u;
	} else {
		return v;
	}
};
geom_constraints__$Interval_Interval_$Impl_$.unitNegative = function(v) {
	var interval = new geom_structure_Range(1.,-1.);
	if(v <= interval.l) {
		return interval.l;
	} else if(v >= interval.u) {
		return interval.u;
	} else {
		return v;
	}
};
geom_constraints__$Interval_Interval_$Impl_$.inUnitFloat = function(v) {
	var interval = new geom_structure_Range(1.,-1.);
	return v == (v <= interval.l ? interval.l : v >= interval.u ? interval.u : v);
};
geom_constraints__$Interval_Interval_$Impl_$.random = function(this1) {
	return Math.random() * (this1.u - this1.l) + this1.l;
};
geom_constraints__$Interval_Interval_$Impl_$.randomInt = function(this1) {
	return Math.round(Math.random() * (this1.u - this1.l) + this1.l);
};
var geom_constraints__$Interval_RadianInterval_$Impl_$ = {};
geom_constraints__$Interval_RadianInterval_$Impl_$.__name__ = "geom.constraints._Interval.RadianInterval_Impl_";
geom_constraints__$Interval_RadianInterval_$Impl_$._new = function() {
	var this1 = new geom_structure_Range(-Math.PI,Math.PI);
	return this1;
};
geom_constraints__$Interval_RadianInterval_$Impl_$.wrap = function(this1,v) {
	if(v == (v <= this1.l ? this1.l : v >= this1.u ? this1.u : v)) {
		return v;
	} else {
		return v - Math.PI * 2 * Math.floor((v + Math.PI) / (Math.PI * 2));
	}
};
geom_constraints__$Interval_RadianInterval_$Impl_$.inPiWrap = function(v) {
	var this1 = new geom_structure_Range(-Math.PI,Math.PI);
	var this2 = this1;
	return v == (v <= this2.l ? this2.l : v >= this2.u ? this2.u : v);
};
geom_constraints__$Interval_RadianInterval_$Impl_$.wrapRadian = function(v) {
	var this1 = new geom_structure_Range(-Math.PI,Math.PI);
	var this2 = this1;
	if(v == (v <= this2.l ? this2.l : v >= this2.u ? this2.u : v)) {
		return v;
	} else {
		return v - Math.PI * 2 * Math.floor((v + Math.PI) / (Math.PI * 2));
	}
};
var geom_constraints_Precision = function() { };
geom_constraints_Precision.__name__ = "geom.constraints.Precision";
geom_constraints_Precision.floatToStringPrecision = function(n,prec) {
	if(n == 0) {
		var _g = [];
		var _g1 = 0;
		var _g2 = prec;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push("0");
		}
		return "0." + _g.join("");
	}
	var minusSign = n < 0.0;
	n = Math.abs(n);
	var intPart = Math.floor(n);
	var p = Math.pow(10,prec);
	var fracPart = Math.round(p * (n - intPart));
	var buf = new StringBuf();
	if(minusSign) {
		buf.addChar(45);
	}
	buf.add(intPart == null ? "null" : "" + intPart);
	if(fracPart == 0) {
		buf.addChar(46);
		var _g3 = 0;
		var _g11 = prec;
		while(_g3 < _g11) {
			var i1 = _g3++;
			buf.addChar(48);
		}
	} else {
		buf.addChar(46);
		p /= 10;
		var nZeros = 0;
		while(fracPart < p) {
			p /= 10;
			buf.addChar(48);
		}
		buf.add(fracPart);
	}
	return buf.toString();
};
geom_constraints_Precision.max4 = function(f0,f1,f2,f3) {
	return Math.round(Math.max(Math.max(Math.max(f0,f1),f2),f3));
};
geom_constraints_Precision.max3 = function(f0,f1,f2) {
	return Math.round(Math.max(Math.max(f0,f1),f2));
};
var geom_curve_ComplexTrig = function() { };
geom_curve_ComplexTrig.__name__ = "geom.curve.ComplexTrig";
geom_curve_ComplexTrig.sin = function(c) {
	if(c.y == 0 == true) {
		var this1 = new geom_structure_Mat1x2(Math.sin(c.x),0);
		return this1;
	} else {
		var this2 = new geom_structure_Mat1x2(Math.sin(c.x) * geom_curve_Hyperbolic.cosh(c.y),Math.cos(c.x) * geom_curve_Hyperbolic.sinh(c.y));
		return this2;
	}
};
geom_curve_ComplexTrig.cos = function(c) {
	if(c.y == 0 == true) {
		var this1 = new geom_structure_Mat1x2(Math.cos(c.x),0);
		return this1;
	} else {
		var this2 = new geom_structure_Mat1x2(Math.cos(c.x) * geom_curve_Hyperbolic.cosh(c.y),-Math.sin(c.x) * geom_curve_Hyperbolic.sinh(c.y));
		return this2;
	}
};
geom_curve_ComplexTrig.tan = function(c) {
	if(c.y == 0 == true) {
		var this1 = new geom_structure_Mat1x2(Math.tan(c.x),0);
		return this1;
	} else {
		var s = geom_curve_ComplexTrig.sin(c);
		var c1 = geom_curve_ComplexTrig.cos(c);
		var this2 = new geom_structure_Mat1x2(c1.x,-c1.y);
		var conj = this2;
		var this3 = new geom_structure_Mat1x2(s.x * conj.x - s.y * conj.y,s.x * conj.y + s.y * conj.x);
		var numr = this3;
		var this4 = new geom_structure_Mat1x2(c1.x * conj.x - c1.y * conj.y,c1.x * conj.y + c1.y * conj.x);
		var demr = this4;
		var dval = demr.x + demr.y;
		var this5 = new geom_structure_Mat1x2(numr.x / dval,numr.y / dval);
		return this5;
	}
};
geom_curve_ComplexTrig.sinh = function(c) {
	if(c.y == 0 == true) {
		var this1 = new geom_structure_Mat1x2(geom_curve_Hyperbolic.sinh(c.x),0);
		return this1;
	} else {
		var this2 = new geom_structure_Mat1x2(geom_curve_Hyperbolic.sinh(c.x) * Math.cos(c.y),geom_curve_Hyperbolic.cosh(c.x) * Math.sin(c.y));
		return this2;
	}
};
geom_curve_ComplexTrig.cosh = function(c) {
	if(c.y == 0 == true) {
		var this1 = new geom_structure_Mat1x2(geom_curve_Hyperbolic.cosh(c.x),0);
		return this1;
	} else {
		var this2 = new geom_structure_Mat1x2(geom_curve_Hyperbolic.cosh(c.x) * Math.cos(c.y),geom_curve_Hyperbolic.sinh(c.x) * Math.sin(c.y));
		return this2;
	}
};
geom_curve_ComplexTrig.tanh = function(c) {
	if(c.y == 0 == true) {
		var this1 = new geom_structure_Mat1x2(geom_curve_Hyperbolic.tanh(c.x),0);
		return this1;
	} else {
		var hx = geom_curve_Hyperbolic.tanh(c.x);
		var ty = Math.tan(c.y);
		var this2 = new geom_structure_Mat1x2(hx,ty);
		var n = this2;
		var this3 = new geom_structure_Mat1x2(1,hx * ty);
		var d = this3;
		var this4 = new geom_structure_Mat1x2(d.x,-d.y);
		var conj = this4;
		var this5 = new geom_structure_Mat1x2(n.x * conj.x - n.y * conj.y,n.x * conj.y + n.y * conj.x);
		var numr = this5;
		var this6 = new geom_structure_Mat1x2(d.x * conj.x - d.y * conj.y,d.x * conj.y + d.y * conj.x);
		var demr = this6;
		var dval = demr.x + demr.y;
		var this7 = new geom_structure_Mat1x2(numr.x / dval,numr.y / dval);
		return this7;
	}
};
var geom_curve_Hyperbolic = function() { };
geom_curve_Hyperbolic.__name__ = "geom.curve.Hyperbolic";
geom_curve_Hyperbolic.sinh = function(x) {
	var y = Math.exp(x);
	return (y - 1. / y) / 2.;
};
geom_curve_Hyperbolic.cosech = function(x) {
	return 1 / geom_curve_Hyperbolic.sinh(x);
};
geom_curve_Hyperbolic.sech = function(x) {
	return 1 / geom_curve_Hyperbolic.cosh(x);
};
geom_curve_Hyperbolic.cosh = function(x) {
	var y = Math.exp(x);
	return (y + 1. / y) / 2.;
};
geom_curve_Hyperbolic.coth = function(x) {
	return geom_curve_Hyperbolic.cosh(x) / geom_curve_Hyperbolic.sinh(x);
};
geom_curve_Hyperbolic.tanh = function(x) {
	var a = Math.exp(x);
	var b = Math.exp(-x);
	if(a == Infinity) {
		return 1.;
	} else if(b == Infinity) {
		return -1.;
	} else {
		return (a - b) / (a + b);
	}
};
geom_curve_Hyperbolic.acosh = function(x) {
	return Math.log(x + Math.sqrt(x * x - 1.));
};
geom_curve_Hyperbolic.asinh = function(x) {
	return Math.log(x + Math.sqrt(x * x + 1.));
};
geom_curve_Hyperbolic.atanh = function(x) {
	return Math.log((1. + x) / (1. - x)) / 2.;
};
var geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$ = {};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.__name__ = "geom.flat.f32._Float32Flat.Float32Flat_Impl_";
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.__properties__ = {set_pos:"set_pos",get_pos:"get_pos",set_index:"set_index",get_index:"get_index",set_size:"set_size",get_size:"get_size"};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.readItem = function(this1,k) {
	return this1[k + 2];
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.writeItem = function(this1,k,v) {
	this1[k + 2] = v;
	return v;
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$._new = function(len) {
	var this1 = new Float32Array(len + 2);
	var this2 = this1;
	this2[0] = 0.;
	this2[1] = 0.;
	return this2;
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.get_size = function(this1) {
	return Std.int(this1[1]);
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.set_size = function(this1,id) {
	var pos_ = id;
	this1[0] = pos_;
	if(this1[0] > this1[1] - 1) {
		this1[1] = this1[0];
	}
	return id;
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.get_index = function(this1) {
	return Std.int(this1[0]);
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.set_index = function(this1,id) {
	this1[0] = id;
	if(this1[0] > this1[1] - 1) {
		this1[1] = this1[0];
	}
	return id;
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.get_pos = function(this1) {
	return this1[0];
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.set_pos = function(this1,pos_) {
	this1[0] = pos_;
	if(this1[0] > this1[1] - 1) {
		this1[1] = this1[0];
	}
	return pos_;
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.updateLen = function(this1) {
	if(this1[0] > this1[1] - 1) {
		this1[1] = this1[0];
	}
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.hasNext = function(this1) {
	return this1[0] < geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.get_size(this1);
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.next = function(this1) {
	var pos_ = this1[0] + 1.;
	this1[0] = pos_;
	if(this1[0] > this1[1] - 1) {
		this1[1] = this1[0];
	}
	return this1[0];
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.increment = function(this1) {
	var pos_ = this1[0] + 1.;
	this1[0] = pos_;
	if(this1[0] > this1[1] - 1) {
		this1[1] = this1[0];
	}
	return this1[0];
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.toArray = function(this1) {
	return this1.subarray(2,geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.get_size(this1) + 2);
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.fromArray = function(arr) {
	var this1 = new Float32Array(arr.length + 2);
	var this2 = this1;
	this2[0] = 0.;
	this2[1] = 0.;
	var flat = this2;
	var l = arr.length;
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		flat[i + 2] = arr[i];
	}
	flat[0] = 0;
	flat[1] = l;
	return flat;
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.clone = function(this1) {
	var this2 = new Float32Array(this1.length - 2 + 2);
	var this3 = this2;
	this3[0] = 0.;
	this3[1] = 0.;
	var flat = this3;
	var arr = this1.subarray(2,geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.get_size(this1) + 2);
	var l = arr.length;
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		flat[i + 2] = arr[i];
	}
	flat[0] = 0;
	flat[1] = l;
	return flat;
};
geom_flat_f32__$Float32Flat_Float32Flat_$Impl_$.fill = function(this1,arr) {
	var l = arr.length;
	var _g = 0;
	var _g1 = l;
	while(_g < _g1) {
		var i = _g++;
		this1[i + 2] = arr[i];
	}
	this1[0] = 0;
	this1[1] = l;
};
var geom_ga__$MultiVector2_MultiVector2_$Impl_$ = {};
geom_ga__$MultiVector2_MultiVector2_$Impl_$.__name__ = "geom.ga._MultiVector2.MultiVector2_Impl_";
geom_ga__$MultiVector2_MultiVector2_$Impl_$.__properties__ = {get_nought:"get_nought",get_zero:"get_zero"};
geom_ga__$MultiVector2_MultiVector2_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom_ga__$MultiVector2_MultiVector2_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_MVec2(0.,0.,0.,0.);
	return this1;
};
geom_ga__$MultiVector2_MultiVector2_$Impl_$.get_nought = function(this1) {
	var this2 = new geom_structure_MVec2(0.,0.,0.,0.);
	return this2;
};
geom_ga__$MultiVector2_MultiVector2_$Impl_$.subtracting = function(a,b) {
	var this1 = new geom_structure_MVec2(a.s - b.s,a.x - b.x,a.y - b.y,a.xy - b.xy);
	return this1;
};
geom_ga__$MultiVector2_MultiVector2_$Impl_$.subtract = function(this1,b) {
	var this2 = new geom_structure_MVec2(this1.s - b.s,this1.x - b.x,this1.y - b.y,this1.xy - b.xy);
	return this2;
};
geom_ga__$MultiVector2_MultiVector2_$Impl_$.adding = function(a,b) {
	var this1 = new geom_structure_MVec2(a.s + b.s,a.x + b.x,a.y + b.y,a.xy + b.xy);
	return this1;
};
geom_ga__$MultiVector2_MultiVector2_$Impl_$.add = function(this1,b) {
	var this2 = new geom_structure_MVec2(this1.s + b.s,this1.x + b.x,this1.y + b.y,this1.xy + b.xy);
	return this2;
};
geom_ga__$MultiVector2_MultiVector2_$Impl_$.multiplying = function(a,b) {
	var this1 = new geom_structure_MVec2(a.s * b.s + a.x * b.x + a.y * b.y - a.xy * b.xy,a.x * b.s + a.s * b.x - a.xy * b.y + a.y * b.xy,a.y * b.s + a.xy * b.x + a.s * b.y - a.x * b.xy,a.xy * b.s + a.y * b.x - a.x * b.y + a.s * b.xy);
	return this1;
};
geom_ga__$MultiVector2_MultiVector2_$Impl_$.multiply = function(this1,b) {
	var this2 = new geom_structure_MVec2(this1.s * b.s + this1.x * b.x + this1.y * b.y - this1.xy * b.xy,this1.x * b.s + this1.s * b.x - this1.xy * b.y + this1.y * b.xy,this1.y * b.s + this1.xy * b.x + this1.s * b.y - this1.x * b.xy,this1.xy * b.s + this1.y * b.x - this1.x * b.y + this1.s * b.xy);
	return this2;
};
var geom_ga__$MultiVector3_MultiVector3_$Impl_$ = {};
geom_ga__$MultiVector3_MultiVector3_$Impl_$.__name__ = "geom.ga._MultiVector3.MultiVector3_Impl_";
geom_ga__$MultiVector3_MultiVector3_$Impl_$.__properties__ = {get_nought:"get_nought",get_zero:"get_zero"};
geom_ga__$MultiVector3_MultiVector3_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom_ga__$MultiVector3_MultiVector3_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_MVec3(0.,0.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_ga__$MultiVector3_MultiVector3_$Impl_$.get_nought = function(this1) {
	var this2 = new geom_structure_MVec3(0.,0.,0.,0.,0.,0.,0.,0.);
	return this2;
};
geom_ga__$MultiVector3_MultiVector3_$Impl_$.subtracting = function(a,b) {
	var this1 = new geom_structure_MVec3(a.s - b.s,a.x - b.x,a.y - b.y,a.z - b.z,a.xy - b.xy,a.zx - b.zx,a.yz - b.yz,a.xyz - b.xyz);
	return this1;
};
geom_ga__$MultiVector3_MultiVector3_$Impl_$.subtract = function(this1,b) {
	var this2 = new geom_structure_MVec3(this1.s - b.s,this1.x - b.x,this1.y - b.y,this1.z - b.z,this1.xy - b.xy,this1.zx - b.zx,this1.yz - b.yz,this1.xyz - b.xyz);
	return this2;
};
geom_ga__$MultiVector3_MultiVector3_$Impl_$.adding = function(a,b) {
	var this1 = new geom_structure_MVec3(a.s + b.s,a.x + b.x,a.y + b.y,a.z + b.z,a.xy + b.xy,a.zx + b.zx,a.yz + b.yz,a.xyz + b.xyz);
	return this1;
};
geom_ga__$MultiVector3_MultiVector3_$Impl_$.add = function(this1,b) {
	var this2 = new geom_structure_MVec3(this1.s + b.s,this1.x + b.x,this1.y + b.y,this1.z + b.z,this1.xy + b.xy,this1.zx + b.zx,this1.yz + b.yz,this1.xyz + b.xyz);
	return this2;
};
geom_ga__$MultiVector3_MultiVector3_$Impl_$.multiplying = function(a,b) {
	var this1 = new geom_structure_MVec3(a.s * b.s + a.x * b.x + a.y * b.y + a.z * b.z - a.xy * b.xy - a.zx * a.zx - a.yz * b.yz - a.xyz * b.xyz,a.x * b.s + a.s * b.x - a.xy * b.y + a.zx * b.z + a.y * b.xy - a.z * b.zx - a.xyz * b.yz - a.yz * b.xyz,a.y * b.s + a.xy * b.x + a.s * b.y - a.yz * b.z - a.x * b.xy - a.xyz * b.zx + a.z * b.yz - a.zx * b.xyz,a.z * b.s - a.zx * b.x + a.yz * b.y + a.s * b.z - a.xyz * b.xy + a.x * b.zx - a.y * b.yz - a.xy * b.xyz,a.xy * b.s + a.y * b.x - a.x * b.y + a.xyz * b.z + a.s * b.xy + a.yz * b.zx - a.zx * b.yz + a.z * b.xyz,a.zx * b.s - a.z * b.x + a.xyz * b.y + a.x * b.z - a.yz * b.xy + a.s * b.zx + a.xy * b.yz + a.y * b.xyz,a.yz * b.s + a.xyz * b.x + a.z * b.y - a.y * b.z + a.zx * b.xy - a.xy * b.zx + a.s * b.yz + a.x * b.xyz,a.xyz * b.s + a.yz * b.x + a.zx * b.y + a.xy * b.z + a.z * b.xy + a.y * b.zx + a.x * b.yz + a.s * b.xyz);
	return this1;
};
geom_ga__$MultiVector3_MultiVector3_$Impl_$.multiply = function(this1,b) {
	var this2 = new geom_structure_MVec3(this1.s * b.s + this1.x * b.x + this1.y * b.y + this1.z * b.z - this1.xy * b.xy - this1.zx * this1.zx - this1.yz * b.yz - this1.xyz * b.xyz,this1.x * b.s + this1.s * b.x - this1.xy * b.y + this1.zx * b.z + this1.y * b.xy - this1.z * b.zx - this1.xyz * b.yz - this1.yz * b.xyz,this1.y * b.s + this1.xy * b.x + this1.s * b.y - this1.yz * b.z - this1.x * b.xy - this1.xyz * b.zx + this1.z * b.yz - this1.zx * b.xyz,this1.z * b.s - this1.zx * b.x + this1.yz * b.y + this1.s * b.z - this1.xyz * b.xy + this1.x * b.zx - this1.y * b.yz - this1.xy * b.xyz,this1.xy * b.s + this1.y * b.x - this1.x * b.y + this1.xyz * b.z + this1.s * b.xy + this1.yz * b.zx - this1.zx * b.yz + this1.z * b.xyz,this1.zx * b.s - this1.z * b.x + this1.xyz * b.y + this1.x * b.z - this1.yz * b.xy + this1.s * b.zx + this1.xy * b.yz + this1.y * b.xyz,this1.yz * b.s + this1.xyz * b.x + this1.z * b.y - this1.y * b.z + this1.zx * b.xy - this1.xy * b.zx + this1.s * b.yz + this1.x * b.xyz,this1.xyz * b.s + this1.yz * b.x + this1.zx * b.y + this1.xy * b.z + this1.z * b.xy + this1.y * b.zx + this1.x * b.yz + this1.s * b.xyz);
	return this2;
};
var geom_matrix__$Complex_Complex_$Impl_$ = {};
geom_matrix__$Complex_Complex_$Impl_$.__name__ = "geom.matrix._Complex.Complex_Impl_";
geom_matrix__$Complex_Complex_$Impl_$.__properties__ = {set_magnitude:"set_magnitude",get_magnitude:"get_magnitude",set_real:"set_real",get_real:"get_real",set_i:"set_i",get_i:"get_i",get_negPosTau:"get_negPosTau",get_posNegTau:"get_posNegTau",get_minusTau:"get_minusTau",get_iMinusTau:"get_iMinusTau",get_unitMinusTau:"get_unitMinusTau",get_unitTau:"get_unitTau",get_iTau:"get_iTau",get_realTau:"get_realTau",get_negPosPi:"get_negPosPi",get_posNegPi:"get_posNegPi",get_minusPi:"get_minusPi",get_iMinusPi:"get_iMinusPi",get_unitMinusPi:"get_unitMinusPi",get_unitPi:"get_unitPi",get_iPi:"get_iPi",get_realPi:"get_realPi",get_negPosInfinity:"get_negPosInfinity",get_posNegInfinity:"get_posNegInfinity",get_iMinusInfinity:"get_iMinusInfinity",get_iInfinity:"get_iInfinity",get_minusInfinity:"get_minusInfinity",get_realInfinity:"get_realInfinity",get_unitMinusInfinity:"get_unitMinusInfinity",get_unitInfinity:"get_unitInfinity",get_minusUnit:"get_minusUnit",get_iMinus1:"get_iMinus1",get_i1:"get_i1",get_unit:"get_unit",get_minus1:"get_minus1",get_one:"get_one",get_zero:"get_zero"};
geom_matrix__$Complex_Complex_$Impl_$.fromString = function(s) {
	var removeI = HxOverrides.substr(s,0,s.length - 1);
	var split = removeI.split("+");
	var this1 = new geom_structure_Mat1x2(0.,0.);
	var c = this1;
	var v = Std.parseFloat(split[0]);
	c.x = v;
	var v1 = Std.parseFloat(split[1]);
	c.y = v1;
	return c;
};
geom_matrix__$Complex_Complex_$Impl_$.fromRealImaginary = function(c) {
	var this1 = new geom_structure_Mat1x2(c.real,c.imaginary);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.fromRi = function(c) {
	var this1 = new geom_structure_Mat1x2(c.r,c.i);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.fromRealI = function(c) {
	var this1 = new geom_structure_Mat1x2(c.real,c.i);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.toString = function(this1) {
	var r = this1.x;
	var i = this1.y;
	return "" + r + " + " + i + " i";
};
geom_matrix__$Complex_Complex_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_Mat1x2(0.,0.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_one = function() {
	var this1 = new geom_structure_Mat1x2(1.,0.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_minus1 = function() {
	var this1 = new geom_structure_Mat1x2(-1.,0.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_unit = function() {
	var this1 = new geom_structure_Mat1x2(1.,1.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_i1 = function() {
	var this1 = new geom_structure_Mat1x2(0.,1.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_iMinus1 = function() {
	var this1 = new geom_structure_Mat1x2(0.,-1.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_minusUnit = function() {
	var this1 = new geom_structure_Mat1x2(-1.,-1.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_unitInfinity = function() {
	var this1 = new geom_structure_Mat1x2(Infinity,Infinity);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_unitMinusInfinity = function() {
	var this1 = new geom_structure_Mat1x2(-Infinity,-Infinity);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_realInfinity = function() {
	var this1 = new geom_structure_Mat1x2(Infinity,0.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_minusInfinity = function() {
	var this1 = new geom_structure_Mat1x2(-Infinity,0.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_iInfinity = function() {
	var this1 = new geom_structure_Mat1x2(0.,Infinity);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_iMinusInfinity = function() {
	var this1 = new geom_structure_Mat1x2(0.,-Infinity);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_posNegInfinity = function() {
	var this1 = new geom_structure_Mat1x2(Infinity,-Infinity);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_negPosInfinity = function() {
	var this1 = new geom_structure_Mat1x2(-Infinity,Infinity);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_realPi = function() {
	var this1 = new geom_structure_Mat1x2(Math.PI,0.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_iPi = function() {
	var this1 = new geom_structure_Mat1x2(0.,Math.PI);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_unitPi = function() {
	var this1 = new geom_structure_Mat1x2(Math.PI,Math.PI);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_unitMinusPi = function() {
	var this1 = new geom_structure_Mat1x2(-Math.PI,-Math.PI);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_iMinusPi = function() {
	var this1 = new geom_structure_Mat1x2(0.,-Math.PI);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_minusPi = function() {
	var this1 = new geom_structure_Mat1x2(-Math.PI,0.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_posNegPi = function() {
	var this1 = new geom_structure_Mat1x2(Math.PI,-Math.PI);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_negPosPi = function() {
	var this1 = new geom_structure_Mat1x2(-Math.PI,Math.PI);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_realTau = function() {
	var this1 = new geom_structure_Mat1x2(Math.PI * 2,0.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_iTau = function() {
	var this1 = new geom_structure_Mat1x2(0.,Math.PI * 2);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_unitTau = function() {
	var this1 = new geom_structure_Mat1x2(Math.PI * 2,Math.PI * 2);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_unitMinusTau = function() {
	var this1 = new geom_structure_Mat1x2(-Math.PI * 2,-Math.PI * 2);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_iMinusTau = function() {
	var this1 = new geom_structure_Mat1x2(0.,-Math.PI * 2);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_minusTau = function() {
	var this1 = new geom_structure_Mat1x2(-Math.PI * 2,0.);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_posNegTau = function() {
	var this1 = new geom_structure_Mat1x2(Math.PI * 2,-Math.PI * 2);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_negPosTau = function() {
	var this1 = new geom_structure_Mat1x2(-Math.PI * 2,Math.PI * 2);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.get_i = function(this1) {
	return this1.y;
};
geom_matrix__$Complex_Complex_$Impl_$.set_i = function(this1,v) {
	this1.y = v;
	return v;
};
geom_matrix__$Complex_Complex_$Impl_$.get_real = function(this1) {
	return this1.x;
};
geom_matrix__$Complex_Complex_$Impl_$.set_real = function(this1,v) {
	this1.x = v;
	return v;
};
geom_matrix__$Complex_Complex_$Impl_$.clone = function(this1) {
	var this2 = new geom_structure_Mat1x2(this1.x,this1.y);
	return this2;
};
geom_matrix__$Complex_Complex_$Impl_$.swap = function(this1) {
	var this2 = new geom_structure_Mat1x2(this1.y,this1.x);
	return this2;
};
geom_matrix__$Complex_Complex_$Impl_$.equal = function(a,b) {
	var delta = 0.0000001;
	return !(Math.abs(a.x - b.x) >= delta || Math.abs(a.y - b.y) >= delta);
};
geom_matrix__$Complex_Complex_$Impl_$.notEqual = function(a,b) {
	var delta = 0.0000001;
	return !(!(Math.abs(a.x - b.x) >= delta || Math.abs(a.y - b.y) >= delta));
};
geom_matrix__$Complex_Complex_$Impl_$.add = function(a,b) {
	var this1 = new geom_structure_Mat1x2(a.x + b.x,a.y + b.y);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.subtract = function(a,b) {
	var this1 = new geom_structure_Mat1x2(a.x - b.x,a.y - b.y);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.scale = function(a,b) {
	var this1 = new geom_structure_Mat1x2(a * b.x,a * b.y);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.multiply = function(a,b) {
	var this1 = new geom_structure_Mat1x2(a.x * b.x - a.y * b.y,a.x * b.y + a.y * b.x);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.addExponents = function(this1) {
	return this1.x + this1.y;
};
geom_matrix__$Complex_Complex_$Impl_$.conjugate = function(a) {
	var this1 = new geom_structure_Mat1x2(a.x,-a.y);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.divide = function(c1,c2) {
	var this1 = new geom_structure_Mat1x2(c2.x,-c2.y);
	var conj = this1;
	var this2 = new geom_structure_Mat1x2(c1.x * conj.x - c1.y * conj.y,c1.x * conj.y + c1.y * conj.x);
	var numr = this2;
	var this3 = new geom_structure_Mat1x2(c2.x * conj.x - c2.y * conj.y,c2.x * conj.y + c2.y * conj.x);
	var demr = this3;
	var dval = demr.x + demr.y;
	var this4 = new geom_structure_Mat1x2(numr.x / dval,numr.y / dval);
	return this4;
};
geom_matrix__$Complex_Complex_$Impl_$.negate = function(a) {
	var this1 = new geom_structure_Mat1x2(-a.x,-a.y);
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.magnitudeSquared = function(this1) {
	return this1.x * this1.x + this1.y * this1.y;
};
geom_matrix__$Complex_Complex_$Impl_$.get_magnitude = function(this1) {
	return Math.sqrt(this1.x * this1.x + this1.y * this1.y);
};
geom_matrix__$Complex_Complex_$Impl_$.set_magnitude = function(this1,length) {
	var currentLength = Math.sqrt(this1.x * this1.x + this1.y * this1.y);
	if(currentLength == 0.) {
		return 0.;
	} else {
		var mul = length / currentLength;
		this1.x *= mul;
		this1.y *= mul;
		return Math.sqrt(this1.x * this1.x + this1.y * this1.y);
	}
};
geom_matrix__$Complex_Complex_$Impl_$.phase = function(this1) {
	return Math.atan2(this1.y,this1.x);
};
geom_matrix__$Complex_Complex_$Impl_$.isReal = function(this1) {
	return this1.y == 0;
};
geom_matrix__$Complex_Complex_$Impl_$.isImaginary = function(this1) {
	return this1.x == 0;
};
geom_matrix__$Complex_Complex_$Impl_$.cis = function(angle) {
	var this1 = new geom_structure_Mat1x2(Math.cos(angle),Math.sin(angle));
	return this1;
};
geom_matrix__$Complex_Complex_$Impl_$.fromCircle = function(r,angle) {
	var this1 = new geom_structure_Mat1x2(Math.cos(angle),Math.sin(angle));
	var b = this1;
	var this2 = new geom_structure_Mat1x2(r * b.x,r * b.y);
	return this2;
};
geom_matrix__$Complex_Complex_$Impl_$.square = function(c) {
	if(c.y == 0 == true) {
		var this1 = new geom_structure_Mat1x2(c.x * c.x,0);
		return this1;
	} else {
		var this2 = new geom_structure_Mat1x2(c.x,c.y);
		var here = this2;
		var this3 = new geom_structure_Mat1x2(here.x * here.x - here.y * here.y,here.x * here.y + here.y * here.x);
		return this3;
	}
};
geom_matrix__$Complex_Complex_$Impl_$.exp = function(c) {
	if(c.y == 0 == true) {
		var this1 = new geom_structure_Mat1x2(Math.exp(c.x),0);
		return this1;
	} else {
		var this2 = new geom_structure_Mat1x2(Math.exp(c.x) * Math.cos(c.y),Math.exp(c.x) * Math.sin(c.y));
		return this2;
	}
};
geom_matrix__$Complex_Complex_$Impl_$.ln = function(c) {
	if(c.y == 0 == true) {
		var this1 = new geom_structure_Mat1x2(Math.log(c.x),0);
		return this1;
	} else {
		var m;
		if(c.x > 0.) {
			m = Math.atan(c.y / c.x);
		} else if(c.x < 0. && c.y >= 0.) {
			m = Math.atan(c.y / c.x) + Math.PI;
		} else if(c.x < 0. && c.y < 0.) {
			m = Math.atan(c.y / c.x) - Math.PI;
		} else if(c.x == 0. && c.y > 0.) {
			m = Math.PI / 2;
		} else if(c.x == 0. && c.y < 0.) {
			m = -Math.PI / 2;
		} else {
			throw new js__$Boot_HaxeError("Complex.zero does not have arg?");
		}
		var this2 = new geom_structure_Mat1x2(0.5 * Math.log(c.x * c.x + c.y * c.y),m);
		return this2;
	}
};
geom_matrix__$Complex_Complex_$Impl_$.arg = function(c) {
	if(c.x > 0.) {
		return Math.atan(c.y / c.x);
	} else if(c.x < 0. && c.y >= 0.) {
		return Math.atan(c.y / c.x) + Math.PI;
	} else if(c.x < 0. && c.y < 0.) {
		return Math.atan(c.y / c.x) - Math.PI;
	} else if(c.x == 0. && c.y > 0.) {
		return Math.PI / 2;
	} else if(c.x == 0. && c.y < 0.) {
		return -Math.PI / 2;
	} else {
		throw new js__$Boot_HaxeError("Complex.zero does not have arg?");
	}
};
geom_matrix__$Complex_Complex_$Impl_$.reciprocal = function(this1) {
	var scale = this1.x * this1.x + this1.y * this1.y;
	var this2 = new geom_structure_Mat1x2(this1.x / scale,-this1.y / scale);
	return this2;
};
geom_matrix__$Complex_Complex_$Impl_$.pow = function(c,n) {
	if(c.y == 0 == true) {
		var this1 = new geom_structure_Mat1x2(Math.pow(c.x,n),0);
		return this1;
	} else {
		var a = Math.pow(Math.sqrt(c.x * c.x + c.y * c.y),n);
		var angle = n * Math.atan2(c.y,c.x);
		var this2 = new geom_structure_Mat1x2(Math.cos(angle),Math.sin(angle));
		var b = this2;
		var this3 = new geom_structure_Mat1x2(a * b.x,a * b.y);
		return this3;
	}
};
geom_matrix__$Complex_Complex_$Impl_$.squareRoot = function(c) {
	if(c.y == 0 == true) {
		var this1 = new geom_structure_Mat1x2(Math.pow(c.x,0.5),0);
		return this1;
	} else {
		var a = Math.pow(Math.sqrt(c.x * c.x + c.y * c.y),0.5);
		var angle = 0.5 * Math.atan2(c.y,c.x);
		var this2 = new geom_structure_Mat1x2(Math.cos(angle),Math.sin(angle));
		var b = this2;
		var this3 = new geom_structure_Mat1x2(a * b.x,a * b.y);
		return this3;
	}
};
geom_matrix__$Complex_Complex_$Impl_$.root2 = function(this1) {
	if(this1.y == 0 == true) {
		var this2 = new geom_structure_Mat1x2(Math.pow(this1.x,0.5),0);
		return this2;
	} else {
		var a = Math.pow(Math.sqrt(this1.x * this1.x + this1.y * this1.y),0.5);
		var angle = 0.5 * Math.atan2(this1.y,this1.x);
		var this3 = new geom_structure_Mat1x2(Math.cos(angle),Math.sin(angle));
		var b = this3;
		var this4 = new geom_structure_Mat1x2(a * b.x,a * b.y);
		return this4;
	}
};
var geom_matrix_Conversion = function() { };
geom_matrix_Conversion.__name__ = "geom.matrix.Conversion";
geom_matrix_Conversion._1x2toTpoint = function(m1x2) {
	return { x : m1x2.x, y : m1x2.y};
};
geom_matrix_Conversion._1x2toVec3 = function(m1x2) {
	var this1 = new Array(3);
	var vec = this1;
	vec[0] = m1x2.x;
	vec[1] = m1x2.y;
	vec[2] = 1.;
	return vec;
};
geom_matrix_Conversion.Vectorto1x2 = function(v) {
	var this1 = new geom_structure_Mat1x2(v[0],v[1]);
	return this1;
};
geom_matrix_Conversion.Vectorto1x3 = function(vec) {
	var this1 = new geom_structure_Mat1x3(vec[0],vec[1],vec[2]);
	return this1;
};
geom_matrix_Conversion._1x3toVector = function(m1x3) {
	var this1 = new Array(3);
	var vec = this1;
	vec[0] = m1x3.x;
	vec[1] = m1x3.y;
	vec[2] = m1x3.z;
	return vec;
};
geom_matrix_Conversion.Arrayto1x3 = function(arr) {
	var this1 = new geom_structure_Mat1x3(arr[0],arr[1],arr[2]);
	return this1;
};
geom_matrix_Conversion._1x3toArray = function(m1x3) {
	return [m1x3.x,m1x3.y,m1x3.z];
};
geom_matrix_Conversion.Vectorto1x4 = function(vec) {
	var this1 = new geom_structure_Mat1x4(vec[0],vec[1],vec[2],vec[3]);
	return this1;
};
geom_matrix_Conversion._1x4toVector = function(m1x4) {
	var this1 = new Array(4);
	var vec = this1;
	vec[0] = m1x4.x;
	vec[1] = m1x4.y;
	vec[2] = m1x4.z;
	vec[3] = m1x4.w;
	return vec;
};
geom_matrix_Conversion.Arrayto1x4 = function(arr) {
	var this1 = new geom_structure_Mat1x4(arr[0],arr[1],arr[2],arr[3]);
	return this1;
};
geom_matrix_Conversion._1x4toArray = function(m1x4) {
	return [m1x4.x,m1x4.y,m1x4.z,m1x4.w];
};
geom_matrix_Conversion.Arrayto2x2 = function(arr) {
	var this1 = new geom_structure_Mat2x2(arr[0],arr[1],arr[2],arr[3]);
	return this1;
};
geom_matrix_Conversion._2x2toArray = function(m2x2) {
	return [m2x2.a,m2x2.b,m2x2.c,m2x2.d];
};
geom_matrix_Conversion.Vectorto2x2 = function(vec) {
	var this1 = new geom_structure_Mat2x2(vec[0],vec[1],vec[2],vec[3]);
	return this1;
};
geom_matrix_Conversion._2x2toVector = function(m2x2) {
	var this1 = new Array(4);
	var vec = this1;
	vec[0] = m2x2.a;
	vec[1] = m2x2.b;
	vec[2] = m2x2.c;
	vec[3] = m2x2.d;
	return vec;
};
geom_matrix_Conversion.toTmatrix2x2 = function(m2x2) {
	var tm = { a : m2x2.a, b : m2x2.b, c : m2x2.c, d : m2x2.d};
	return tm;
};
geom_matrix_Conversion.Tmatrix2x2to2x2 = function(tm) {
	var m2x2 = tm;
	var this1 = m2x2;
	return this1;
};
geom_matrix_Conversion._2x2toTmatrix2x2numbered = function(m2x2) {
	var tm = { _00 : m2x2.a, _10 : m2x2.b, _01 : m2x2.c, _11 : m2x2.d};
	return tm;
};
geom_matrix_Conversion.Tmatrix2x2numberedto2x2 = function(tm) {
	var this1 = new geom_structure_Mat2x2(tm._00,tm._10,tm._01,tm._11);
	return this1;
};
geom_matrix_Conversion._2x2toAlternate2x2numbered = function(m2x2) {
	var am = { _00 : m2x2.a, _01 : m2x2.b, _10 : m2x2.c, _11 : m2x2.d};
	return am;
};
geom_matrix_Conversion.Alternate2x2numberedto2x2 = function(am) {
	var this1 = new geom_structure_Mat2x2(am._00,am._01,am._10,am._11);
	return this1;
};
geom_matrix_Conversion._2x2toFloat32ArrayTranspose_ = function(m2x2) {
	var this1 = new Float32Array(4);
	var arr = this1;
	arr[0] = m2x2.a;
	arr[1] = m2x2.c;
	arr[2] = m2x2.b;
	arr[3] = m2x2.d;
	return arr;
};
geom_matrix_Conversion._2x2toFloat32Array_ = function(m2x2) {
	var this1 = new Float32Array(4);
	var arr = this1;
	arr[0] = m2x2.a;
	arr[1] = m2x2.b;
	arr[2] = m2x2.c;
	arr[3] = m2x2.d;
	return arr;
};
geom_matrix_Conversion.Float32Array_to2x2Transpose = function(arr) {
	var this1 = new geom_structure_Mat2x2(arr[0],arr[2],arr[1],arr[3]);
	return this1;
};
geom_matrix_Conversion.Float32Array_2x2 = function(arr) {
	var this1 = new geom_structure_Mat2x2(arr[0],arr[1],arr[2],arr[3]);
	return this1;
};
geom_matrix_Conversion.Arrayto3x3 = function(arr) {
	var this1 = new geom_structure_Mat3x3(arr[0],arr[1],arr[2],arr[3],arr[4],arr[5],arr[6],arr[7],arr[8]);
	return this1;
};
geom_matrix_Conversion._3x3toArray = function(m3x3) {
	return [m3x3.a,m3x3.b,m3x3.c,m3x3.d,m3x3.e,m3x3.f,m3x3.g,m3x3.h,m3x3.i];
};
geom_matrix_Conversion._2x2to3x3 = function(m2) {
	var this1 = new geom_structure_Mat3x3(m2.a,m2.b,0.,m2.c,m2.d,0.,0.,0,1.);
	return this1;
};
geom_matrix_Conversion._3x3to2x2 = function(m3x3) {
	var this1 = new geom_structure_Mat2x2(m3x3.a,m3x3.b,m3x3.d,m3x3.e);
	return this1;
};
geom_matrix_Conversion.Vectorto3x3 = function(vec) {
	var this1 = new geom_structure_Mat3x3(vec[0],vec[1],vec[2],vec[3],vec[4],vec[5],vec[6],vec[7],vec[8]);
	return this1;
};
geom_matrix_Conversion._3x3toVector = function(m3x3) {
	var this1 = new Array(8);
	var v = this1;
	v[0] = m3x3.a;
	v[1] = m3x3.b;
	v[2] = m3x3.c;
	v[3] = m3x3.d;
	v[4] = m3x3.e;
	v[5] = m3x3.f;
	v[6] = m3x3.g;
	v[7] = m3x3.h;
	v[8] = m3x3.i;
	return v;
};
geom_matrix_Conversion._3x3toTmatrix3x3 = function(m3x3) {
	var tm = { a : m3x3.a, b : m3x3.b, c : m3x3.c, d : m3x3.d, e : m3x3.e, f : m3x3.f, g : m3x3.g, h : m3x3.h, i : m3x3.i};
	return tm;
};
geom_matrix_Conversion.Tmatrix3x3to3x3 = function(tm) {
	var m3x3 = tm;
	var this1 = m3x3;
	return this1;
};
geom_matrix_Conversion._3x3toTmatrix3x3numbered = function(m3x3) {
	var tm = { _00 : m3x3.a, _10 : m3x3.b, _20 : m3x3.c, _01 : m3x3.d, _11 : m3x3.e, _21 : m3x3.f, _02 : m3x3.g, _12 : m3x3.h, _22 : m3x3.i};
	return tm;
};
geom_matrix_Conversion.Tmatrix3x3numberedto3x3 = function(tm) {
	var this1 = new geom_structure_Mat3x3(tm._00,tm._10,tm._20,tm._01,tm._11,tm._21,tm._02,tm._12,tm._22);
	return this1;
};
geom_matrix_Conversion._m3x3toAlternate3x3numbered = function(m3x3) {
	var tm = { _00 : m3x3.a, _01 : m3x3.b, _02 : m3x3.c, _10 : m3x3.d, _11 : m3x3.e, _12 : m3x3.f, _20 : m3x3.g, _21 : m3x3.h, _22 : m3x3.i};
	return tm;
};
geom_matrix_Conversion.Alternate3x3numberedto3x3 = function(tm) {
	var this1 = new geom_structure_Mat3x3(tm._00,tm._01,tm._02,tm._10,tm._11,tm._12,tm._20,tm._21,tm._22);
	return this1;
};
geom_matrix_Conversion._3x3toFloat32ArrayTranspose_ = function(m3x3) {
	var this1 = new Float32Array(9);
	var arr = this1;
	arr[0] = m3x3.a;
	arr[1] = m3x3.d;
	arr[2] = m3x3.g;
	arr[3] = m3x3.b;
	arr[4] = m3x3.e;
	arr[5] = m3x3.h;
	arr[6] = m3x3.c;
	arr[7] = m3x3.f;
	arr[8] = m3x3.i;
	return arr;
};
geom_matrix_Conversion._3x3toFloat32Array_ = function(m3x3) {
	var this1 = new Float32Array(9);
	var arr = this1;
	arr[0] = m3x3.a;
	arr[1] = m3x3.b;
	arr[2] = m3x3.c;
	arr[3] = m3x3.d;
	arr[4] = m3x3.e;
	arr[5] = m3x3.f;
	arr[6] = m3x3.g;
	arr[7] = m3x3.h;
	arr[8] = m3x3.i;
	return arr;
};
geom_matrix_Conversion.Float32Array_to3x3Transpose = function(arr) {
	var this1 = new geom_structure_Mat3x3(arr[0],arr[3],arr[6],arr[1],arr[4],arr[7],arr[2],arr[5],arr[8]);
	return this1;
};
geom_matrix_Conversion.Float32Array_to3x3 = function(arr) {
	var this1 = new geom_structure_Mat3x3(arr[0],arr[1],arr[2],arr[3],arr[4],arr[5],arr[6],arr[7],arr[8]);
	return this1;
};
geom_matrix_Conversion._2x2to4x3 = function(m2) {
	var this1 = new geom_structure_Mat4x3(m2.a,m2.b,0.,0.,m2.c,m2.d,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix_Conversion._4x3to2x2 = function(m4x3) {
	var this1 = new geom_structure_Mat2x2(m4x3.a,m4x3.b,m4x3.e,m4x3.f);
	return this1;
};
geom_matrix_Conversion._3x3to4x3 = function(m3) {
	var this1 = new geom_structure_Mat4x3(m3.a,m3.b,m3.c,0.,m3.d,m3.e,m3.f,0.,m3.g,m3.h,m3.i,0.);
	return this1;
};
geom_matrix_Conversion._4x3to3x3 = function(m4x3) {
	var this1 = new geom_structure_Mat3x3(m4x3.a,m4x3.b,m4x3.c,m4x3.e,m4x3.f,m4x3.g,m4x3.i,m4x3.j,m4x3.k);
	return this1;
};
geom_matrix_Conversion.ArraytoMatrix4x3 = function(arr) {
	var this1 = new geom_structure_Mat4x3(arr[0],arr[1],arr[2],arr[3],arr[4],arr[5],arr[6],arr[7],arr[8],arr[9],arr[10],arr[11]);
	return this1;
};
geom_matrix_Conversion._4x3toArray = function(m4x3) {
	return [m4x3.a,m4x3.b,m4x3.c,m4x3.d,m4x3.e,m4x3.f,m4x3.g,m4x3.h,m4x3.i,m4x3.j,m4x3.k,m4x3.l];
};
geom_matrix_Conversion._4x3toVector = function(m4x3) {
	var this1 = new Array(12);
	var vec = this1;
	vec[0] = m4x3.a;
	vec[1] = m4x3.b;
	vec[2] = m4x3.c;
	vec[3] = m4x3.d;
	vec[4] = m4x3.e;
	vec[5] = m4x3.f;
	vec[6] = m4x3.g;
	vec[7] = m4x3.h;
	vec[8] = m4x3.i;
	vec[9] = m4x3.j;
	vec[10] = m4x3.k;
	vec[11] = m4x3.l;
	return vec;
};
geom_matrix_Conversion.Vectorto4x3 = function(v) {
	var this1 = new geom_structure_Mat4x3(v[0],v[1],v[2],v[3],v[4],v[5],v[6],v[7],v[8],v[9],v[10],v[11]);
	return this1;
};
geom_matrix_Conversion._4x3toFloat32ArrayTranspose_ = function(m4x3) {
	var this1 = new Float32Array(16);
	var arr = this1;
	return geom_matrix_Conversion._4x3toFloat32ArrayTransposeUpdate_(arr,m4x3);
};
geom_matrix_Conversion._4x3toFloat32ArrayTransposeUpdate_ = function(arr,m4x3) {
	arr[0] = m4x3.a;
	arr[1] = m4x3.e;
	arr[2] = m4x3.i;
	arr[3] = 0.;
	arr[4] = m4x3.b;
	arr[5] = m4x3.f;
	arr[6] = m4x3.j;
	arr[7] = 0.;
	arr[8] = m4x3.c;
	arr[9] = m4x3.g;
	arr[10] = m4x3.k;
	arr[11] = 0.;
	arr[12] = m4x3.d;
	arr[13] = m4x3.h;
	arr[14] = m4x3.l;
	arr[15] = 1.;
	return arr;
};
geom_matrix_Conversion._4x3toFloat32Array_ = function(m4x3) {
	var this1 = new Float32Array(16);
	var arr = this1;
	return geom_matrix_Conversion._4x3toFloat32ArrayUpdate_(arr,m4x3);
};
geom_matrix_Conversion._4x3toFloat32ArrayUpdate_ = function(arr,m4x3) {
	arr[0] = m4x3.a;
	arr[1] = m4x3.b;
	arr[2] = m4x3.c;
	arr[3] = m4x3.d;
	arr[4] = m4x3.e;
	arr[5] = m4x3.f;
	arr[6] = m4x3.g;
	arr[7] = m4x3.h;
	arr[8] = m4x3.i;
	arr[9] = m4x3.j;
	arr[10] = m4x3.k;
	arr[11] = m4x3.l;
	arr[12] = 0.;
	arr[13] = 0.;
	arr[14] = 0.;
	arr[15] = 1.;
	return arr;
};
geom_matrix_Conversion.Float32Array_to4x3Transpose = function(arr) {
	var this1 = new geom_structure_Mat4x3(arr[0],arr[4],arr[8],arr[12],arr[1],arr[5],arr[9],arr[13],arr[2],arr[6],arr[10],arr[14]);
	return this1;
};
geom_matrix_Conversion.Float32Array_to4x3 = function(arr) {
	var this1 = new geom_structure_Mat4x3(arr[0],arr[1],arr[2],arr[3],arr[4],arr[5],arr[6],arr[7],arr[8],arr[9],arr[10],arr[11]);
	return this1;
};
geom_matrix_Conversion._4x3toTAffineMatrix = function(m4x3) {
	return { e0 : m4x3.a, e4 : m4x3.b, e8 : m4x3.c, e12 : m4x3.d, e1 : m4x3.e, e5 : m4x3.f, e9 : m4x3.g, e13 : m4x3.h, e2 : m4x3.i, e6 : m4x3.j, e10 : m4x3.k, e14 : m4x3.l};
};
geom_matrix_Conversion.Tmatrix4x4numberedto4x3 = function(m) {
	var this1 = new geom_structure_Mat4x3(m._00,m._10,m._20,m._30,m._01,m._11,m._21,m._31,m._02,m._12,m._22,m._32);
	return this1;
};
geom_matrix_Conversion._4x3toTmatrix4x4numbered = function(m4x3) {
	return { _00 : m4x3.a, _10 : m4x3.b, _20 : m4x3.c, _30 : m4x3.d, _01 : m4x3.e, _11 : m4x3.f, _21 : m4x3.g, _31 : m4x3.h, _02 : m4x3.i, _12 : m4x3.j, _22 : m4x3.k, _32 : m4x3.l, _03 : 0., _13 : 0., _23 : 0., _33 : 1.};
};
geom_matrix_Conversion._4x3toTmatrix4x3 = function(m4x3) {
	var tm4x3 = { a : m4x3.a, b : m4x3.b, c : m4x3.c, d : m4x3.d, e : m4x3.e, f : m4x3.f, g : m4x3.g, h : m4x3.h, i : m4x3.i, j : m4x3.j, k : m4x3.k, l : m4x3.l};
	return tm4x3;
};
geom_matrix_Conversion.Tmatrix4x3to4x3 = function(tm) {
	var m4x3 = new geom_structure_Mat4x3(tm.a,tm.b,tm.c,tm.d,tm.e,tm.f,tm.g,tm.h,tm.i,tm.j,tm.k,tm.l);
	var this1 = m4x3;
	return this1;
};
geom_matrix_Conversion._4x4toFloat32ArrayTranspose_ = function(m4x4) {
	var this1 = new Float32Array(16);
	var arr = this1;
	return geom_matrix_Conversion._4x4toFloat32ArrayTransposeUpdate_(arr,m4x4);
};
geom_matrix_Conversion._4x4toFloat32ArrayTransposeUpdate_ = function(arr,m4x4) {
	arr[0] = m4x4.a;
	arr[1] = m4x4.e;
	arr[2] = m4x4.i;
	arr[3] = m4x4.m;
	arr[4] = m4x4.b;
	arr[5] = m4x4.f;
	arr[6] = m4x4.j;
	arr[7] = m4x4.n;
	arr[8] = m4x4.c;
	arr[9] = m4x4.g;
	arr[10] = m4x4.k;
	arr[11] = m4x4.o;
	arr[12] = m4x4.d;
	arr[13] = m4x4.h;
	arr[14] = m4x4.l;
	arr[15] = m4x4.p;
	return arr;
};
geom_matrix_Conversion._4x4toFloat32Array_ = function(m4x4) {
	var this1 = new Float32Array(16);
	var arr = this1;
	return geom_matrix_Conversion._4x4toFloat32ArrayUpdate_(arr,m4x4);
};
geom_matrix_Conversion._4x4toFloat32ArrayUpdate_ = function(arr,m4x4) {
	arr[0] = m4x4.a;
	arr[1] = m4x4.b;
	arr[2] = m4x4.c;
	arr[3] = m4x4.d;
	arr[4] = m4x4.e;
	arr[5] = m4x4.f;
	arr[6] = m4x4.g;
	arr[7] = m4x4.h;
	arr[8] = m4x4.i;
	arr[9] = m4x4.j;
	arr[10] = m4x4.k;
	arr[11] = m4x4.l;
	arr[12] = m4x4.m;
	arr[13] = m4x4.n;
	arr[14] = m4x4.o;
	arr[15] = m4x4.p;
	return arr;
};
geom_matrix_Conversion.Float32Array_to4x4Transpose = function(arr) {
	var this1 = new geom_structure_Mat4x4(arr[0],arr[4],arr[8],arr[12],arr[1],arr[5],arr[9],arr[13],arr[2],arr[6],arr[10],arr[14],arr[3],arr[7],arr[11],arr[15]);
	return this1;
};
geom_matrix_Conversion.Float32Array_to4x4 = function(arr) {
	var this1 = new geom_structure_Mat4x4(arr[0],arr[1],arr[2],arr[3],arr[4],arr[5],arr[6],arr[7],arr[8],arr[9],arr[10],arr[11],arr[12],arr[13],arr[14],arr[15]);
	return this1;
};
geom_matrix_Conversion._4x4toTmatrix4x4 = function(m4x4) {
	var tm = { a : m4x4.a, b : m4x4.b, c : m4x4.c, d : m4x4.d, e : m4x4.e, f : m4x4.f, g : m4x4.g, h : m4x4.h, i : m4x4.i, j : m4x4.j, k : m4x4.k, l : m4x4.l, m : m4x4.m, n : m4x4.n, o : m4x4.o, p : m4x4.p};
	return tm;
};
geom_matrix_Conversion.Tmatrix4x4to4x4 = function(tm) {
	var m4x4 = tm;
	var this1 = m4x4;
	return this1;
};
geom_matrix_Conversion._4x4toTmatrix4x4numbered = function(m4x4) {
	var tm = { _00 : m4x4.a, _10 : m4x4.b, _20 : m4x4.c, _30 : m4x4.d, _01 : m4x4.e, _11 : m4x4.f, _21 : m4x4.g, _31 : m4x4.h, _02 : m4x4.i, _12 : m4x4.j, _22 : m4x4.k, _32 : m4x4.l, _03 : m4x4.m, _13 : m4x4.n, _23 : m4x4.o, _33 : m4x4.p};
	return tm;
};
geom_matrix_Conversion.Tmatrix4x4numberedto4x4 = function(tm) {
	var this1 = new geom_structure_Mat4x4(tm._00,tm._10,tm._20,tm._30,tm._01,tm._11,tm._21,tm._31,tm._02,tm._12,tm._22,tm._32,tm._03,tm._13,tm._23,tm._33);
	return this1;
};
geom_matrix_Conversion._4x4toAlternate4x4numbered = function(m4x4) {
	var tm = { _00 : m4x4.a, _01 : m4x4.b, _02 : m4x4.c, _03 : m4x4.d, _10 : m4x4.e, _11 : m4x4.f, _12 : m4x4.g, _13 : m4x4.h, _20 : m4x4.i, _21 : m4x4.j, _22 : m4x4.k, _23 : m4x4.l, _30 : m4x4.m, _31 : m4x4.n, _32 : m4x4.o, _33 : m4x4.p};
	return tm;
};
geom_matrix_Conversion.Alternate4x4numberedto4x4 = function(tm) {
	var this1 = new geom_structure_Mat4x4(tm._00,tm._01,tm._02,tm._03,tm._10,tm._11,tm._12,tm._13,tm._20,tm._21,tm._22,tm._23,tm._30,tm._31,tm._32,tm._33);
	return this1;
};
var geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$ = {};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.__name__ = "geom.matrix._DualQuaternion.DualQuaternion_Impl_";
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.__properties__ = {get_zero:"get_zero"};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$._new = function(dq) {
	var this1 = dq;
	return this1;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_Mat1x4(0.,0.,0.,1.);
	var this2 = new geom_structure_Mat1x4(0.,0.,0.,1.);
	var this3 = new geom_structure_DualQ(this1,this2);
	return this3;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.clone = function(this1) {
	var this2 = this1.real;
	var this3 = new geom_structure_Mat1x4(this2.x,this2.y,this2.z,this2.w);
	var this4 = this1.dual;
	var this5 = new geom_structure_Mat1x4(this4.x,this4.y,this4.z,this4.w);
	var this6 = new geom_structure_DualQ(this3,this5);
	return this6;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.equal = function(a,b) {
	var a1 = a.real;
	var b1 = b.real;
	var delta = 0.0000001;
	if(!(Math.abs(a1.x - b1.x) >= delta || Math.abs(a1.y - b1.y) >= delta || Math.abs(a1.z - b1.z) >= delta || Math.abs(a1.w - b1.w) >= delta)) {
		var a2 = a.dual;
		var b2 = b.dual;
		var delta1 = 0.0000001;
		return !(Math.abs(a2.x - b2.x) >= delta1 || Math.abs(a2.y - b2.y) >= delta1 || Math.abs(a2.z - b2.z) >= delta1 || Math.abs(a2.w - b2.w) >= delta1);
	} else {
		return false;
	}
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.notEqual = function(a,b) {
	var tmp;
	var a1 = a.real;
	var b1 = b.real;
	var delta = 0.0000001;
	if(!(Math.abs(a1.x - b1.x) >= delta || Math.abs(a1.y - b1.y) >= delta || Math.abs(a1.z - b1.z) >= delta || Math.abs(a1.w - b1.w) >= delta)) {
		var a2 = a.dual;
		var b2 = b.dual;
		var delta1 = 0.0000001;
		tmp = !(Math.abs(a2.x - b2.x) >= delta1 || Math.abs(a2.y - b2.y) >= delta1 || Math.abs(a2.z - b2.z) >= delta1 || Math.abs(a2.w - b2.w) >= delta1);
	} else {
		tmp = false;
	}
	return !tmp;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.scaleMultiply = function(a,v) {
	var a1 = a.real;
	var this1 = new geom_structure_Mat1x4(a1.x * v,a1.y * v,a1.z * v,a1.w * v);
	var a2 = a.dual;
	var this2 = new geom_structure_Mat1x4(a2.x * v,a2.y * v,a2.z * v,a2.w * v);
	var this3 = new geom_structure_DualQ(this1,this2);
	return this3;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.divide = function(a,v) {
	var v1 = 1 / v;
	var a1 = a.real;
	var this1 = new geom_structure_Mat1x4(a1.x * v1,a1.y * v1,a1.z * v1,a1.w * v1);
	var a2 = a.dual;
	var this2 = new geom_structure_Mat1x4(a2.x * v1,a2.y * v1,a2.z * v1,a2.w * v1);
	var this3 = new geom_structure_DualQ(this1,this2);
	return this3;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.add = function(a,b) {
	var a1 = a.real;
	var b1 = b.real;
	var this1 = new geom_structure_Mat1x4(a1.x + b1.x,a1.y + b1.y,a1.z + b1.z,a1.w + b1.w);
	var a2 = a.dual;
	var b2 = b.dual;
	var this2 = new geom_structure_Mat1x4(a2.x + b2.x,a2.y + b2.y,a2.z + b2.z,a2.w + b2.w);
	var this3 = new geom_structure_DualQ(this1,this2);
	return this3;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.subtract = function(a,b) {
	var a1 = a.real;
	var b1 = b.real;
	var this1 = new geom_structure_Mat1x4(a1.x - b1.x,a1.y - b1.y,a1.z - b1.z,a1.w - b1.w);
	var a2 = a.dual;
	var b2 = b.dual;
	var this2 = new geom_structure_Mat1x4(a2.x - b2.x,a2.y - b2.y,a2.z - b2.z,a2.w - b2.w);
	var this3 = new geom_structure_DualQ(this1,this2);
	return this3;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.negate = function(a) {
	var a1 = a.real;
	var this1 = new geom_structure_Mat1x4(-a1.x,-a1.y,-a1.z,-a1.w);
	var a2 = a.dual;
	var this2 = new geom_structure_Mat1x4(-a2.x,-a2.y,-a2.z,-a2.w);
	var this3 = new geom_structure_DualQ(this1,this2);
	return this3;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.create = function(r,t) {
	var currentLength = Math.sqrt(r.x * r.x + r.y * r.y + r.z * r.z + r.w * r.w);
	if(currentLength != 0.) {
		var mul = 1. / currentLength;
		r.x *= mul;
		r.y *= mul;
		r.z *= mul;
		r.w *= mul;
		var real = r.x * r.x + r.y * r.y + r.z * r.z + r.w * r.w;
	}
	var real1 = r;
	var this1 = new geom_structure_Mat1x4(t.x,t.y,t.z,0.);
	var q = this1;
	var this2 = new geom_structure_Mat1x4(q.x * 0.5,q.y * 0.5,q.z * 0.5,q.w * 0.5);
	q = this2;
	var this3 = new geom_structure_Mat1x4(q.x * real1.w + q.y * real1.z - q.z * real1.y + q.w * real1.x,-q.x * real1.z + q.y * real1.w + q.z * real1.x + q.w * real1.y,q.x * real1.y - q.y * real1.x + q.z * real1.w + q.w * real1.z,-q.x * real1.x - q.y * real1.y - q.z * real1.z + q.w * real1.w);
	var dual = this3;
	var this4 = new geom_structure_DualQ(real1,dual);
	return this4;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.applyScale = function(this1,s) {
	var this2 = this1.real;
	var this3 = new geom_structure_Mat1x4(this2.x,this2.y,this2.z,this2.w);
	var this4 = this1.dual;
	var this5 = new geom_structure_Mat1x4(this4.x,this4.y,this4.z,this4.w);
	var this6 = new geom_structure_DualQ(this3,this5);
	var cloned = this6;
	var this7 = new geom_structure_Mat1x4(0,0,0,Math.sqrt(s));
	var this8 = new geom_structure_Mat1x4(0.,0.,0.,0.);
	var this9 = new geom_structure_DualQ(this7,this8);
	var q2 = this9;
	var q1 = q2.real;
	var q21 = cloned.real;
	var this10 = new geom_structure_Mat1x4(q1.x * q21.w + q1.y * q21.z - q1.z * q21.y + q1.w * q21.x,-q1.x * q21.z + q1.y * q21.w + q1.z * q21.x + q1.w * q21.y,q1.x * q21.y - q1.y * q21.x + q1.z * q21.w + q1.w * q21.z,-q1.x * q21.x - q1.y * q21.y - q1.z * q21.z + q1.w * q21.w);
	var q11 = q2.dual;
	var q22 = cloned.real;
	var this11 = new geom_structure_Mat1x4(q11.x * q22.w + q11.y * q22.z - q11.z * q22.y + q11.w * q22.x,-q11.x * q22.z + q11.y * q22.w + q11.z * q22.x + q11.w * q22.y,q11.x * q22.y - q11.y * q22.x + q11.z * q22.w + q11.w * q22.z,-q11.x * q22.x - q11.y * q22.y - q11.z * q22.z + q11.w * q22.w);
	var a = this11;
	var q12 = q2.real;
	var q23 = cloned.dual;
	var this12 = new geom_structure_Mat1x4(q12.x * q23.w + q12.y * q23.z - q12.z * q23.y + q12.w * q23.x,-q12.x * q23.z + q12.y * q23.w + q12.z * q23.x + q12.w * q23.y,q12.x * q23.y - q12.y * q23.x + q12.z * q23.w + q12.w * q23.z,-q12.x * q23.x - q12.y * q23.y - q12.z * q23.z + q12.w * q23.w);
	var b = this12;
	var this13 = new geom_structure_Mat1x4(a.x + b.x,a.y + b.y,a.z + b.z,a.w + b.w);
	var this14 = new geom_structure_DualQ(this10,this13);
	cloned = this14;
	return cloned;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.scalar = function(s) {
	var this1 = new geom_structure_Mat1x4(0,0,0,Math.sqrt(s));
	var this2 = new geom_structure_Mat1x4(0.,0.,0.,0.);
	var this3 = new geom_structure_DualQ(this1,this2);
	return this3;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.dotProduct = function(a,b) {
	var a1 = a.real;
	var b1 = b.real;
	return a1.x * b1.x + a1.y * b1.y + a1.z * b1.z + a1.w * b1.w;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.normalize = function(this1) {
	var a = this1.real;
	var b = this1.real;
	var mag = a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;
	if(mag < 0) {
		return null;
	}
	var oneOver = 1 / mag;
	var a1 = this1.real;
	var this2 = new geom_structure_Mat1x4(a1.x * oneOver,a1.y * oneOver,a1.z * oneOver,a1.w * oneOver);
	var a2 = this1.dual;
	var this3 = new geom_structure_Mat1x4(a2.x * oneOver,a2.y * oneOver,a2.z * oneOver,a2.w * oneOver);
	var this4 = new geom_structure_DualQ(this2,this3);
	return this4;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.conjugate = function(a) {
	var a1 = a.real;
	var this1 = new geom_structure_Mat1x4(-a1.x,-a1.y,-a1.z,a1.w);
	var a2 = a.dual;
	var this2 = new geom_structure_Mat1x4(-a2.x,-a2.y,-a2.z,a2.w);
	var this3 = new geom_structure_DualQ(this1,this2);
	return this3;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.getTranslation = function(this1) {
	var a = this1.dual;
	var this2 = new geom_structure_Mat1x4(a.x * 2.,a.y * 2.,a.z * 2.,a.w * 2.);
	var q = this2;
	var a1 = this1.real;
	var this3 = new geom_structure_Mat1x4(-a1.x,-a1.y,-a1.z,a1.w);
	var q2 = this3;
	var this4 = new geom_structure_Mat1x4(q.x * q2.w + q.y * q2.z - q.z * q2.y + q.w * q2.x,-q.x * q2.z + q.y * q2.w + q.z * q2.x + q.w * q2.y,q.x * q2.y - q.y * q2.x + q.z * q2.w + q.w * q2.z,-q.x * q2.x - q.y * q2.y - q.z * q2.z + q.w * q2.w);
	q = this4;
	var this5 = new geom_structure_Mat1x4(q.x,q.y,q.z,1.);
	return this5;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.multiplyQ = function(q1,q2) {
	var q11 = q2.real;
	var q21 = q1.real;
	var this1 = new geom_structure_Mat1x4(q11.x * q21.w + q11.y * q21.z - q11.z * q21.y + q11.w * q21.x,-q11.x * q21.z + q11.y * q21.w + q11.z * q21.x + q11.w * q21.y,q11.x * q21.y - q11.y * q21.x + q11.z * q21.w + q11.w * q21.z,-q11.x * q21.x - q11.y * q21.y - q11.z * q21.z + q11.w * q21.w);
	var q12 = q2.dual;
	var q22 = q1.real;
	var this2 = new geom_structure_Mat1x4(q12.x * q22.w + q12.y * q22.z - q12.z * q22.y + q12.w * q22.x,-q12.x * q22.z + q12.y * q22.w + q12.z * q22.x + q12.w * q22.y,q12.x * q22.y - q12.y * q22.x + q12.z * q22.w + q12.w * q22.z,-q12.x * q22.x - q12.y * q22.y - q12.z * q22.z + q12.w * q22.w);
	var a = this2;
	var q13 = q2.real;
	var q23 = q1.dual;
	var this3 = new geom_structure_Mat1x4(q13.x * q23.w + q13.y * q23.z - q13.z * q23.y + q13.w * q23.x,-q13.x * q23.z + q13.y * q23.w + q13.z * q23.x + q13.w * q23.y,q13.x * q23.y - q13.y * q23.x + q13.z * q23.w + q13.w * q23.z,-q13.x * q23.x - q13.y * q23.y - q13.z * q23.z + q13.w * q23.w);
	var b = this3;
	var this4 = new geom_structure_Mat1x4(a.x + b.x,a.y + b.y,a.z + b.z,a.w + b.w);
	var this5 = new geom_structure_DualQ(this1,this4);
	return this5;
};
geom_matrix__$DualQuaternion_DualQuaternion_$Impl_$.toMatrix4x3 = function(this1) {
	var a = this1.real;
	var b = this1.real;
	var mag = a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;
	var q;
	if(mag < 0) {
		q = null;
	} else {
		var oneOver = 1 / mag;
		var a1 = this1.real;
		var this2 = new geom_structure_Mat1x4(a1.x * oneOver,a1.y * oneOver,a1.z * oneOver,a1.w * oneOver);
		var a2 = this1.dual;
		var this3 = new geom_structure_Mat1x4(a2.x * oneOver,a2.y * oneOver,a2.z * oneOver,a2.w * oneOver);
		var this4 = new geom_structure_DualQ(this2,this3);
		q = this4;
	}
	var this5 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var m = this5;
	var w = q.real.w;
	var x = q.real.x;
	var y = q.real.y;
	var z = q.real.z;
	m.a = w * w + x * x - y * y - z * z;
	m.e = 2 * x * y + 2 * w * z;
	m.i = 2 * x * z - 2 * w * y;
	m.b = 2 * x * y - 2 * w * z;
	m.f = w * w + y * y - x * x - z * z;
	m.j = 2 * y * z + 2 * w * x;
	m.c = 2 * x * z + 2 * w * y;
	m.g = 2 * y * z - 2 * w * x;
	m.k = w * w + z * z - x * x - y * y;
	var a3 = q.dual;
	var this6 = new geom_structure_Mat1x4(a3.x * 2.,a3.y * 2.,a3.z * 2.,a3.w * 2.);
	var q1 = this6;
	var a4 = q.real;
	var this7 = new geom_structure_Mat1x4(-a4.x,-a4.y,-a4.z,a4.w);
	var q2 = this7;
	var this8 = new geom_structure_Mat1x4(q1.x * q2.w + q1.y * q2.z - q1.z * q2.y + q1.w * q2.x,-q1.x * q2.z + q1.y * q2.w + q1.z * q2.x + q1.w * q2.y,q1.x * q2.y - q1.y * q2.x + q1.z * q2.w + q1.w * q2.z,-q1.x * q2.x - q1.y * q2.y - q1.z * q2.z + q1.w * q2.w);
	q1 = this8;
	var this9 = new geom_structure_Mat1x4(q1.x,q1.y,q1.z,1.);
	var t = this9;
	m.d = t.x;
	m.h = t.y;
	m.l = t.z;
	return m;
};
var geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$ = {};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.__name__ = "geom.matrix._Matrix1x2.Matrix1x2_Impl_";
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.__properties__ = {get_testCount:"get_testCount",get_counting:"get_counting",get_minus1:"get_minus1",get_one:"get_one",get_unit:"get_unit",get_nought:"get_nought",get_zero:"get_zero",set_magnitude:"set_magnitude",get_magnitude:"get_magnitude",get_self:"get_self"};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.clone = function(this1) {
	var this2 = new geom_structure_Mat1x2(this1.x,this1.y);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.iterator = function(this1) {
	return HxOverrides.iter([this1.x,this1.y]);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.get_self = function(this1) {
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.get_magnitude = function(this1) {
	return Math.sqrt(this1.x * this1.x + this1.y * this1.y);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.set_magnitude = function(this1,length) {
	var currentLength = Math.sqrt(this1.x * this1.x + this1.y * this1.y);
	if(currentLength == 0) {
		return 0;
	} else {
		var mul = length / currentLength;
		this1.x *= mul;
		this1.y *= mul;
		return Math.sqrt(this1.x * this1.x + this1.y * this1.y);
	}
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.normalize = function(this1) {
	var currentLength = Math.sqrt(this1.x * this1.x + this1.y * this1.y);
	if(currentLength != 0) {
		var mul = 1. / currentLength;
		this1.x *= mul;
		this1.y *= mul;
		var tmp = this1.x * this1.x + this1.y * this1.y;
	}
	return Math.sqrt(this1.x * this1.x + this1.y * this1.y);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_Mat1x2(0.,0.);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.get_nought = function(this1) {
	var this2 = new geom_structure_Mat1x2(0.,0.);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.get_unit = function() {
	var this1 = new geom_structure_Mat1x2(1.,1.);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.get_one = function(this1) {
	var this2 = new geom_structure_Mat1x2(1.,1.);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.get_minus1 = function() {
	var this1 = new geom_structure_Mat1x2(1.,1.);
	var a = this1;
	var this2 = new geom_structure_Mat1x2(-a.x,-a.y);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.get_counting = function() {
	var this1 = new geom_structure_Mat1x2(1.,2.);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.get_testCount = function(this1) {
	var this2 = new geom_structure_Mat1x2(1.,2.);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.negating = function(a) {
	var this1 = new geom_structure_Mat1x2(-a.x,-a.y);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.negate = function(this1) {
	var this2 = new geom_structure_Mat1x2(-this1.x,-this1.y);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.adding = function(a,b) {
	var this1 = new geom_structure_Mat1x2(a.x + b.x,a.y + b.y);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.add = function(this1,b) {
	var this2 = new geom_structure_Mat1x2(this1.x + b.x,this1.y + b.y);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.subtracting = function(a,b) {
	var this1 = new geom_structure_Mat1x2(a.x - b.x,a.y - b.y);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.subtract = function(this1,b) {
	var this2 = new geom_structure_Mat1x2(this1.x - b.x,this1.y - b.y);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.isEqualling = function(a,b) {
	if(a.x == b.x) {
		return a.y == b.y;
	} else {
		return false;
	}
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.isEqual = function(this1,b) {
	if(this1.x == b.x) {
		return this1.y == b.y;
	} else {
		return false;
	}
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.scaleMultiplying = function(a,v) {
	var this1 = new geom_structure_Mat1x2(a.x * v,a.y * v);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.scaleMultiply = function(this1,v) {
	var this2 = new geom_structure_Mat1x2(this1.x * v,this1.y * v);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.lerpClampT = function(this1,p,t) {
	var interval = new geom_structure_Range(1.,0.);
	var t1 = t <= interval.l ? interval.l : t >= interval.u ? interval.u : t;
	var this2 = this1;
	var this3 = new geom_structure_Mat1x2(this2.x - p.x,this2.y - p.y);
	var s = this3;
	var this4 = new geom_structure_Mat1x2(-s.x,-s.y);
	var n = this4;
	var this5 = new geom_structure_Mat1x2(n.x * t1,n.y * t1);
	var tn = this5;
	var this6 = new geom_structure_Mat1x2(s.x + tn.x,s.y + tn.y);
	return this6;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.lerp = function(this1,p,t) {
	var this2 = this1;
	var this3 = new geom_structure_Mat1x2(this2.x - p.x,this2.y - p.y);
	var s = this3;
	var this4 = new geom_structure_Mat1x2(-s.x,-s.y);
	var n = this4;
	var this5 = new geom_structure_Mat1x2(n.x * t,n.y * t);
	var tn = this5;
	var this6 = new geom_structure_Mat1x2(s.x + tn.x,s.y + tn.y);
	return this6;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.sumXY = function(this1) {
	return this1.x + this1.y;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.topLeft = function() {
	var this1 = new geom_structure_Mat1x2(-1.,1.);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.topRight = function() {
	var this1 = new geom_structure_Mat1x2(1.,1.);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.bottomLeft = function() {
	var this1 = new geom_structure_Mat1x2(-1.,-1.);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.bottomRight = function() {
	var this1 = new geom_structure_Mat1x2(1.,-1.);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.north = function() {
	var this1 = new geom_structure_Mat1x2(0.,1.);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.south = function() {
	var this1 = new geom_structure_Mat1x2(0.,-1.);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.west = function() {
	var this1 = new geom_structure_Mat1x2(-1.,0.);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.east = function() {
	var this1 = new geom_structure_Mat1x2(1.,0.);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.dotting = function(a,b) {
	var this1 = new geom_structure_Mat1x2(a.x * b.x,a.y * b.y);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.dot = function(this1,b) {
	var this2 = new geom_structure_Mat1x2(this1.x * b.x,this1.y * b.y);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.dividing = function(a,v) {
	var a1 = a;
	var v1 = 1 / v;
	var this1 = new geom_structure_Mat1x2(a1.x * v1,a1.y * v1);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.divide = function(this1,v) {
	var a = this1;
	var v1 = 1 / v;
	var this2 = new geom_structure_Mat1x2(a.x * v1,a.y * v1);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.notEqual = function(a,b) {
	return !(a.x == b.x && a.y == b.y);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.perp = function(this1,b) {
	return this1.x * b.y - this1.y * b.x;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.mid = function(a,b) {
	var this1 = new geom_structure_Mat1x2((a.x + b.x) / 2,(a.y + b.y) / 2);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.distanceBetweenSquare = function(this1,b) {
	var dx = this1.x - b.x;
	var dy = this1.y - b.y;
	return dx * dx + dy * dy;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.distanceBetweenSquare_ = function(this1,b) {
	var this2 = new geom_structure_Mat1x2(this1.x - b.x,this1.y - b.y);
	var c = this2;
	return c.x * c.x + c.y * c.y;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.distanceBetween = function(this1,b) {
	var dx = this1.x - b.x;
	var dy = this1.y - b.y;
	return Math.pow(dx * dx + dy * dy,0.5);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.span = function(this1,b) {
	var this2 = new geom_structure_Mat1x2(this1.x - b.x,this1.y - b.y);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.lenSquare = function(this1) {
	return this1.x * this1.x + this1.y * this1.y;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.distance = function(this1) {
	return Math.pow(this1.x * this1.x + this1.y * this1.y,0.5);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.isLeft = function(this1,a,b) {
	return (b.x - a.x) * (this1.y - a.y) - (this1.x - a.x) * (b.y - a.y);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.triangleArea = function(a,b,c) {
	return Math.abs(((c.x - b.x) * (a.y - b.y) - (a.x - b.x) * (c.y - b.y)) / 2.);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.sign = function(n) {
	return Std.int(Math.abs(n) / n);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.thetaDifference = function(a,b) {
	var dx = a.x - b.x;
	var dy = a.y - b.y;
	return Math.atan2(dy,dx);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.inTri = function(this1,a,b,c) {
	var planeAB = (a.x - this1.x) * (b.y - this1.y) - (b.x - this1.x) * (a.y - this1.y);
	var planeBC = (b.x - this1.x) * (c.y - this1.y) - (c.x - this1.x) * (b.y - this1.y);
	var planeCA = (c.x - this1.x) * (a.y - this1.y) - (a.x - this1.x) * (c.y - this1.y);
	if(Std.int(Math.abs(planeAB) / planeAB) == Std.int(Math.abs(planeBC) / planeBC)) {
		return Std.int(Math.abs(planeBC) / planeBC) == Std.int(Math.abs(planeCA) / planeCA);
	} else {
		return false;
	}
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.inTri2 = function(this1,a,b,c) {
	var v0x = c.x - a.x;
	var v0y = c.y - a.y;
	var v1x = b.x - a.x;
	var v1y = b.y - a.y;
	var v2x = this1.x - a.x;
	var v2y = this1.y - a.y;
	var dot00 = v0x * v0x + v0y * v0y;
	var dot01 = v0x * v1x + v0y * v1y;
	var dot02 = v0x * v2x + v0y * v2y;
	var dot11 = v1x * v1x + v1y * v1y;
	var dot12 = v1x * v2x + v1y * v2y;
	var invDenom = 1 / (dot00 * dot11 - dot01 * dot01);
	var u = (dot11 * dot02 - dot01 * dot12) * invDenom;
	var v = (dot00 * dot12 - dot01 * dot02) * invDenom;
	if(u >= 0 && v >= 0) {
		return u + v < 1;
	} else {
		return false;
	}
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.inRect = function(this1,b,c) {
	var small = 0.0000000001;
	var minx = Math.min(b.x,c.x);
	var maxx = Math.max(b.x,c.x);
	var miny = Math.min(b.y,c.y);
	var maxy = Math.max(b.y,c.y);
	if(minx == maxx) {
		if(miny <= this1.y) {
			return this1.y <= maxy;
		} else {
			return false;
		}
	} else if(miny == maxy) {
		if(minx <= this1.x) {
			return this1.x <= maxx;
		} else {
			return false;
		}
	} else if(minx <= this1.x + small && this1.x - small <= maxx && miny <= this1.y + small) {
		return this1.y - small <= maxy;
	} else {
		return false;
	}
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.convex = function(a,b,c) {
	return (a.y - b.y) * (c.x - b.x) + (b.x - a.x) * (c.y - b.y) >= 0;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.cross = function(a,b) {
	return a.x * b.y - a.y * b.x;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.theta = function(this1) {
	return Math.atan2(this1.y,this1.x);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.close = function(this1,b,delta) {
	if(delta == null) {
		delta = 0.00001;
	}
	var dx = this1.x - b.x;
	if(dx < 0.00001 || dx > -1e-05) {
		var dy = this1.y - b.y;
		if(!(dy < 0.00001)) {
			return dy > -1e-05;
		} else {
			return true;
		}
	} else {
		return false;
	}
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.xClose = function(this1,b,delta) {
	if(delta == null) {
		delta = 0.00001;
	}
	var dx = this1.x - b.x;
	if(!(dx < delta)) {
		return dx > -delta;
	} else {
		return true;
	}
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.yClose = function(this1,b,delta) {
	if(delta == null) {
		delta = 0.00001;
	}
	var dy = this1.y - b.y;
	if(!(dy < delta)) {
		return dy > -delta;
	} else {
		return true;
	}
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.pivotAround = function(this1,omega,pivot) {
	var px = this1.x - pivot.x;
	var py = this1.y - pivot.y;
	var px2 = px * Math.cos(omega) - py * Math.sin(omega);
	py = py * Math.cos(omega) + px * Math.sin(omega);
	var this2 = new geom_structure_Mat1x2(px2 + pivot.x,py + pivot.y);
	return this2;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.toTpoint = function(this1) {
	return geom_matrix_Conversion._1x2toTpoint(this1);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.toVec3 = function(this1) {
	return geom_matrix_Conversion._1x2toVec3(this1);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.fromVec3 = function(v) {
	return geom_matrix_Conversion.Vectorto1x2(v);
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.fromArrayPos = function(arr,pos) {
	var this1 = new geom_structure_Mat1x2(arr[pos],arr[pos + 1]);
	return this1;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.toArrayPos = function(this1,arr,pos) {
	arr[pos] = this1.x;
	arr[pos + 1] = this1.y;
	return arr;
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.readItem = function(this1,k) {
	switch(k) {
	case 0:
		return this1.x;
	case 1:
		return this1.y;
	default:
		throw new js__$Boot_HaxeError("use index less than 2");
	}
};
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.writeItem = function(this1,k,v) {
	switch(k) {
	case 0:
		this1.x = v;
		break;
	case 1:
		this1.y = v;
		break;
	default:
		throw new js__$Boot_HaxeError("use index less than 2");
	}
	return v;
};
var geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$ = {};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.__name__ = "geom.matrix._Matrix1x3.Matrix1x3_Impl_";
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.__properties__ = {get_testCount:"get_testCount",get_counting:"get_counting",get_minus1:"get_minus1",get_one:"get_one",get_unit:"get_unit",get_nought:"get_nought",get_zero:"get_zero",set_magnitude:"set_magnitude",get_magnitude:"get_magnitude",get_self:"get_self"};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.clone = function(this1) {
	var this2 = new geom_structure_Mat1x3(this1.x,this1.y,this1.z);
	return this2;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.iterator = function(this1) {
	return HxOverrides.iter([this1.x,this1.y,this1.z]);
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.get_self = function(this1) {
	return this1;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.get_magnitude = function(this1) {
	return Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z);
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.set_magnitude = function(this1,length) {
	var currentLength = Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z);
	if(currentLength == 0.) {
		return 0.;
	} else {
		var mul = length / currentLength;
		this1.x *= mul;
		this1.y *= mul;
		this1.z *= mul;
		return Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z);
	}
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.normalize = function(this1) {
	var currentLength = Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z);
	if(currentLength != 0.) {
		var mul = 1. / currentLength;
		this1.x *= mul;
		this1.y *= mul;
		this1.z *= mul;
		var tmp = this1.x * this1.x + this1.y * this1.y + this1.z * this1.z;
	}
	return this1;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_Mat1x3(0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.get_nought = function(this1) {
	var this2 = new geom_structure_Mat1x3(0.,0.,0.);
	return this2;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.get_unit = function() {
	var this1 = new geom_structure_Mat1x3(1.,1.,1.);
	return this1;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.get_one = function(this1) {
	var this2 = new geom_structure_Mat1x3(1.,1.,1.);
	return this2;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.get_minus1 = function() {
	var this1 = new geom_structure_Mat1x3(1.,1.,1.);
	var a = this1;
	var this2 = new geom_structure_Mat1x3(-a.x,-a.y,-a.z);
	return this2;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.get_counting = function() {
	var this1 = new geom_structure_Mat1x3(1.,2.,3.);
	return this1;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.get_testCount = function(this1) {
	var this2 = new geom_structure_Mat1x3(1.,2.,3.);
	return this2;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.identity = function(out) {
	out.x = 1.;
	out.y = 1.;
	out.z = 1.;
	return out;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.copy = function(pin,pout) {
	pout.x = pin.x;
	pout.y = pin.y;
	pout.z = pin.z;
	return pout;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.magnitudeSquared = function(this1) {
	return this1.x * this1.x + this1.y * this1.y + this1.z * this1.z;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.scalarProduct = function(a,b) {
	return a.x * b.x + a.y * b.y + a.z * b.z;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.dotProd = function(this1,b) {
	return this1.x * b.x + this1.y * b.y + this1.z * b.z;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.transformPoint = function(this1,t) {
	var this2 = new geom_structure_Mat1x3(t.a * this1.x + t.b * this1.y + t.c * this1.z + t.d,t.e * this1.x + t.f * this1.y + t.g * this1.z + t.h,t.i * this1.x + t.j * this1.y + t.k * this1.z + t.l);
	return this2;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.cross = function(this1,v) {
	var this2 = new geom_structure_Mat1x3(this1.y * v.z - this1.z * v.y,this1.z * v.x - this1.x * v.z,this1.x * v.y - this1.y * v.x);
	return this2;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.divide = function(a,v) {
	var v1 = 1 / v;
	var this1 = new geom_structure_Mat1x3(a.x * v1,a.y * v1,a.z * v1);
	return this1;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.divide2 = function(v,a) {
	var this1 = new geom_structure_Mat1x3(v / a.x,v / a.y,v / a.z);
	return this1;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.notEqual = function(a,b) {
	var delta = 0.0000001;
	return !(!(Math.abs(a.x - b.x) >= delta || Math.abs(a.y - b.y) >= delta || Math.abs(a.z - b.z) >= delta));
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.negating = function(a) {
	var this1 = new geom_structure_Mat1x3(-a.x,-a.y,-a.z);
	return this1;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.negate = function(this1) {
	var this2 = new geom_structure_Mat1x3(-this1.x,-this1.y,-this1.z);
	return this2;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.subtracting = function(a,b) {
	var this1 = new geom_structure_Mat1x3(a.x - b.x,a.y - b.y,a.z - b.z);
	return this1;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.subtract = function(this1,b) {
	var this2 = new geom_structure_Mat1x3(this1.x - b.x,this1.y - b.y,this1.z - b.z);
	return this2;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.adding = function(a,b) {
	var this1 = new geom_structure_Mat1x3(a.x + b.x,a.y + b.y,a.z + b.z);
	return this1;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.add = function(this1,b) {
	var this2 = new geom_structure_Mat1x3(this1.x + b.x,this1.y + b.y,this1.z + b.z);
	return this2;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.scaleMultiplying = function(a,v) {
	var this1 = new geom_structure_Mat1x3(a.x * v,a.y * v,a.z * v);
	return this1;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.scaleMultiply = function(this1,v) {
	var this2 = new geom_structure_Mat1x3(this1.x * v,this1.y * v,this1.z * v);
	return this2;
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.isEqualling = function(a,b) {
	var delta = 0.0000001;
	return !(Math.abs(a.x - b.x) >= delta || Math.abs(a.y - b.y) >= delta || Math.abs(a.z - b.z) >= delta);
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.isEqual = function(this1,b) {
	var delta = 0.0000001;
	return !(Math.abs(this1.x - b.x) >= delta || Math.abs(this1.y - b.y) >= delta || Math.abs(this1.z - b.z) >= delta);
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.fromVec = function(vec) {
	return geom_matrix_Conversion.Vectorto1x3(vec);
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.staticFromVec = function(this1,vec) {
	return geom_matrix_Conversion.Vectorto1x3(vec);
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.toVector = function(this1) {
	return geom_matrix_Conversion._1x3toVector(this1);
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.fromArray = function(arr) {
	return geom_matrix_Conversion.Arrayto1x3(arr);
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.staticFromArray = function(this1,arr) {
	return geom_matrix_Conversion.Arrayto1x3(arr);
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.toArray = function(this1) {
	return geom_matrix_Conversion._1x3toArray(this1);
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.readItem = function(this1,k) {
	switch(k) {
	case 0:
		return this1.x;
	case 1:
		return this1.y;
	case 2:
		return this1.z;
	default:
		throw new js__$Boot_HaxeError("index needs to be below 4");
	}
};
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.writeItem = function(this1,k,v) {
	switch(k) {
	case 0:
		this1.x = v;
		break;
	case 1:
		this1.y = v;
		break;
	case 3:
		this1.z = v;
		break;
	default:
		throw new js__$Boot_HaxeError("index needs to be below 4");
	}
	return v;
};
var geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$ = {};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.__name__ = "geom.matrix._Matrix1x4.Matrix1x4_Impl_";
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.__properties__ = {get_testCount:"get_testCount",get_counting:"get_counting",get_minus1:"get_minus1",get_one:"get_one",get_unit:"get_unit",get_nought:"get_nought",get_zero:"get_zero",set_magnitude:"set_magnitude",get_magnitude:"get_magnitude",get_self:"get_self"};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.clone = function(this1) {
	var this2 = new geom_structure_Mat1x4(this1.x,this1.y,this1.z,this1.w);
	return this2;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.iterator = function(this1) {
	var arr = [this1.x,this1.y,this1.z,this1.w];
	return HxOverrides.iter(arr);
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.get_self = function(this1) {
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.get_magnitude = function(this1) {
	return Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w);
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.set_magnitude = function(this1,length) {
	var currentLength = Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w);
	if(currentLength == 0.) {
		return 0.;
	} else {
		var mul = length / currentLength;
		this1.x *= mul;
		this1.y *= mul;
		this1.z *= mul;
		this1.w *= mul;
		return Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w);
	}
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.normalize = function(this1) {
	var currentLength = Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w);
	if(currentLength != 0.) {
		var mul = 1. / currentLength;
		this1.x *= mul;
		this1.y *= mul;
		this1.z *= mul;
		this1.w *= mul;
		var tmp = this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w;
	}
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_Mat1x4(0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.get_nought = function(this1) {
	var this2 = new geom_structure_Mat1x4(0.,0.,0.,0.);
	return this2;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.get_unit = function() {
	var this1 = new geom_structure_Mat1x4(1.,1.,1.,1.);
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.get_one = function(this1) {
	var this2 = new geom_structure_Mat1x4(1.,1.,1.,1.);
	return this2;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.get_minus1 = function() {
	var this1 = new geom_structure_Mat1x4(1.,1.,1.,1.);
	var a = this1;
	var this2 = new geom_structure_Mat1x4(-a.x,-a.y,-a.z,-a.w);
	return this2;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.get_counting = function() {
	var this1 = new geom_structure_Mat1x4(1.,2.,3.,4.);
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.get_testCount = function(this1) {
	var this2 = new geom_structure_Mat1x4(1.,2.,3.,4.);
	return this2;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.negating = function(a) {
	var this1 = new geom_structure_Mat1x4(-a.x,-a.y,-a.z,-a.w);
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.negate = function(this1) {
	var this2 = new geom_structure_Mat1x4(-this1.x,-this1.y,-this1.z,-this1.w);
	return this2;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.subtracting = function(a,b) {
	var this1 = new geom_structure_Mat1x4(a.x - b.x,a.y - b.y,a.z - b.z,a.w - b.w);
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.subtract = function(this1,b) {
	var this2 = new geom_structure_Mat1x4(this1.x - b.x,this1.y - b.y,this1.z - b.z,this1.w - b.w);
	return this2;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.adding = function(a,b) {
	var this1 = new geom_structure_Mat1x4(a.x + b.x,a.y + b.y,a.z + b.z,a.w + b.w);
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.add = function(this1,b) {
	var this2 = new geom_structure_Mat1x4(this1.x + b.x,this1.y + b.y,this1.z + b.z,this1.w + b.w);
	return this2;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.scaleMultiplying = function(a,v) {
	var this1 = new geom_structure_Mat1x4(a.x * v,a.y * v,a.z * v,a.w * v);
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.scaleMultiply = function(this1,v) {
	var this2 = new geom_structure_Mat1x4(this1.x * v,this1.y * v,this1.z * v,this1.w * v);
	return this2;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.isEqualling = function(a,b) {
	var delta = 0.0000001;
	return !(Math.abs(a.x - b.x) >= delta || Math.abs(a.y - b.y) >= delta || Math.abs(a.z - b.z) >= delta || Math.abs(a.w - b.w) >= delta);
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.isEqual = function(this1,b) {
	var delta = 0.0000001;
	return !(Math.abs(this1.x - b.x) >= delta || Math.abs(this1.y - b.y) >= delta || Math.abs(this1.z - b.z) >= delta || Math.abs(this1.w - b.w) >= delta);
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.identity = function(out) {
	out.x = 1.;
	out.y = 1.;
	out.z = 1.;
	out.w = 1.;
	return out;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.copy = function(pin,pout) {
	pout.x = pin.x;
	pout.y = pin.y;
	pout.z = pin.z;
	pout.w = pin.w;
	return pout;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.projectPoint = function(this1) {
	if(this1.z <= 0) {
		var this2 = new geom_structure_Mat1x4(0.,0.,this1.z,1.);
		return this2;
	} else {
		var this3 = new geom_structure_Mat1x4(this1.x / this1.z,this1.y / this1.z,this1.z,1.);
		return this3;
	}
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.notEqual = function(a,b) {
	var delta = 0.0000001;
	return !(!(Math.abs(a.x - b.x) >= delta || Math.abs(a.y - b.y) >= delta || Math.abs(a.z - b.z) >= delta || Math.abs(a.w - b.w) >= delta));
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.magnitudeSquared = function(this1) {
	return this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.scalarProduct = function(a,b) {
	return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.dotProd = function(this1,b) {
	return this1.x * b.x + this1.y * b.y + this1.z * b.z + this1.w * b.w;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.rotateX = function(this1,theta) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this3 = this2;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this4 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,c,-s,0.,0.,s,c,0.);
	var s1 = this4;
	var this5 = new geom_structure_Mat4x3(this3.a * s1.a + this3.b * s1.e + this3.c * s1.i,this3.a * s1.b + this3.b * s1.f + this3.c * s1.j,this3.a * s1.c + this3.b * s1.g + this3.c * s1.k,this3.a * s1.d + this3.b * s1.h + this3.c * s1.l + this3.d,this3.e * s1.a + this3.f * s1.e + this3.g * s1.i,this3.e * s1.b + this3.f * s1.f + this3.g * s1.j,this3.e * s1.c + this3.f * s1.g + this3.g * s1.k,this3.e * s1.d + this3.f * s1.h + this3.g * s1.l + this3.h,this3.i * s1.a + this3.j * s1.e + this3.k * s1.i,this3.i * s1.b + this3.j * s1.f + this3.k * s1.j,this3.i * s1.c + this3.j * s1.g + this3.k * s1.k,this3.i * s1.d + this3.j * s1.h + this3.k * s1.l + this3.l);
	var t = this5;
	var this6 = new geom_structure_Mat1x4(t.a * this1.x + t.b * this1.y + t.c * this1.z + t.d,t.e * this1.x + t.f * this1.y + t.g * this1.z + t.h,t.i * this1.x + t.j * this1.y + t.k * this1.z + t.l,1.);
	return this6;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.rotateY = function(this1,theta) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this3 = this2;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this4 = new geom_structure_Mat4x3(c,0.,s,0.,0.,1.,0.,0.,-s,0.,c,0.);
	var s1 = this4;
	var this5 = new geom_structure_Mat4x3(this3.a * s1.a + this3.b * s1.e + this3.c * s1.i,this3.a * s1.b + this3.b * s1.f + this3.c * s1.j,this3.a * s1.c + this3.b * s1.g + this3.c * s1.k,this3.a * s1.d + this3.b * s1.h + this3.c * s1.l + this3.d,this3.e * s1.a + this3.f * s1.e + this3.g * s1.i,this3.e * s1.b + this3.f * s1.f + this3.g * s1.j,this3.e * s1.c + this3.f * s1.g + this3.g * s1.k,this3.e * s1.d + this3.f * s1.h + this3.g * s1.l + this3.h,this3.i * s1.a + this3.j * s1.e + this3.k * s1.i,this3.i * s1.b + this3.j * s1.f + this3.k * s1.j,this3.i * s1.c + this3.j * s1.g + this3.k * s1.k,this3.i * s1.d + this3.j * s1.h + this3.k * s1.l + this3.l);
	var t = this5;
	var this6 = new geom_structure_Mat1x4(t.a * this1.x + t.b * this1.y + t.c * this1.z + t.d,t.e * this1.x + t.f * this1.y + t.g * this1.z + t.h,t.i * this1.x + t.j * this1.y + t.k * this1.z + t.l,1.);
	return this6;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.rotateZ = function(this1,theta) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this3 = this2;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this4 = new geom_structure_Mat4x3(c,-s,0.,0.,s,c,0.,0.,0.,0.,1.,0.);
	var s1 = this4;
	var this5 = new geom_structure_Mat4x3(this3.a * s1.a + this3.b * s1.e + this3.c * s1.i,this3.a * s1.b + this3.b * s1.f + this3.c * s1.j,this3.a * s1.c + this3.b * s1.g + this3.c * s1.k,this3.a * s1.d + this3.b * s1.h + this3.c * s1.l + this3.d,this3.e * s1.a + this3.f * s1.e + this3.g * s1.i,this3.e * s1.b + this3.f * s1.f + this3.g * s1.j,this3.e * s1.c + this3.f * s1.g + this3.g * s1.k,this3.e * s1.d + this3.f * s1.h + this3.g * s1.l + this3.h,this3.i * s1.a + this3.j * s1.e + this3.k * s1.i,this3.i * s1.b + this3.j * s1.f + this3.k * s1.j,this3.i * s1.c + this3.j * s1.g + this3.k * s1.k,this3.i * s1.d + this3.j * s1.h + this3.k * s1.l + this3.l);
	var t = this5;
	var this6 = new geom_structure_Mat1x4(t.a * this1.x + t.b * this1.y + t.c * this1.z + t.d,t.e * this1.x + t.f * this1.y + t.g * this1.z + t.h,t.i * this1.x + t.j * this1.y + t.k * this1.z + t.l,1.);
	return this6;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.translateXY = function(this1,x,y) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this3 = this2;
	var this4 = new geom_structure_Mat4x3(1.,0.,0.,x,0.,1.,0.,y,0.,0.,1.,0.);
	var s = this4;
	var this5 = new geom_structure_Mat4x3(this3.a * s.a + this3.b * s.e + this3.c * s.i,this3.a * s.b + this3.b * s.f + this3.c * s.j,this3.a * s.c + this3.b * s.g + this3.c * s.k,this3.a * s.d + this3.b * s.h + this3.c * s.l + this3.d,this3.e * s.a + this3.f * s.e + this3.g * s.i,this3.e * s.b + this3.f * s.f + this3.g * s.j,this3.e * s.c + this3.f * s.g + this3.g * s.k,this3.e * s.d + this3.f * s.h + this3.g * s.l + this3.h,this3.i * s.a + this3.j * s.e + this3.k * s.i,this3.i * s.b + this3.j * s.f + this3.k * s.j,this3.i * s.c + this3.j * s.g + this3.k * s.k,this3.i * s.d + this3.j * s.h + this3.k * s.l + this3.l);
	var t = this5;
	var this6 = new geom_structure_Mat1x4(t.a * this1.x + t.b * this1.y + t.c * this1.z + t.d,t.e * this1.x + t.f * this1.y + t.g * this1.z + t.h,t.i * this1.x + t.j * this1.y + t.k * this1.z + t.l,1.);
	return this6;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.translateXYZ = function(this1,x,y,z) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this3 = this2;
	var this4 = new geom_structure_Mat4x3(1.,0.,0.,x,0.,1.,0.,y,0.,0.,1.,z);
	var s = this4;
	var this5 = new geom_structure_Mat4x3(this3.a * s.a + this3.b * s.e + this3.c * s.i,this3.a * s.b + this3.b * s.f + this3.c * s.j,this3.a * s.c + this3.b * s.g + this3.c * s.k,this3.a * s.d + this3.b * s.h + this3.c * s.l + this3.d,this3.e * s.a + this3.f * s.e + this3.g * s.i,this3.e * s.b + this3.f * s.f + this3.g * s.j,this3.e * s.c + this3.f * s.g + this3.g * s.k,this3.e * s.d + this3.f * s.h + this3.g * s.l + this3.h,this3.i * s.a + this3.j * s.e + this3.k * s.i,this3.i * s.b + this3.j * s.f + this3.k * s.j,this3.i * s.c + this3.j * s.g + this3.k * s.k,this3.i * s.d + this3.j * s.h + this3.k * s.l + this3.l);
	var t = this5;
	var this6 = new geom_structure_Mat1x4(t.a * this1.x + t.b * this1.y + t.c * this1.z + t.d,t.e * this1.x + t.f * this1.y + t.g * this1.z + t.h,t.i * this1.x + t.j * this1.y + t.k * this1.z + t.l,1.);
	return this6;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.transformPoint = function(this1,t) {
	var this2 = new geom_structure_Mat1x4(t.a * this1.x + t.b * this1.y + t.c * this1.z + t.d,t.e * this1.x + t.f * this1.y + t.g * this1.z + t.h,t.i * this1.x + t.j * this1.y + t.k * this1.z + t.l,1.);
	return this2;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.divide = function(a,v) {
	var v1 = 1 / v;
	var this1 = new geom_structure_Mat1x4(a.x * v1,a.y * v1,a.z * v1,a.w * v1);
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.divide2 = function(v,a) {
	var this1 = new geom_structure_Mat1x4(v / a.x,v / a.y,v / a.z,v / a.w);
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.conjugate = function(a) {
	var this1 = new geom_structure_Mat1x4(-a.x,-a.y,-a.z,a.w);
	return this1;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.multiplyV = function(a,b,out) {
	var ax = a.x;
	var ay = a.y;
	var az = a.z;
	var aw = a.w;
	var bx = b.x;
	var by = b.y;
	var bz = b.z;
	var bw = b.w;
	out.x = ax * bw + aw * bx + ay * bz - az * by;
	out.y = ay * bw + aw * by + az * bx - ax * bz;
	out.z = az * bw + aw * bz + ax * by - ay * bx;
	out.w = aw * bw - ax * bx - ay * by - az * bz;
	return out;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.multiplyQ = function(q,v,out) {
	var vx = v.x;
	var vy = v.y;
	var vz = v.z;
	var qx = q.x;
	var qy = q.y;
	var qz = q.z;
	var qw = q.w;
	out.w = -qx * vx - qy * vy - qz * vz;
	out.x = qw * vx + qy * vz - qz * vy;
	out.y = qw * vy - qx * vz + qz * vx;
	out.z = qw * vz + qx * vy - qy * vx;
	return out;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.cross = function(this1,v) {
	var this2 = new geom_structure_Mat1x4(this1.y * v.z - this1.z * v.y,this1.z * v.x - this1.x * v.z,this1.x * v.y - this1.y * v.x,this1.w * v.w);
	return this2;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.constrainDistance = function(this1,anchor,distance) {
	var this2 = new geom_structure_Mat1x4(this1.x - anchor.x,this1.y - anchor.y,this1.z - anchor.z,this1.w - anchor.w);
	var this3 = this2;
	var currentLength = Math.sqrt(this3.x * this3.x + this3.y * this3.y + this3.z * this3.z + this3.w * this3.w);
	if(currentLength != 0.) {
		var mul = 1. / currentLength;
		this3.x *= mul;
		this3.y *= mul;
		this3.z *= mul;
		this3.w *= mul;
		var tmp = this3.x * this3.x + this3.y * this3.y + this3.z * this3.z + this3.w * this3.w;
	}
	var a = this3;
	var this4 = new geom_structure_Mat1x4(a.x * distance,a.y * distance,a.z * distance,a.w * distance);
	var a1 = this4;
	var this5 = new geom_structure_Mat1x4(a1.x + anchor.x,a1.y + anchor.y,a1.z + anchor.z,a1.w + anchor.w);
	return this5;
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.fromVec = function(vec) {
	return geom_matrix_Conversion.Vectorto1x4(vec);
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.toVector = function(this1) {
	return geom_matrix_Conversion._1x4toVector(this1);
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.fromArray = function(arr) {
	return geom_matrix_Conversion.Arrayto1x4(arr);
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.toArray = function(this1) {
	return geom_matrix_Conversion._1x4toArray(this1);
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.readItem = function(this1,k) {
	switch(k) {
	case 0:
		return this1.x;
	case 1:
		return this1.y;
	case 2:
		return this1.z;
	case 3:
		return this1.w;
	default:
		throw new js__$Boot_HaxeError("use index less than 4");
	}
};
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.writeItem = function(this1,k,v) {
	switch(k) {
	case 0:
		this1.x = v;
		break;
	case 1:
		this1.y = v;
		break;
	case 3:
		this1.z = v;
		break;
	case 4:
		this1.w = v;
		break;
	default:
		throw new js__$Boot_HaxeError("use index less than 4");
	}
	return v;
};
var geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$ = {};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.__name__ = "geom.matrix._Matrix2x2.Matrix2x2_Impl_";
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.__properties__ = {get_east:"get_east",get_west:"get_west",get_south:"get_south",get_north:"get_north",get_bottomRight:"get_bottomRight",get_bottomLeft:"get_bottomLeft",get_topRight:"get_topRight",get_topLeft:"get_topLeft",get__1234:"get__1234",get_testCount:"get_testCount",get_counting:"get_counting",get_minus1:"get_minus1",get_one:"get_one",get_unit:"get_unit",get_nought:"get_nought",get_zero:"get_zero",get_self:"get_self"};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.clone = function(this1) {
	var this2 = new geom_structure_Mat2x2(this1.a,this1.b,this1.c,this1.d);
	return this2;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.iterator = function(this1) {
	return HxOverrides.iter([this1.a,this1.b,this1.c,this1.d]);
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_self = function(this1) {
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_Mat2x2(0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_nought = function(this1) {
	var this2 = new geom_structure_Mat2x2(0.,0.,0.,0.);
	return this2;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_unit = function() {
	var this1 = new geom_structure_Mat2x2(1.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_one = function(this1) {
	var this2 = new geom_structure_Mat2x2(1.,0.,0.,1.);
	return this2;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_minus1 = function() {
	var this1 = new geom_structure_Mat2x2(1.,0.,0.,1.);
	var a = this1;
	var this2 = new geom_structure_Mat2x2(-a.a,-a.b,-a.c,-a.d);
	return this2;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_counting = function() {
	var this1 = new geom_structure_Mat2x2(1.,2.,3.,4.);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_testCount = function(this1) {
	var this2 = new geom_structure_Mat2x2(1.,2.,3.,4.);
	return this2;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get__1234 = function() {
	var this1 = new geom_structure_Mat2x2(1.,2.,3.,4.);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_topLeft = function() {
	var this1 = new geom_structure_Mat2x2(1.,0.,0.,-1.);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_topRight = function() {
	var this1 = new geom_structure_Mat2x2(1.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_bottomLeft = function() {
	var this1 = new geom_structure_Mat2x2(-1.,0.,0.,-1.);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_bottomRight = function() {
	var this1 = new geom_structure_Mat2x2(1.,0.,0.,-1.);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_north = function() {
	var this1 = new geom_structure_Mat2x2(0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_south = function() {
	var this1 = new geom_structure_Mat2x2(0.,0.,0.,-1.);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_west = function() {
	var this1 = new geom_structure_Mat2x2(-1.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.get_east = function() {
	var this1 = new geom_structure_Mat2x2(1.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.create = function(this1,a,b,c,d) {
	var this2 = new geom_structure_Mat2x2(a,b,c,d);
	this1 = this2;
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.scale = function(p) {
	var this1 = new geom_structure_Mat2x2(p.x,0.,0.,p.y);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.rotation = function(alpha) {
	var this1 = new geom_structure_Mat2x2(Math.cos(alpha),-Math.sin(alpha),Math.sin(alpha),Math.cos(alpha));
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.transpose = function(this1) {
	var this2 = new geom_structure_Mat2x2(this1.a,this1.c,this1.b,this1.d);
	return this2;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.negating = function(a) {
	var this1 = new geom_structure_Mat2x2(-a.a,-a.b,-a.c,-a.d);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.negate = function(this1) {
	var this2 = new geom_structure_Mat2x2(-this1.a,-this1.b,-this1.c,-this1.d);
	return this2;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.adding = function(a,b) {
	var this1 = new geom_structure_Mat2x2(a.a + b.a,a.b + b.b,a.c + b.c,a.d + b.d);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.add = function(this1,b) {
	var this2 = new geom_structure_Mat2x2(this1.a + b.a,this1.b + b.b,this1.c + b.c,this1.d + b.d);
	return this2;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.equal = function(a,b) {
	var delta = 0.0000001;
	return !(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta);
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.notEqual = function(a,b) {
	var delta = 0.0000001;
	return !(!(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta));
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.subtracting = function(a,b) {
	var this1 = new geom_structure_Mat2x2(a.a - b.a,a.b - b.b,a.c - b.c,a.d - b.d);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.subtract = function(this1,b) {
	var this2 = new geom_structure_Mat2x2(this1.a - b.a,this1.b - b.b,this1.c - b.c,this1.d - b.d);
	return this2;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.multiplyValue = function(v,m) {
	var this1 = new geom_structure_Mat2x2(m.a * v,m.b * v,m.c * v,m.d * v);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.scaleByVector2 = function(this1,p) {
	var this2 = new geom_structure_Mat2x2(this1.a * p.x,this1.b,this1.c,this1.d * p.y);
	return this2;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.multiply = function(a2,b2) {
	var this1 = new geom_structure_Mat2x2(a2.a * b2.a + a2.b * b2.c,a2.a * b2.b + a2.b * b2.d,a2.c * b2.a + a2.d * b2.c,a2.c * b2.b + a2.d * b2.d);
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.multiplyPoint = function(this1,p) {
	var x = this1.a * p.x + this1.c * p.y;
	var y = this1.b * p.x + this1.d * p.y;
	var this2 = new geom_structure_Mat1x2(x,y);
	return this2;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.det = function(this1) {
	return this1.a * this1.d - this1.b * this1.c;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.inverse = function(this1) {
	var d = this1.a * this1.d - this1.b * this1.c;
	if(d == 0) {
		return null;
	} else {
		var this2 = new geom_structure_Mat2x2(this1.d,-this1.b,-this1.c,this1.a);
		var adj = this2;
		var v = 1 / d;
		var this3 = new geom_structure_Mat2x2(adj.a * v,adj.b * v,adj.c * v,adj.d * v);
		return this3;
	}
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.to3x3 = function(this1) {
	return geom_matrix_Conversion._2x2to3x3(this1);
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.to4x3 = function(this1) {
	return geom_matrix_Conversion._2x2to4x3(this1);
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.from3x3 = function(m3) {
	return geom_matrix_Conversion._3x3to2x2(m3);
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.from4x3 = function(m4) {
	return geom_matrix_Conversion._4x3to2x2(m4);
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.fromArr = function(arr) {
	return geom_matrix_Conversion.Arrayto2x2(arr);
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.toArray = function(this1) {
	return geom_matrix_Conversion._2x2toArray(this1);
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.fromVec = function(vec) {
	return geom_matrix_Conversion.Vectorto2x2(vec);
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.toVector = function(this1) {
	return geom_matrix_Conversion._2x2toVector(this1);
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.setXY = function(this1,x,y,v) {
	switch(x) {
	case 0:
		switch(y) {
		case 0:
			this1.a = v;
			break;
		case 1:
			this1.c = v;
			break;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix2x2");
		}
		break;
	case 1:
		switch(y) {
		case 0:
			this1.b = v;
			break;
		case 1:
			this1.d = v;
			break;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix2x2");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix2x2");
	}
	return this1;
};
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.getXY = function(this1,x,y) {
	switch(x) {
	case 0:
		switch(y) {
		case 0:
			return this1.a;
		case 1:
			return this1.c;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix2x2");
		}
		break;
	case 1:
		switch(y) {
		case 0:
			return this1.b;
		case 1:
			return this1.d;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix2x2");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix2x2");
	}
};
var geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$ = {};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.__name__ = "geom.matrix._Matrix3x3.Matrix3x3_Impl_";
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.__properties__ = {get__123456789:"get__123456789",get_testCount:"get_testCount",get_counting:"get_counting",get_minus1:"get_minus1",get_one:"get_one",get_unit:"get_unit",get_nought:"get_nought",get_zero:"get_zero",get_self:"get_self"};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.clone = function(this1) {
	var this2 = new geom_structure_Mat3x3(this1.a,this1.b,this1.c,this1.d,this1.e,this1.f,this1.g,this1.h,this1.i);
	return this2;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.iterator = function(this1) {
	var arr = [this1.a,this1.b,this1.c,this1.d,this1.e,this1.f,this1.g,this1.h,this1.i];
	return HxOverrides.iter(arr);
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.get_self = function(this1) {
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_Mat3x3(0.,0.,0.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.get_nought = function(this1) {
	var this2 = new geom_structure_Mat3x3(0.,0.,0.,0.,0.,0.,0.,0.,0.);
	return this2;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.get_unit = function() {
	var this1 = new geom_structure_Mat3x3(1.,0.,0.,0.,1.,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.get_one = function(this1) {
	var this2 = new geom_structure_Mat3x3(1.,0.,0.,0.,1.,0.,0.,0.,1.);
	return this2;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.get_minus1 = function() {
	var this1 = new geom_structure_Mat3x3(1.,0.,0.,0.,1.,0.,0.,0.,1.);
	var a = this1;
	var this2 = new geom_structure_Mat3x3(-a.a,-a.b,-a.c,-a.d,-a.e,-a.f,-a.g,-a.h,-a.i);
	return this2;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.get_counting = function() {
	var this1 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.get_testCount = function(this1) {
	var this2 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
	return this2;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.get__123456789 = function() {
	var this1 = new geom_structure_Mat3x3(1.,2.,3.,4.,5.,6.,7.,8.,9.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.radianX = function(theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this1 = new geom_structure_Mat3x3(1.,0.,0.,0.,c,-s,0.,s,c);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.rotateX = function(this1,theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this2 = new geom_structure_Mat3x3(1.,0.,0.,0.,c,-s,0.,s,c);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.radianY = function(theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this1 = new geom_structure_Mat3x3(c,0.,s,0.,1.,0,-s,0.,c);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.rotateY = function(this1,theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this2 = new geom_structure_Mat3x3(c,0.,s,0.,1.,0,-s,0.,c);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.radianZ = function(theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this1 = new geom_structure_Mat3x3(c,-s,0.,s,c,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.rotateZ = function(this1,theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this2 = new geom_structure_Mat3x3(c,-s,0.,s,c,0.,0.,0.,1.);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.rotate = function(this1,theta) {
	var theta1 = -theta;
	var c = Math.cos(theta1);
	var s = Math.sin(theta1);
	var this2 = new geom_structure_Mat3x3(c,-s,0.,s,c,0.,0.,0.,1.);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.xShear = function(theta) {
	var this1 = new geom_structure_Mat3x3(1.,Math.tan(theta),0.,0,1.,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.shearX = function(this1,theta) {
	var this2 = new geom_structure_Mat3x3(1.,Math.tan(theta),0.,0,1.,0.,0.,0.,1.);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.yShear = function(theta) {
	var this1 = new geom_structure_Mat3x3(1.,0.,0.,Math.tan(theta),1.,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.shearY = function(this1,theta) {
	var this2 = new geom_structure_Mat3x3(1.,0.,0.,Math.tan(theta),1.,0.,0.,0.,1.);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.xFlip = function() {
	var this1 = new geom_structure_Mat3x3(1.,0.,0.,0,-1.,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.flipX = function(this1) {
	var this2 = new geom_structure_Mat3x3(1.,0.,0.,0,-1.,0.,0.,0.,1.);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.yFlip = function() {
	var this1 = new geom_structure_Mat3x3(-1.,0.,0.,0,1.,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.flipY = function(this1) {
	var this2 = new geom_structure_Mat3x3(-1.,0.,0.,0,1.,0.,0.,0.,1.);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.xyFlip = function() {
	var this1 = new geom_structure_Mat3x3(-1.,0.,0.,0,-1.,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.flipXY = function(this1) {
	var this2 = new geom_structure_Mat3x3(-1.,0.,0.,0,-1.,0.,0.,0.,1.);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.sxyz = function(x,y,z) {
	var this1 = new geom_structure_Mat3x3(x,0.,0.,0.,y,0.,0.,0.,z);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.scaleXYZ = function(this1,x,y,z) {
	var this2 = new geom_structure_Mat3x3(x,0.,0.,0.,y,0.,0.,0.,z);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.sx = function(x) {
	var this1 = new geom_structure_Mat3x3(x,0.,0.,0.,1.,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.scaleX = function(this1,x) {
	var this2 = new geom_structure_Mat3x3(x,0.,0.,0.,1.,0.,0.,0.,1.);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.sy = function(y) {
	var this1 = new geom_structure_Mat3x3(1.,0.,0.,0.,y,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.scaleY = function(this1,y) {
	var this2 = new geom_structure_Mat3x3(1.,0.,0.,0.,y,0.,0.,0.,1.);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.sz = function(z) {
	var this1 = new geom_structure_Mat3x3(1.,0.,0.,0.,1.,0.,0.,0.,z);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.scaleZ = function(this1,z) {
	var this2 = new geom_structure_Mat3x3(1.,0.,0.,0.,1.,0.,0.,0.,z);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.scale = function(this1,s) {
	var this2 = new geom_structure_Mat3x3(s,0.,0.,0.,s,0.,0.,0.,s);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	var q1 = this3;
	var this4 = new geom_structure_Mat3x3(this1.a * q1.a + this1.b * q1.d + this1.c * q1.g,this1.a * q1.b + this1.b * q1.e + this1.c * q1.h,this1.a * q1.c + this1.b * q1.f + this1.c * q1.i,this1.d * q1.a + this1.e * this1.d + this1.f * q1.g,this1.d * q1.b + this1.e * q1.e + this1.f * q1.h,this1.d * q1.c + this1.e * q1.f + this1.f * q1.i,this1.g * this1.a + this1.h * q1.d + this1.i * q1.g,this1.g * q1.b + this1.h * q1.e + this1.i * q1.h,this1.g * q1.c + this1.h * q1.f + this1.i * q1.i);
	return this4;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.scale2D = function(this1,s) {
	var this2 = new geom_structure_Mat3x3(s,0.,0.,0.,s,0.,0.,0.,1.);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.tx = function(x) {
	var this1 = new geom_structure_Mat3x3(1.,0.,x,0.,1.,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.translateX = function(this1,x) {
	var this2 = new geom_structure_Mat3x3(1.,0.,x,0.,1.,0.,0.,0.,1.);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.ty = function(y) {
	var this1 = new geom_structure_Mat3x3(1.,0.,0.,0.,1.,y,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.txy = function(x,y) {
	var this1 = new geom_structure_Mat3x3(1.,0.,x,0.,1.,y,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.translateXY = function(this1,x,y) {
	var this2 = new geom_structure_Mat3x3(1.,0.,x,0.,1.,y,0.,0.,1.);
	var q = this2;
	var this3 = new geom_structure_Mat3x3(this1.a * q.a + this1.b * q.d + this1.c * q.g,this1.a * q.b + this1.b * q.e + this1.c * q.h,this1.a * q.c + this1.b * q.f + this1.c * q.i,this1.d * q.a + this1.e * this1.d + this1.f * q.g,this1.d * q.b + this1.e * q.e + this1.f * q.h,this1.d * q.c + this1.e * q.f + this1.f * q.i,this1.g * this1.a + this1.h * q.d + this1.i * q.g,this1.g * q.b + this1.h * q.e + this1.i * q.h,this1.g * q.c + this1.h * q.f + this1.i * q.i);
	return this3;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.transpose = function(this1) {
	var this2 = new geom_structure_Mat3x3(this1.a,this1.d,this1.g,this1.b,this1.e,this1.h,this1.c,this1.f,this1.i);
	return this2;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.negating = function(a) {
	var this1 = new geom_structure_Mat3x3(-a.a,-a.b,-a.c,-a.d,-a.e,-a.f,-a.g,-a.h,-a.i);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.negate = function(this1) {
	var this2 = new geom_structure_Mat3x3(-this1.a,-this1.b,-this1.c,-this1.d,-this1.e,-this1.f,-this1.g,-this1.h,-this1.i);
	return this2;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.adding = function(a,b) {
	var this1 = new geom_structure_Mat3x3(a.a + b.a,a.b + b.b,a.c + b.c,a.d + b.d,a.e + b.e,a.f + b.f,a.d + b.d,a.h + b.h,a.i + b.i);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.add = function(this1,b) {
	var this2 = new geom_structure_Mat3x3(this1.a + b.a,this1.b + b.b,this1.c + b.c,this1.d + b.d,this1.e + b.e,this1.f + b.f,this1.d + b.d,this1.h + b.h,this1.i + b.i);
	return this2;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.subtracting = function(a,b) {
	var this1 = new geom_structure_Mat3x3(a.a - b.a,a.b - b.b,a.c - b.c,a.d - b.d,a.e - b.e,a.f - b.f,a.g - b.g,a.h - b.h,a.i - b.i);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.subtract = function(this1,b) {
	var this2 = new geom_structure_Mat3x3(this1.a - b.a,this1.b - b.b,this1.c - b.c,this1.d - b.d,this1.e - b.e,this1.f - b.f,this1.g - b.g,this1.h - b.h,this1.i - b.i);
	return this2;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.scaleVector4 = function(this1,p) {
	var this2 = new geom_structure_Mat3x3(this1.a * p.x,this1.b,this1.c,this1.d,this1.e * p.y,this1.f,this1.g,this1.h,this1.i * p.z);
	return this2;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.scaleVector2 = function(this1,p) {
	var this2 = new geom_structure_Mat3x3(this1.a * p.x,this1.b,this1.c,this1.d,this1.e * p.y,this1.f,this1.g,this1.h,this1.i);
	return this2;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.scaleVectorT3 = function(this1,p) {
	var this2 = new geom_structure_Mat3x3(this1.a * p.x,this1.b,this1.c,this1.d,this1.e * p.y,this1.f,this1.g,this1.h,this1.i * p.y);
	return this2;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.multiplyV = function(v,m) {
	var this1 = new geom_structure_Mat3x3(m.a * v,m.b * v,m.c * v,m.d * v,m.e * v,m.f * v,m.g * v,m.h * v,m.i * v);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.multiply = function(p,q) {
	var this1 = new geom_structure_Mat3x3(p.a * q.a + p.b * q.d + p.c * q.g,p.a * q.b + p.b * q.e + p.c * q.h,p.a * q.c + p.b * q.f + p.c * q.i,p.d * q.a + p.e * p.d + p.f * q.g,p.d * q.b + p.e * q.e + p.f * q.h,p.d * q.c + p.e * q.f + p.f * q.i,p.g * p.a + p.h * q.d + p.i * q.g,p.g * q.b + p.h * q.e + p.i * q.h,p.g * q.c + p.h * q.f + p.i * q.i);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.equal = function(a,b) {
	var delta = 0.0000001;
	return !(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta || Math.abs(a.e - b.e) >= delta || Math.abs(a.f - b.f) >= delta || Math.abs(a.g - b.g) >= delta || Math.abs(a.h - b.h) >= delta || Math.abs(a.i - b.i) >= delta);
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.isEqual = function(this1,b) {
	var delta = 0.0000001;
	return !(Math.abs(this1.a - b.a) >= delta || Math.abs(this1.b - b.b) >= delta || Math.abs(this1.c - b.c) >= delta || Math.abs(this1.d - b.d) >= delta || Math.abs(this1.e - b.e) >= delta || Math.abs(this1.f - b.f) >= delta || Math.abs(this1.g - b.g) >= delta || Math.abs(this1.h - b.h) >= delta || Math.abs(this1.i - b.i) >= delta);
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.notEqual = function(a,b) {
	var delta = 0.0000001;
	return !(!(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta || Math.abs(a.e - b.e) >= delta || Math.abs(a.f - b.f) >= delta || Math.abs(a.g - b.g) >= delta || Math.abs(a.h - b.h) >= delta || Math.abs(a.i - b.i) >= delta));
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.cofactor = function(this1,a,b,c,d) {
	return a * d - b * c;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.det = function(this1) {
	return this1.a * (this1.e * this1.i - this1.f * this1.h) - this1.b * (this1.d * this1.i - this1.f * this1.g) + this1.c * (this1.d * this1.h - this1.e * this1.g);
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.inverse = function(this1) {
	var d = this1.a * (this1.e * this1.i - this1.f * this1.h) - this1.b * (this1.d * this1.i - this1.f * this1.g) + this1.c * (this1.d * this1.h - this1.e * this1.g);
	if(d == 0) {
		return null;
	} else {
		var this2 = new geom_structure_Mat3x3(this1.e * this1.i - this1.f * this1.h,-(this1.d * this1.i - this1.f * this1.g),this1.d * this1.h - this1.e * this1.g,-(this1.b * this1.i - this1.c * this1.h),this1.a * this1.i - this1.c * this1.g,-(this1.a * this1.h - this1.b * this1.g),this1.b * this1.f - this1.c * this1.e,-(this1.a * this1.f - this1.c * this1.d),this1.a * this1.e - this1.b * this1.d);
		var adj = this2;
		var v = 1 / d;
		var this3 = new geom_structure_Mat3x3(adj.a * v,adj.b * v,adj.c * v,adj.d * v,adj.e * v,adj.f * v,adj.g * v,adj.h * v,adj.i * v);
		return this3;
	}
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.fromArr = function(arr) {
	return geom_matrix_Conversion.Arrayto3x3(arr);
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.toArray = function(this1) {
	return geom_matrix_Conversion._3x3toArray(this1);
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.to2x2 = function(this1) {
	return geom_matrix_Conversion._3x3to2x2(this1);
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.to3D = function(m2) {
	var this1 = new geom_structure_Mat3x3(m2.a,m2.b,0.,m2.c,m2.d,0.,0.,0,0.);
	return this1;
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.from2x2 = function(m2) {
	return geom_matrix_Conversion._2x2to3x3(m2);
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.to4x3 = function(this1) {
	return geom_matrix_Conversion._2x2to4x3(geom_matrix_Conversion._3x3to2x2(this1));
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.from4x3 = function(m4) {
	return geom_matrix_Conversion._4x3to3x3(geom_matrix_Conversion._3x3to4x3(geom_matrix_Conversion._4x3to3x3(m4)));
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.fromVec = function(vec) {
	return geom_matrix_Conversion.Vectorto3x3(vec);
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.toVector = function(this1) {
	return geom_matrix_Conversion._3x3toVector(this1);
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.setXY = function(this1,x,y,v) {
	switch(x) {
	case 0:
		switch(y) {
		case 0:
			return this1.a = v;
		case 1:
			return this1.b = v;
		case 2:
			return this1.c = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix3x3");
		}
		break;
	case 1:
		switch(y) {
		case 0:
			return this1.d = v;
		case 1:
			return this1.e = v;
		case 2:
			return this1.f = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix3x3");
		}
		break;
	case 2:
		switch(y) {
		case 0:
			return this1.g = v;
		case 1:
			return this1.h = v;
		case 2:
			return this1.i = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix3x3");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix3x3");
	}
};
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.getXY = function(this1,x,y) {
	switch(x) {
	case 0:
		switch(y) {
		case 0:
			return this1.a;
		case 1:
			return this1.b;
		case 2:
			return this1.c;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix3x3");
		}
		break;
	case 1:
		switch(y) {
		case 0:
			return this1.d;
		case 1:
			return this1.e;
		case 2:
			return this1.f;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix3x3");
		}
		break;
	case 2:
		switch(y) {
		case 0:
			return this1.g;
		case 1:
			return this1.h;
		case 2:
			return this1.i;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix3x3");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix3x3");
	}
};
var geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$ = {};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.__name__ = "geom.matrix._Matrix4x3.Matrix4x3_Impl_";
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.__properties__ = {get_backEast:"get_backEast",get_backWest:"get_backWest",get_backSouth:"get_backSouth",get_backNorth:"get_backNorth",get_backBottomRight:"get_backBottomRight",get_backBottomLeft:"get_backBottomLeft",get_backTopRight:"get_backTopRight",get_backTopLeft:"get_backTopLeft",get_back:"get_back",get_frontEast:"get_frontEast",get_frontWest:"get_frontWest",get_frontSouth:"get_frontSouth",get_frontBottomRight:"get_frontBottomRight",get_frontBottomLeft:"get_frontBottomLeft",get_frontTopRight:"get_frontTopRight",get_frontTopLeft:"get_frontTopLeft",get_frontNorth:"get_frontNorth",get_front:"get_front",get_east:"get_east",get_west:"get_west",get_south:"get_south",get_north:"get_north",get_bottomRight:"get_bottomRight",get_bottomLeft:"get_bottomLeft",get_topRight:"get_topRight",get_topLeft:"get_topLeft",get_testCount:"get_testCount",get_counting:"get_counting",get_minus1:"get_minus1",get_one:"get_one",get_unit:"get_unit",get_nought:"get_nought",get_zero:"get_zero",get_self:"get_self"};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.clone = function(this1) {
	var this2 = new geom_structure_Mat4x3(this1.a,this1.b,this1.c,this1.d,this1.e,this1.f,this1.g,this1.h,this1.i,this1.j,this1.k,this1.l);
	return this2;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.iterator = function(this1) {
	var arr = [this1.a,this1.b,this1.c,this1.d,this1.e,this1.f,this1.g,this1.h,this1.i,this1.j,this1.k,this1.l];
	return HxOverrides.iter(arr);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_self = function(this1) {
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_nought = function(this1) {
	var this2 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
	return this2;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_unit = function() {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_one = function(this1) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	return this2;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_minus1 = function() {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var a = this1;
	var this2 = new geom_structure_Mat4x3(-a.a,-a.b,-a.c,-a.d,-a.e,-a.f,-a.g,-a.h,-a.i,-a.j,-a.k,-a.l);
	return this2;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_counting = function() {
	var this1 = new geom_structure_Mat4x3(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_testCount = function(this1) {
	var this2 = new geom_structure_Mat4x3(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.);
	return this2;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_topLeft = function() {
	var this1 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_topRight = function() {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_bottomLeft = function() {
	var this1 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_bottomRight = function() {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_north = function() {
	var this1 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_south = function() {
	var this1 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_west = function() {
	var this1 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_east = function() {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_front = function() {
	var this1 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_frontNorth = function() {
	var this1 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_frontTopLeft = function() {
	var this1 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_frontTopRight = function() {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_frontBottomLeft = function() {
	var this1 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_frontBottomRight = function() {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_frontSouth = function() {
	var this1 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_frontWest = function() {
	var this1 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_frontEast = function() {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_back = function() {
	var this1 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_backTopLeft = function() {
	var this1 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,-1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_backTopRight = function() {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,-1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_backBottomLeft = function() {
	var this1 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_backBottomRight = function() {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_backNorth = function() {
	var this1 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,-1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_backSouth = function() {
	var this1 = new geom_structure_Mat4x3(0.,0.,0.,0.,0.,-1.,0.,0.,0.,0.,-1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_backWest = function() {
	var this1 = new geom_structure_Mat4x3(-1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.get_backEast = function() {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,0.,0.,0.,0.,0.,-1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.radianX = function(theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,c,-s,0.,0.,s,c,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.rotateX = function(this1,theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,c,-s,0.,0.,s,c,0.);
	var s1 = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s1.a + this1.b * s1.e + this1.c * s1.i,this1.a * s1.b + this1.b * s1.f + this1.c * s1.j,this1.a * s1.c + this1.b * s1.g + this1.c * s1.k,this1.a * s1.d + this1.b * s1.h + this1.c * s1.l + this1.d,this1.e * s1.a + this1.f * s1.e + this1.g * s1.i,this1.e * s1.b + this1.f * s1.f + this1.g * s1.j,this1.e * s1.c + this1.f * s1.g + this1.g * s1.k,this1.e * s1.d + this1.f * s1.h + this1.g * s1.l + this1.h,this1.i * s1.a + this1.j * s1.e + this1.k * s1.i,this1.i * s1.b + this1.j * s1.f + this1.k * s1.j,this1.i * s1.c + this1.j * s1.g + this1.k * s1.k,this1.i * s1.d + this1.j * s1.h + this1.k * s1.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.rotationX = function(theta) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this3 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,c,-s,0.,0.,s,c,0.);
	var s1 = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s1.a + this2.b * s1.e + this2.c * s1.i,this2.a * s1.b + this2.b * s1.f + this2.c * s1.j,this2.a * s1.c + this2.b * s1.g + this2.c * s1.k,this2.a * s1.d + this2.b * s1.h + this2.c * s1.l + this2.d,this2.e * s1.a + this2.f * s1.e + this2.g * s1.i,this2.e * s1.b + this2.f * s1.f + this2.g * s1.j,this2.e * s1.c + this2.f * s1.g + this2.g * s1.k,this2.e * s1.d + this2.f * s1.h + this2.g * s1.l + this2.h,this2.i * s1.a + this2.j * s1.e + this2.k * s1.i,this2.i * s1.b + this2.j * s1.f + this2.k * s1.j,this2.i * s1.c + this2.j * s1.g + this2.k * s1.k,this2.i * s1.d + this2.j * s1.h + this2.k * s1.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.radianY = function(theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this1 = new geom_structure_Mat4x3(c,0.,s,0.,0.,1.,0.,0.,-s,0.,c,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.rotateY = function(this1,theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this2 = new geom_structure_Mat4x3(c,0.,s,0.,0.,1.,0.,0.,-s,0.,c,0.);
	var s1 = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s1.a + this1.b * s1.e + this1.c * s1.i,this1.a * s1.b + this1.b * s1.f + this1.c * s1.j,this1.a * s1.c + this1.b * s1.g + this1.c * s1.k,this1.a * s1.d + this1.b * s1.h + this1.c * s1.l + this1.d,this1.e * s1.a + this1.f * s1.e + this1.g * s1.i,this1.e * s1.b + this1.f * s1.f + this1.g * s1.j,this1.e * s1.c + this1.f * s1.g + this1.g * s1.k,this1.e * s1.d + this1.f * s1.h + this1.g * s1.l + this1.h,this1.i * s1.a + this1.j * s1.e + this1.k * s1.i,this1.i * s1.b + this1.j * s1.f + this1.k * s1.j,this1.i * s1.c + this1.j * s1.g + this1.k * s1.k,this1.i * s1.d + this1.j * s1.h + this1.k * s1.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.rotationY = function(theta) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this3 = new geom_structure_Mat4x3(c,0.,s,0.,0.,1.,0.,0.,-s,0.,c,0.);
	var s1 = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s1.a + this2.b * s1.e + this2.c * s1.i,this2.a * s1.b + this2.b * s1.f + this2.c * s1.j,this2.a * s1.c + this2.b * s1.g + this2.c * s1.k,this2.a * s1.d + this2.b * s1.h + this2.c * s1.l + this2.d,this2.e * s1.a + this2.f * s1.e + this2.g * s1.i,this2.e * s1.b + this2.f * s1.f + this2.g * s1.j,this2.e * s1.c + this2.f * s1.g + this2.g * s1.k,this2.e * s1.d + this2.f * s1.h + this2.g * s1.l + this2.h,this2.i * s1.a + this2.j * s1.e + this2.k * s1.i,this2.i * s1.b + this2.j * s1.f + this2.k * s1.j,this2.i * s1.c + this2.j * s1.g + this2.k * s1.k,this2.i * s1.d + this2.j * s1.h + this2.k * s1.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.radianZ = function(theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this1 = new geom_structure_Mat4x3(c,-s,0.,0.,s,c,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.rotateZ = function(this1,theta) {
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this2 = new geom_structure_Mat4x3(c,-s,0.,0.,s,c,0.,0.,0.,0.,1.,0.);
	var s1 = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s1.a + this1.b * s1.e + this1.c * s1.i,this1.a * s1.b + this1.b * s1.f + this1.c * s1.j,this1.a * s1.c + this1.b * s1.g + this1.c * s1.k,this1.a * s1.d + this1.b * s1.h + this1.c * s1.l + this1.d,this1.e * s1.a + this1.f * s1.e + this1.g * s1.i,this1.e * s1.b + this1.f * s1.f + this1.g * s1.j,this1.e * s1.c + this1.f * s1.g + this1.g * s1.k,this1.e * s1.d + this1.f * s1.h + this1.g * s1.l + this1.h,this1.i * s1.a + this1.j * s1.e + this1.k * s1.i,this1.i * s1.b + this1.j * s1.f + this1.k * s1.j,this1.i * s1.c + this1.j * s1.g + this1.k * s1.k,this1.i * s1.d + this1.j * s1.h + this1.k * s1.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.rotationZ = function(theta) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var c = Math.cos(theta);
	var s = Math.sin(theta);
	var this3 = new geom_structure_Mat4x3(c,-s,0.,0.,s,c,0.,0.,0.,0.,1.,0.);
	var s1 = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s1.a + this2.b * s1.e + this2.c * s1.i,this2.a * s1.b + this2.b * s1.f + this2.c * s1.j,this2.a * s1.c + this2.b * s1.g + this2.c * s1.k,this2.a * s1.d + this2.b * s1.h + this2.c * s1.l + this2.d,this2.e * s1.a + this2.f * s1.e + this2.g * s1.i,this2.e * s1.b + this2.f * s1.f + this2.g * s1.j,this2.e * s1.c + this2.f * s1.g + this2.g * s1.k,this2.e * s1.d + this2.f * s1.h + this2.g * s1.l + this2.h,this2.i * s1.a + this2.j * s1.e + this2.k * s1.i,this2.i * s1.b + this2.j * s1.f + this2.k * s1.j,this2.i * s1.c + this2.j * s1.g + this2.k * s1.k,this2.i * s1.d + this2.j * s1.h + this2.k * s1.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.sxy = function(x,y) {
	var this1 = new geom_structure_Mat4x3(x,0.,0.,0.,0.,y,0.,0.,0.,0.,1,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scaleXY = function(this1,x,y) {
	var this2 = new geom_structure_Mat4x3(x,0.,0.,0.,0.,y,0.,0.,0.,0.,1,0.);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scalarXY = function(x,y) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var this3 = new geom_structure_Mat4x3(x,0.,0.,0.,0.,y,0.,0.,0.,0.,1,0.);
	var s = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s.a + this2.b * s.e + this2.c * s.i,this2.a * s.b + this2.b * s.f + this2.c * s.j,this2.a * s.c + this2.b * s.g + this2.c * s.k,this2.a * s.d + this2.b * s.h + this2.c * s.l + this2.d,this2.e * s.a + this2.f * s.e + this2.g * s.i,this2.e * s.b + this2.f * s.f + this2.g * s.j,this2.e * s.c + this2.f * s.g + this2.g * s.k,this2.e * s.d + this2.f * s.h + this2.g * s.l + this2.h,this2.i * s.a + this2.j * s.e + this2.k * s.i,this2.i * s.b + this2.j * s.f + this2.k * s.j,this2.i * s.c + this2.j * s.g + this2.k * s.k,this2.i * s.d + this2.j * s.h + this2.k * s.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.sxyz = function(x,y,z) {
	var this1 = new geom_structure_Mat4x3(x,0.,0.,0.,0.,y,0.,0.,0.,0.,z,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scaleXYZ = function(this1,x,y,z) {
	var this2 = new geom_structure_Mat4x3(x,0.,0.,0.,0.,y,0.,0.,0.,0.,z,0.);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scalarXYZ = function(x,y,z) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var this3 = new geom_structure_Mat4x3(x,0.,0.,0.,0.,y,0.,0.,0.,0.,z,0.);
	var s = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s.a + this2.b * s.e + this2.c * s.i,this2.a * s.b + this2.b * s.f + this2.c * s.j,this2.a * s.c + this2.b * s.g + this2.c * s.k,this2.a * s.d + this2.b * s.h + this2.c * s.l + this2.d,this2.e * s.a + this2.f * s.e + this2.g * s.i,this2.e * s.b + this2.f * s.f + this2.g * s.j,this2.e * s.c + this2.f * s.g + this2.g * s.k,this2.e * s.d + this2.f * s.h + this2.g * s.l + this2.h,this2.i * s.a + this2.j * s.e + this2.k * s.i,this2.i * s.b + this2.j * s.f + this2.k * s.j,this2.i * s.c + this2.j * s.g + this2.k * s.k,this2.i * s.d + this2.j * s.h + this2.k * s.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.sx = function(x) {
	var this1 = new geom_structure_Mat4x3(x,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scaleX = function(this1,x) {
	var this2 = new geom_structure_Mat4x3(x,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scalarX = function(x) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var this3 = new geom_structure_Mat4x3(x,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var s = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s.a + this2.b * s.e + this2.c * s.i,this2.a * s.b + this2.b * s.f + this2.c * s.j,this2.a * s.c + this2.b * s.g + this2.c * s.k,this2.a * s.d + this2.b * s.h + this2.c * s.l + this2.d,this2.e * s.a + this2.f * s.e + this2.g * s.i,this2.e * s.b + this2.f * s.f + this2.g * s.j,this2.e * s.c + this2.f * s.g + this2.g * s.k,this2.e * s.d + this2.f * s.h + this2.g * s.l + this2.h,this2.i * s.a + this2.j * s.e + this2.k * s.i,this2.i * s.b + this2.j * s.f + this2.k * s.j,this2.i * s.c + this2.j * s.g + this2.k * s.k,this2.i * s.d + this2.j * s.h + this2.k * s.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.sy = function(y) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,y,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scaleY = function(this1,y) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,y,0.,0.,0.,0.,1.,0.);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scalarY = function(y) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var this3 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,y,0.,0.,0.,0.,1.,0.);
	var s = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s.a + this2.b * s.e + this2.c * s.i,this2.a * s.b + this2.b * s.f + this2.c * s.j,this2.a * s.c + this2.b * s.g + this2.c * s.k,this2.a * s.d + this2.b * s.h + this2.c * s.l + this2.d,this2.e * s.a + this2.f * s.e + this2.g * s.i,this2.e * s.b + this2.f * s.f + this2.g * s.j,this2.e * s.c + this2.f * s.g + this2.g * s.k,this2.e * s.d + this2.f * s.h + this2.g * s.l + this2.h,this2.i * s.a + this2.j * s.e + this2.k * s.i,this2.i * s.b + this2.j * s.f + this2.k * s.j,this2.i * s.c + this2.j * s.g + this2.k * s.k,this2.i * s.d + this2.j * s.h + this2.k * s.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.sz = function(z) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,z,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scaleZ = function(this1,z) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,z,0.);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scalarZ = function(z) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var this3 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,z,0.);
	var s = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s.a + this2.b * s.e + this2.c * s.i,this2.a * s.b + this2.b * s.f + this2.c * s.j,this2.a * s.c + this2.b * s.g + this2.c * s.k,this2.a * s.d + this2.b * s.h + this2.c * s.l + this2.d,this2.e * s.a + this2.f * s.e + this2.g * s.i,this2.e * s.b + this2.f * s.f + this2.g * s.j,this2.e * s.c + this2.f * s.g + this2.g * s.k,this2.e * s.d + this2.f * s.h + this2.g * s.l + this2.h,this2.i * s.a + this2.j * s.e + this2.k * s.i,this2.i * s.b + this2.j * s.f + this2.k * s.j,this2.i * s.c + this2.j * s.g + this2.k * s.k,this2.i * s.d + this2.j * s.h + this2.k * s.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scale = function(this1,s) {
	var this2 = new geom_structure_Mat4x3(s,0.,0.,0.,0.,s,0.,0.,0.,0.,s,0.);
	var s1 = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s1.a + this1.b * s1.e + this1.c * s1.i,this1.a * s1.b + this1.b * s1.f + this1.c * s1.j,this1.a * s1.c + this1.b * s1.g + this1.c * s1.k,this1.a * s1.d + this1.b * s1.h + this1.c * s1.l + this1.d,this1.e * s1.a + this1.f * s1.e + this1.g * s1.i,this1.e * s1.b + this1.f * s1.f + this1.g * s1.j,this1.e * s1.c + this1.f * s1.g + this1.g * s1.k,this1.e * s1.d + this1.f * s1.h + this1.g * s1.l + this1.h,this1.i * s1.a + this1.j * s1.e + this1.k * s1.i,this1.i * s1.b + this1.j * s1.f + this1.k * s1.j,this1.i * s1.c + this1.j * s1.g + this1.k * s1.k,this1.i * s1.d + this1.j * s1.h + this1.k * s1.l + this1.l);
	var s2 = this3;
	var this4 = new geom_structure_Mat4x3(this1.a * s2.a + this1.b * s2.e + this1.c * s2.i,this1.a * s2.b + this1.b * s2.f + this1.c * s2.j,this1.a * s2.c + this1.b * s2.g + this1.c * s2.k,this1.a * s2.d + this1.b * s2.h + this1.c * s2.l + this1.d,this1.e * s2.a + this1.f * s2.e + this1.g * s2.i,this1.e * s2.b + this1.f * s2.f + this1.g * s2.j,this1.e * s2.c + this1.f * s2.g + this1.g * s2.k,this1.e * s2.d + this1.f * s2.h + this1.g * s2.l + this1.h,this1.i * s2.a + this1.j * s2.e + this1.k * s2.i,this1.i * s2.b + this1.j * s2.f + this1.k * s2.j,this1.i * s2.c + this1.j * s2.g + this1.k * s2.k,this1.i * s2.d + this1.j * s2.h + this1.k * s2.l + this1.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scalar = function(s) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var this3 = new geom_structure_Mat4x3(s,0.,0.,0.,0.,s,0.,0.,0.,0.,s,0.);
	var s1 = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s1.a + this2.b * s1.e + this2.c * s1.i,this2.a * s1.b + this2.b * s1.f + this2.c * s1.j,this2.a * s1.c + this2.b * s1.g + this2.c * s1.k,this2.a * s1.d + this2.b * s1.h + this2.c * s1.l + this2.d,this2.e * s1.a + this2.f * s1.e + this2.g * s1.i,this2.e * s1.b + this2.f * s1.f + this2.g * s1.j,this2.e * s1.c + this2.f * s1.g + this2.g * s1.k,this2.e * s1.d + this2.f * s1.h + this2.g * s1.l + this2.h,this2.i * s1.a + this2.j * s1.e + this2.k * s1.i,this2.i * s1.b + this2.j * s1.f + this2.k * s1.j,this2.i * s1.c + this2.j * s1.g + this2.k * s1.k,this2.i * s1.d + this2.j * s1.h + this2.k * s1.l + this2.l);
	var s2 = this4;
	var this5 = new geom_structure_Mat4x3(this2.a * s2.a + this2.b * s2.e + this2.c * s2.i,this2.a * s2.b + this2.b * s2.f + this2.c * s2.j,this2.a * s2.c + this2.b * s2.g + this2.c * s2.k,this2.a * s2.d + this2.b * s2.h + this2.c * s2.l + this2.d,this2.e * s2.a + this2.f * s2.e + this2.g * s2.i,this2.e * s2.b + this2.f * s2.f + this2.g * s2.j,this2.e * s2.c + this2.f * s2.g + this2.g * s2.k,this2.e * s2.d + this2.f * s2.h + this2.g * s2.l + this2.h,this2.i * s2.a + this2.j * s2.e + this2.k * s2.i,this2.i * s2.b + this2.j * s2.f + this2.k * s2.j,this2.i * s2.c + this2.j * s2.g + this2.k * s2.k,this2.i * s2.d + this2.j * s2.h + this2.k * s2.l + this2.l);
	return this5;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.txyz = function(x,y,z) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,x,0.,1.,0.,y,0.,0.,1.,z);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.translateXYZ = function(this1,x,y,z) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,x,0.,1.,0.,y,0.,0.,1.,z);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.translationXYZ = function(x,y,z) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var this3 = new geom_structure_Mat4x3(1.,0.,0.,x,0.,1.,0.,y,0.,0.,1.,z);
	var s = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s.a + this2.b * s.e + this2.c * s.i,this2.a * s.b + this2.b * s.f + this2.c * s.j,this2.a * s.c + this2.b * s.g + this2.c * s.k,this2.a * s.d + this2.b * s.h + this2.c * s.l + this2.d,this2.e * s.a + this2.f * s.e + this2.g * s.i,this2.e * s.b + this2.f * s.f + this2.g * s.j,this2.e * s.c + this2.f * s.g + this2.g * s.k,this2.e * s.d + this2.f * s.h + this2.g * s.l + this2.h,this2.i * s.a + this2.j * s.e + this2.k * s.i,this2.i * s.b + this2.j * s.f + this2.k * s.j,this2.i * s.c + this2.j * s.g + this2.k * s.k,this2.i * s.d + this2.j * s.h + this2.k * s.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.tx = function(x) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,x,0.,1.,0.,0.,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.translateX = function(this1,x) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,x,0.,1.,0.,0.,0.,0.,1.,0.);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.translationX = function(x) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var this3 = new geom_structure_Mat4x3(1.,0.,0.,x,0.,1.,0.,0.,0.,0.,1.,0.);
	var s = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s.a + this2.b * s.e + this2.c * s.i,this2.a * s.b + this2.b * s.f + this2.c * s.j,this2.a * s.c + this2.b * s.g + this2.c * s.k,this2.a * s.d + this2.b * s.h + this2.c * s.l + this2.d,this2.e * s.a + this2.f * s.e + this2.g * s.i,this2.e * s.b + this2.f * s.f + this2.g * s.j,this2.e * s.c + this2.f * s.g + this2.g * s.k,this2.e * s.d + this2.f * s.h + this2.g * s.l + this2.h,this2.i * s.a + this2.j * s.e + this2.k * s.i,this2.i * s.b + this2.j * s.f + this2.k * s.j,this2.i * s.c + this2.j * s.g + this2.k * s.k,this2.i * s.d + this2.j * s.h + this2.k * s.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.ty = function(y) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,y,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.translateY = function(this1,y) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,y,0.,0.,1.,0.);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.translationY = function(y) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var this3 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,y,0.,0.,1.,0.);
	var s = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s.a + this2.b * s.e + this2.c * s.i,this2.a * s.b + this2.b * s.f + this2.c * s.j,this2.a * s.c + this2.b * s.g + this2.c * s.k,this2.a * s.d + this2.b * s.h + this2.c * s.l + this2.d,this2.e * s.a + this2.f * s.e + this2.g * s.i,this2.e * s.b + this2.f * s.f + this2.g * s.j,this2.e * s.c + this2.f * s.g + this2.g * s.k,this2.e * s.d + this2.f * s.h + this2.g * s.l + this2.h,this2.i * s.a + this2.j * s.e + this2.k * s.i,this2.i * s.b + this2.j * s.f + this2.k * s.j,this2.i * s.c + this2.j * s.g + this2.k * s.k,this2.i * s.d + this2.j * s.h + this2.k * s.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.tz = function(z) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,z);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.translateZ = function(this1,z) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,z);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.translationZ = function(z) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var this3 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,z);
	var s = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s.a + this2.b * s.e + this2.c * s.i,this2.a * s.b + this2.b * s.f + this2.c * s.j,this2.a * s.c + this2.b * s.g + this2.c * s.k,this2.a * s.d + this2.b * s.h + this2.c * s.l + this2.d,this2.e * s.a + this2.f * s.e + this2.g * s.i,this2.e * s.b + this2.f * s.f + this2.g * s.j,this2.e * s.c + this2.f * s.g + this2.g * s.k,this2.e * s.d + this2.f * s.h + this2.g * s.l + this2.h,this2.i * s.a + this2.j * s.e + this2.k * s.i,this2.i * s.b + this2.j * s.f + this2.k * s.j,this2.i * s.c + this2.j * s.g + this2.k * s.k,this2.i * s.d + this2.j * s.h + this2.k * s.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.txy = function(x,y) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,x,0.,1.,0.,y,0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.translateXY = function(this1,x,y) {
	var this2 = new geom_structure_Mat4x3(1.,0.,0.,x,0.,1.,0.,y,0.,0.,1.,0.);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.translationXY = function(x,y) {
	var this1 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
	var this2 = this1;
	var this3 = new geom_structure_Mat4x3(1.,0.,0.,x,0.,1.,0.,y,0.,0.,1.,0.);
	var s = this3;
	var this4 = new geom_structure_Mat4x3(this2.a * s.a + this2.b * s.e + this2.c * s.i,this2.a * s.b + this2.b * s.f + this2.c * s.j,this2.a * s.c + this2.b * s.g + this2.c * s.k,this2.a * s.d + this2.b * s.h + this2.c * s.l + this2.d,this2.e * s.a + this2.f * s.e + this2.g * s.i,this2.e * s.b + this2.f * s.f + this2.g * s.j,this2.e * s.c + this2.f * s.g + this2.g * s.k,this2.e * s.d + this2.f * s.h + this2.g * s.l + this2.h,this2.i * s.a + this2.j * s.e + this2.k * s.i,this2.i * s.b + this2.j * s.f + this2.k * s.j,this2.i * s.c + this2.j * s.g + this2.k * s.k,this2.i * s.d + this2.j * s.h + this2.k * s.l + this2.l);
	return this4;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.reflection = function(a,b,c) {
	var this1 = new geom_structure_Mat4x3(-a * a + b * b + c * c,-2. * a * b,-2. * a * c,0.,-2. * b * a,-b * b + a * a + c * c,-2. * b * c,0.,-2. * c * a,-2. * c * b,-c * c + b * b + a * a,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.reflectionX = function() {
	var this1 = new geom_structure_Mat4x3(1,2.,2.,0.,2.,1,-2.,0.,2.,-2.,1,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.reflectionY = function() {
	var this1 = new geom_structure_Mat4x3(1,2.,-2.,0.,2.,1,2.,0.,-2.,2.,1,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.reflectionZ = function() {
	var this1 = new geom_structure_Mat4x3(1,-2.,2.,0.,-2.,1,2.,0.,2.,2.,1,0.);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.reflectX = function(this1) {
	var this2 = new geom_structure_Mat4x3(1,2.,2.,0.,2.,1,-2.,0.,2.,-2.,1,0.);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.reflectY = function(this1) {
	var this2 = new geom_structure_Mat4x3(1,2.,-2.,0.,2.,1,2.,0.,-2.,2.,1,0.);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.reflectZ = function(this1) {
	var this2 = new geom_structure_Mat4x3(1,-2.,2.,0.,-2.,1,2.,0.,2.,2.,1,0.);
	var s = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * s.a + this1.b * s.e + this1.c * s.i,this1.a * s.b + this1.b * s.f + this1.c * s.j,this1.a * s.c + this1.b * s.g + this1.c * s.k,this1.a * s.d + this1.b * s.h + this1.c * s.l + this1.d,this1.e * s.a + this1.f * s.e + this1.g * s.i,this1.e * s.b + this1.f * s.f + this1.g * s.j,this1.e * s.c + this1.f * s.g + this1.g * s.k,this1.e * s.d + this1.f * s.h + this1.g * s.l + this1.h,this1.i * s.a + this1.j * s.e + this1.k * s.i,this1.i * s.b + this1.j * s.f + this1.k * s.j,this1.i * s.c + this1.j * s.g + this1.k * s.k,this1.i * s.d + this1.j * s.h + this1.k * s.l + this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.reflectionNonOrigin = function(this1,a,b,c,d) {
	var this2 = new geom_structure_Mat4x3(1. - 2. * a * a,-2. * b * c,-2. * a * c,-2. * a * d,-2. * b * c,1. - 2. * b * b,-2. * b * c,-2. * b * d,-2. * a * c,2. * b * c,1. - 2. * c * c,-2 * c * d);
	return this2;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.equal = function(a,b) {
	var delta = 0.0000001;
	return !(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta || Math.abs(a.e - b.e) >= delta || Math.abs(a.f - b.f) >= delta || Math.abs(a.g - b.g) >= delta || Math.abs(a.h - b.h) >= delta || Math.abs(a.i - b.i) >= delta || Math.abs(a.j - b.j) >= delta || Math.abs(a.k - b.k) >= delta || Math.abs(a.l - b.l) >= delta);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.notEqual = function(a,b) {
	var delta = 0.0000001;
	return !(!(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta || Math.abs(a.e - b.e) >= delta || Math.abs(a.f - b.f) >= delta || Math.abs(a.g - b.g) >= delta || Math.abs(a.h - b.h) >= delta || Math.abs(a.i - b.i) >= delta || Math.abs(a.j - b.j) >= delta || Math.abs(a.k - b.k) >= delta || Math.abs(a.l - b.l) >= delta));
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.negating = function(a) {
	var this1 = new geom_structure_Mat4x3(-a.a,-a.b,-a.c,-a.d,-a.e,-a.f,-a.g,-a.h,-a.i,-a.j,-a.k,-a.l);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.negate = function(this1) {
	var this2 = new geom_structure_Mat4x3(-this1.a,-this1.b,-this1.c,-this1.d,-this1.e,-this1.f,-this1.g,-this1.h,-this1.i,-this1.j,-this1.k,-this1.l);
	return this2;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.add = function(m0,m1) {
	var this1 = new geom_structure_Mat4x3(m0.a + m1.a,m0.b + m1.b,m0.c + m1.c,m0.d + m1.d,m0.e + m1.e,m0.f + m1.f,m0.g + m1.g,m0.h + m1.h,m0.i + m1.i,m0.j + m1.j,m0.k + m1.k,m0.l + m1.l);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.sub = function(m0,m1) {
	var this1 = new geom_structure_Mat4x3(m0.a - m1.a,m0.b - m1.b,m0.c - m1.c,m0.d - m1.d,m0.e - m1.e,m0.f - m1.f,m0.g - m1.g,m0.h - m1.h,m0.i - m1.i,m0.j - m1.j,m0.k - m1.k,m0.l - m1.l);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scaleDownByVector = function(this1,p) {
	var this2 = new geom_structure_Mat1x4(1 / p.x,1 / p.y,1 / p.z,1 / p.w);
	var pd = this2;
	var this3 = new geom_structure_Mat4x3(this1.a * pd.x,this1.b,this1.c,this1.d,this1.e,this1.f * pd.y,this1.g,this1.h,this1.i,this1.j,this1.k * pd.z,this1.l);
	return this3;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.scaleByVector = function(this1,p) {
	var this2 = new geom_structure_Mat4x3(this1.a * p.x,this1.b,this1.c,this1.d,this1.e,this1.f * p.y,this1.g,this1.h,this1.i,this1.j,this1.k * p.z,this1.l);
	return this2;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.multiply = function(r,s) {
	var this1 = new geom_structure_Mat4x3(r.a * s.a + r.b * s.e + r.c * s.i,r.a * s.b + r.b * s.f + r.c * s.j,r.a * s.c + r.b * s.g + r.c * s.k,r.a * s.d + r.b * s.h + r.c * s.l + r.d,r.e * s.a + r.f * s.e + r.g * s.i,r.e * s.b + r.f * s.f + r.g * s.j,r.e * s.c + r.f * s.g + r.g * s.k,r.e * s.d + r.f * s.h + r.g * s.l + r.h,r.i * s.a + r.j * s.e + r.k * s.i,r.i * s.b + r.j * s.f + r.k * s.j,r.i * s.c + r.j * s.g + r.k * s.k,r.i * s.d + r.j * s.h + r.k * s.l + r.l);
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.cofactor = function(this1,a,b,c,d,e,f,g,h,i) {
	return a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.det = function(this1) {
	var m = 0.;
	var n = 0.;
	var o = 0.;
	var p = 1.;
	var d = this1.j;
	var e = this1.k;
	var f = this1.l;
	var d1 = this1.i;
	var e1 = this1.k;
	var f1 = this1.l;
	var d2 = this1.i;
	var e2 = this1.j;
	var f2 = this1.l;
	var d3 = this1.i;
	var e3 = this1.j;
	var f3 = this1.k;
	return this1.a * (this1.f * (e * p - f * o) - this1.g * (d * p - f * n) + this1.h * (d * o - e * n)) - this1.b * (this1.e * (e1 * p - f1 * o) - this1.g * (d1 * p - f1 * m) + this1.h * (d1 * o - e1 * m)) + this1.c * (this1.e * (e2 * n - f2 * p) - this1.f * (d2 * n - f2 * m) + this1.h * (d2 * p - e2 * m)) - this1.d * (this1.e * (e3 * o - f3 * n) - this1.f * (d3 * o - f3 * m) + this1.g * (d3 * n - e3 * m));
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.inverse = function(this1) {
	var a = this1.a;
	var b = this1.b;
	var c = this1.c;
	var d = this1.d;
	var e = this1.e;
	var f = this1.f;
	var g = this1.g;
	var h = this1.h;
	var i = this1.i;
	var j = this1.j;
	var k = this1.k;
	var l = this1.l;
	var m = 0.;
	var n = 0.;
	var o = 0.;
	var p = 1.;
	var q = j * o * h - n * k * h + n * g * l - f * o * l - j * g * p + f * k * p;
	var r = m * k * h - i * o * h - m * g * l + e * o * l + i * g * p - e * k * p;
	var s = i * n * h - m * j * h + m * f * l - e * n * l - i * f * p + e * j * p;
	var t = m * j * g - i * n * g - m * f * k + e * n * k + i * f * o - e * j * o;
	var det = a * q + b * r + c * s + d * t;
	if(det == 0) {
		return null;
	} else {
		var detI = 1 / det;
		var this2 = new geom_structure_Mat4x3(q * detI,(n * k * d - j * o * d - n * c * l + b * o * l + j * c * p - b * k * p) * detI,(f * o * d - n * g * d + n * c * h - b * o * h - f * c * p + b * g * p) * detI,(j * g * d - f * k * d - j * c * h + b * k * h + f * c * l - b * g * l) * detI,r * detI,(i * o * d - m * k * d + m * c * l - a * o * l - i * c * p + a * k * p) * detI,(m * g * d - e * o * d - m * c * h + a * o * h + e * c * p - a * g * p) * detI,(e * k * d - i * g * d + i * c * h - a * k * h - e * c * l + a * g * l) * detI,s * detI,(m * j * d - i * n * d - m * b * l + a * n * l + i * b * p - a * j * p) * detI,(e * n * d - m * f * d + m * b * h - a * n * h - e * b * p + a * f * p) * detI,(i * f * d - e * j * d - i * b * h + a * j * h + e * b * l - a * f * l) * detI);
		return this2;
	}
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.orientation = function(pos,dir,up) {
	var this1 = new geom_structure_Mat1x4(dir.y * up.z - dir.z * up.y,dir.z * up.x - dir.x * up.z,dir.x * up.y - dir.y * up.x,dir.w * up.w);
	var right = this1;
	var this2 = new geom_structure_Mat4x3(dir.x,up.x,right.x,pos.x,dir.y,up.y,right.y,pos.y,dir.z,up.z,right.z,pos.z);
	return this2;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.applyRotation = function(this1,p) {
	var this2 = new geom_structure_Mat1x4(this1.a * p.x + this1.b * p.y + this1.c * p.z,this1.e * p.x + this1.f * p.y + this1.g * p.z,this1.h * p.x + this1.i * p.y + this1.j * p.z,1.);
	return this2;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.applyInverseRotation = function(this1,p) {
	var this2 = new geom_structure_Mat1x4(this1.a * p.x + this1.e * p.y + this1.i * p.z,this1.b * p.x + this1.f * p.y + this1.j * p.z,this1.c * p.x + this1.g * p.y + this1.k * p.z,1.);
	return this2;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.orthonormalizeRotation = function(this1) {
	var this2 = new geom_structure_Mat1x4(this1.a,this1.e,this1.i,1.);
	var this3 = this2;
	var currentLength = Math.sqrt(this3.x * this3.x + this3.y * this3.y + this3.z * this3.z + this3.w * this3.w);
	if(currentLength != 0.) {
		var mul = 1. / currentLength;
		this3.x *= mul;
		this3.y *= mul;
		this3.z *= mul;
		this3.w *= mul;
		var tmp = this3.x * this3.x + this3.y * this3.y + this3.z * this3.z + this3.w * this3.w;
	}
	var new_x = this3;
	var this4 = new geom_structure_Mat1x4(this1.b,this1.f,this1.j,1.);
	var v = this4;
	var this5 = new geom_structure_Mat1x4(new_x.y * v.z - new_x.z * v.y,new_x.z * v.x - new_x.x * v.z,new_x.x * v.y - new_x.y * v.x,new_x.w * v.w);
	var this6 = this5;
	var currentLength1 = Math.sqrt(this6.x * this6.x + this6.y * this6.y + this6.z * this6.z + this6.w * this6.w);
	if(currentLength1 != 0.) {
		var mul1 = 1. / currentLength1;
		this6.x *= mul1;
		this6.y *= mul1;
		this6.z *= mul1;
		this6.w *= mul1;
		var tmp1 = this6.x * this6.x + this6.y * this6.y + this6.z * this6.z + this6.w * this6.w;
	}
	var new_z = this6;
	var this7 = new geom_structure_Mat1x4(new_z.y * new_x.z - new_z.z * new_x.y,new_z.z * new_x.x - new_z.x * new_x.z,new_z.x * new_x.y - new_z.y * new_x.x,new_z.w * new_x.w);
	var new_y = this7;
	this1.a = new_x.x;
	this1.b = new_y.x;
	this1.c = new_z.x;
	this1.e = new_x.y;
	this1.f = new_y.y;
	this1.g = new_z.y;
	this1.i = new_x.z;
	this1.j = new_y.z;
	this1.k = new_z.z;
	return this1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.makeViewFromOrientation = function(this1) {
	var this2 = new geom_structure_Mat4x3(this1.c,this1.b,-this1.a,this1.d,this1.g,this1.f,-this1.e,this1.h,this1.k,this1.j,-this1.i,this1.l);
	var m = this2;
	var this3 = new geom_structure_Mat4x3(m.a,m.e,m.i,0.,m.b,m.f,m.j,0.,m.c,m.g,m.k,0.);
	var m1 = this3;
	var this4 = new geom_structure_Mat1x4(m.d,m.h,m.l,1.);
	var this5 = this4;
	var this6 = new geom_structure_Mat1x4(m1.a * this5.x + m1.b * this5.y + m1.c * this5.z + m1.d,m1.e * this5.x + m1.f * this5.y + m1.g * this5.z + m1.h,m1.i * this5.x + m1.j * this5.y + m1.k * this5.z + m1.l,1.);
	var trans_prime = this6;
	m1.d = -trans_prime.x;
	m1.h = -trans_prime.y;
	m1.l = -trans_prime.z;
	return m1;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.invertNormalizedRotation = function(this1) {
	var this2 = new geom_structure_Mat4x3(this1.a,this1.e,this1.i,0.,this1.b,this1.f,this1.j,0.,this1.c,this1.g,this1.k,0.);
	return this2;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.invertNormalized = function(this1) {
	var this2 = new geom_structure_Mat4x3(this1.a,this1.e,this1.i,0.,this1.b,this1.f,this1.j,0.,this1.c,this1.g,this1.k,0.);
	var m = this2;
	var this3 = new geom_structure_Mat1x4(this1.d,this1.h,this1.l,1.);
	var this4 = this3;
	var this5 = new geom_structure_Mat1x4(m.a * this4.x + m.b * this4.y + m.c * this4.z + m.d,m.e * this4.x + m.f * this4.y + m.g * this4.z + m.h,m.i * this4.x + m.j * this4.y + m.k * this4.z + m.l,1.);
	var trans_prime = this5;
	m.d = -trans_prime.x;
	m.h = -trans_prime.y;
	m.l = -trans_prime.z;
	return m;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.toAffineMatrix = function(this1) {
	return geom_matrix_Conversion._4x3toTAffineMatrix(this1);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.fromNumbered = function(m) {
	return geom_matrix_Conversion.Tmatrix4x4numberedto4x3(m);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.toNumbered = function(this1) {
	return geom_matrix_Conversion._4x3toTmatrix4x4numbered(this1);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.fromArr = function(arr) {
	return geom_matrix_Conversion.ArraytoMatrix4x3(arr);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.toArray = function(this1) {
	return geom_matrix_Conversion._4x3toArray(this1);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.from2x2 = function(m2) {
	return geom_matrix_Conversion._2x2to4x3(m2);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.to2x2 = function(this1) {
	return geom_matrix_Conversion._4x3to2x2(this1);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.from3x3 = function(m3) {
	return geom_matrix_Conversion._3x3to4x3(m3);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.to3x3 = function(this1) {
	return geom_matrix_Conversion._4x3to3x3(this1);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.fromVec = function(v) {
	return geom_matrix_Conversion.Vectorto4x3(v);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.toVector = function(this1) {
	return geom_matrix_Conversion._4x3toVector(this1);
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.setXY = function(this1,x,y,v) {
	switch(x) {
	case 0:
		switch(y) {
		case 0:
			return this1.a = v;
		case 1:
			return this1.b = v;
		case 2:
			return this1.c = v;
		case 3:
			return this1.d = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x3");
		}
		break;
	case 1:
		switch(y) {
		case 0:
			return this1.e = v;
		case 1:
			return this1.f = v;
		case 2:
			return this1.g = v;
		case 3:
			return this1.h = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x3");
		}
		break;
	case 2:
		switch(y) {
		case 0:
			return this1.i = v;
		case 1:
			return this1.j = v;
		case 2:
			return this1.k = v;
		case 3:
			return this1.l = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x3");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x3");
	}
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.getXY = function(this1,x,y) {
	switch(x) {
	case 0:
		switch(y) {
		case 0:
			return this1.a;
		case 1:
			return this1.b;
		case 2:
			return this1.c;
		case 3:
			return this1.d;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x3");
		}
		break;
	case 1:
		switch(y) {
		case 0:
			return this1.e;
		case 1:
			return this1.f;
		case 2:
			return this1.g;
		case 3:
			return this1.h;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x3");
		}
		break;
	case 2:
		switch(y) {
		case 0:
			return this1.i;
		case 1:
			return this1.j;
		case 2:
			return this1.k;
		case 3:
			return this1.l;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x3");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x3");
	}
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.updateWebGL = function(this1,arr) {
	var here = this1;
	geom_matrix_Conversion._4x3toFloat32ArrayTransposeUpdate_(arr,here);
	return arr;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.updateWebGL_ = function(this1,arr) {
	var here = this1;
	geom_matrix_Conversion._4x3toFloat32ArrayUpdate_(arr,here);
	return arr;
};
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.pretty = function(this1,prec) {
	var dp = geom_constraints_Precision.floatToStringPrecision;
	var max3 = geom_constraints_Precision.max3;
	var sa = dp(this1.a,prec);
	var sb = dp(this1.b,prec);
	var sc = dp(this1.c,prec);
	var sd = dp(this1.d,prec);
	var se = dp(this1.e,prec);
	var sf = dp(this1.f,prec);
	var sg = dp(this1.g,prec);
	var sh = dp(this1.h,prec);
	var si = dp(this1.i,prec);
	var sj = dp(this1.j,prec);
	var sk = dp(this1.k,prec);
	var sl = dp(this1.l,prec);
	var la = sa.length;
	var lb = sb.length;
	var lc = sc.length;
	var ld = sd.length;
	var le = se.length;
	var lf = sf.length;
	var lg = sg.length;
	var lh = sh.length;
	var li = si.length;
	var lj = sj.length;
	var lk = sk.length;
	var ll = sl.length;
	var r0 = max3(la,le,li);
	var r1 = max3(lb,lf,lj);
	var r2 = max3(lc,lg,lk);
	var r3 = max3(ld,lh,ll);
	var spaces = "";
	var _g = 0;
	var _g1 = r0;
	while(_g < _g1) {
		var n = _g++;
		spaces += " ";
	}
	sa = HxOverrides.substr(spaces,0,r0 - la) + sa;
	se = HxOverrides.substr(spaces,0,r0 - le) + se;
	si = HxOverrides.substr(spaces,0,r0 - li) + si;
	var spaces1 = "";
	var _g2 = 0;
	var _g3 = r1;
	while(_g2 < _g3) {
		var n1 = _g2++;
		spaces1 += " ";
	}
	sb = HxOverrides.substr(spaces1,0,r1 - lb) + sb;
	sf = HxOverrides.substr(spaces1,0,r1 - lf) + sf;
	sj = HxOverrides.substr(spaces1,0,r1 - lj) + sj;
	var space = "";
	var _g4 = 0;
	var _g5 = r2;
	while(_g4 < _g5) {
		var n2 = _g4++;
		spaces1 += " ";
	}
	sc = HxOverrides.substr(spaces1,0,r2 - lc) + sc;
	sg = HxOverrides.substr(spaces1,0,r2 - lg) + sg;
	sk = HxOverrides.substr(spaces1,0,r2 - lk) + sk;
	var space1 = "";
	var _g6 = 0;
	var _g7 = r3;
	while(_g6 < _g7) {
		var n3 = _g6++;
		spaces1 += " ";
	}
	sd = HxOverrides.substr(spaces1,0,r3 - ld) + sd;
	sh = HxOverrides.substr(spaces1,0,r3 - lh) + sh;
	sl = HxOverrides.substr(spaces1,0,r3 - ll) + sl;
	return "\n" + "/ " + sa + ", " + sb + ", " + sc + ", " + sd + " \\\n" + "| " + se + ", " + sf + ", " + sg + ", " + sh + " |\n" + "\\ " + si + ", " + sj + ", " + sk + ", " + sl + " /\n";
};
var geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$ = {};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.__name__ = "geom.matrix._Matrix4x4.Matrix4x4_Impl_";
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.__properties__ = {get__1_16:"get__1_16",get_testCount:"get_testCount",get_counting:"get_counting",get_minus1:"get_minus1",get_one:"get_one",get_unit:"get_unit",get_nought:"get_nought",get_zero:"get_zero",get_self:"get_self"};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.clone = function(this1) {
	var this2 = new geom_structure_Mat4x4(this1.a,this1.b,this1.c,this1.d,this1.e,this1.f,this1.g,this1.h,this1.i,this1.j,this1.k,this1.l,this1.m,this1.n,this1.o,this1.p);
	return this2;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.iterator = function(this1) {
	return HxOverrides.iter([this1.a,this1.b,this1.c,this1.d,this1.e,this1.f,this1.g,this1.h,this1.i,this1.j,this1.k,this1.l,this1.m,this1.n,this1.o,this1.p]);
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.get_self = function(this1) {
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_Mat4x4(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.get_nought = function(this1) {
	var this2 = new geom_structure_Mat4x4(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
	return this2;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.get_unit = function() {
	var this1 = new geom_structure_Mat4x4(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.get_one = function(this1) {
	var this2 = new geom_structure_Mat4x4(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.);
	return this2;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.get_minus1 = function() {
	var this1 = new geom_structure_Mat4x4(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.);
	var a = this1;
	var this2 = new geom_structure_Mat4x4(-a.a,-a.b,-a.c,-a.d,-a.e,-a.f,-a.g,-a.h,-a.i,-a.j,-a.k,-a.l,-a.m,-a.n,-a.o,-a.p);
	return this2;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.get_counting = function() {
	var this1 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.get_testCount = function(this1) {
	var this2 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
	return this2;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.get__1_16 = function() {
	var this1 = new geom_structure_Mat4x4(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.);
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.equal = function(a,b) {
	var delta = 0.0000001;
	return !(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta || Math.abs(a.e - b.e) >= delta || Math.abs(a.f - b.f) >= delta || Math.abs(a.g - b.g) >= delta || Math.abs(a.h - b.h) >= delta || Math.abs(a.i - b.i) >= delta || Math.abs(a.j - b.j) >= delta || Math.abs(a.k - b.k) >= delta || Math.abs(a.l - b.l) >= delta || Math.abs(a.m - b.m) >= delta || Math.abs(a.n - b.n) >= delta || Math.abs(a.o - b.o) >= delta || Math.abs(a.p - b.p) >= delta);
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.notEqual = function(a,b) {
	var delta = 0.0000001;
	return !(!(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta || Math.abs(a.e - b.e) >= delta || Math.abs(a.f - b.f) >= delta || Math.abs(a.g - b.g) >= delta || Math.abs(a.h - b.h) >= delta || Math.abs(a.i - b.i) >= delta || Math.abs(a.j - b.j) >= delta || Math.abs(a.k - b.k) >= delta || Math.abs(a.l - b.l) >= delta || Math.abs(a.m - b.m) >= delta || Math.abs(a.n - b.n) >= delta || Math.abs(a.o - b.o) >= delta || Math.abs(a.p - b.p) >= delta));
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.negating = function(a) {
	var this1 = new geom_structure_Mat4x4(-a.a,-a.b,-a.c,-a.d,-a.e,-a.f,-a.g,-a.h,-a.i,-a.j,-a.k,-a.l,-a.m,-a.n,-a.o,-a.p);
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.negate = function(this1) {
	var this2 = new geom_structure_Mat4x4(-this1.a,-this1.b,-this1.c,-this1.d,-this1.e,-this1.f,-this1.g,-this1.h,-this1.i,-this1.j,-this1.k,-this1.l,-this1.m,-this1.n,-this1.o,-this1.p);
	return this2;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.add = function(m0,m1) {
	var this1 = new geom_structure_Mat4x4(m0.a + m1.a,m0.b + m1.b,m0.c + m1.c,m0.d + m1.d,m0.e + m1.e,m0.f + m1.f,m0.g + m1.g,m0.h + m1.h,m0.i + m1.i,m0.j + m1.j,m0.k + m1.k,m0.l + m1.l,m0.m + m1.m,m0.n + m1.n,m0.o + m1.o,m0.p + m1.p);
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.sub = function(m0,m1) {
	var this1 = new geom_structure_Mat4x4(m0.a - m1.a,m0.b - m1.b,m0.c - m1.c,m0.d - m1.d,m0.e - m1.e,m0.f - m1.f,m0.g - m1.g,m0.h - m1.h,m0.i - m1.i,m0.j - m1.j,m0.k - m1.k,m0.l - m1.l,m0.m - m1.m,m0.n - m1.n,m0.o - m1.o,m0.p - m1.p);
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.multiply = function(r,s) {
	var this1 = new geom_structure_Mat4x4(r.a * s.a + r.b * s.e + r.c * s.i + r.d * s.m,r.a * s.b + r.b * s.f + r.c * s.j + r.d * s.n,r.a * s.c + r.b * s.g + r.c * s.k + r.d * s.o,r.a * s.d + r.b * s.h + r.c * s.l + r.d * s.p,r.e * s.a + r.f * s.e + r.g * s.i + r.h * s.m,r.e * s.b + r.f * s.f + r.g * s.j + r.h * s.n,r.e * s.c + r.f * s.g + r.g * s.k + r.h * s.o,r.e * s.d + r.f * s.h + r.g * s.l + r.h * s.p,r.i * s.a + r.j * s.e + r.k * s.i + r.l * s.m,r.i * s.b + r.j * s.f + r.k * s.j + r.l * s.n,r.i * s.c + r.j * s.g + r.k * s.k + r.l * s.o,r.i * s.d + r.j * s.h + r.k * s.l + r.l * s.p,r.m * s.a + r.n * s.e + r.o * s.i + r.p * s.m,r.m * s.b + r.n * s.f + r.o * s.j + r.p * s.n,r.m + s.c + r.n * s.g + r.o * s.k + r.p * s.o,r.m * s.d + r.n * s.h + r.o * s.l + r.p * s.p);
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.scaleDivide = function(m,p) {
	var this1 = new geom_structure_Mat1x4(1 / p.x,1 / p.y,1 / p.z,1 / p.w);
	var pd = this1;
	var this2 = new geom_structure_Mat4x4(m.a * pd.x,m.b,m.c,m.d,m.e,m.f * pd.y,m.g,m.h,m.i,m.j,m.k * pd.z,m.l,m.m,m.n,m.o,m.p * pd.w);
	return this2;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.scaleMultiply1 = function(p,m) {
	var this1 = new geom_structure_Mat4x4(m.a * p.x,m.b,m.c,m.d,m.e,m.f * p.y,m.g,m.h,m.i,m.j,m.k * p.z,m.l,m.m,m.n,m.o,m.p * p.w);
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.scaleMultiply2 = function(m,p) {
	var this1 = new geom_structure_Mat4x4(m.a * p.x,m.b,m.c,m.d,m.e,m.f * p.y,m.g,m.h,m.i,m.j,m.k * p.z,m.l,m.m,m.n,m.o,m.p * p.w);
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.delta = function(this1,x,y) {
	var this2 = new geom_structure_Mat4x4(this1.a,this1.b,this1.c,this1.d,this1.e,this1.f,this1.g,this1.h,this1.i,this1.j,this1.k,this1.l,this1.m + x,this1.n + y,this1.o,this1.p);
	return this2;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.matrix4x3 = function(m) {
	var this1 = new geom_structure_Mat4x4(m.a,m.b,m.c,m.d,m.e,m.f,m.g,m.h,m.i,m.j,m.k,m.l,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.transpose = function(this1) {
	var this2 = new geom_structure_Mat4x4(this1.a,this1.e,this1.i,this1.m,this1.b,this1.f,this1.j,this1.n,this1.c,this1.g,this1.k,this1.o,this1.d,this1.h,this1.l,this1.p);
	return this2;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.updateWebGL = function(this1,arr) {
	var here = this1;
	geom_matrix_Conversion._4x4toFloat32ArrayTransposeUpdate_(arr,here);
	return arr;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.updateWebGL_ = function(this1,arr) {
	var here = this1;
	geom_matrix_Conversion._4x4toFloat32ArrayUpdate_(arr,here);
	return arr;
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.setXY = function(this1,x,y,v) {
	switch(x) {
	case 0:
		switch(y) {
		case 0:
			return this1.a = v;
		case 1:
			return this1.b = v;
		case 2:
			return this1.c = v;
		case 3:
			return this1.d = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x4");
		}
		break;
	case 1:
		switch(y) {
		case 0:
			return this1.e = v;
		case 1:
			return this1.f = v;
		case 2:
			return this1.g = v;
		case 3:
			return this1.h = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x4");
		}
		break;
	case 2:
		switch(y) {
		case 0:
			return this1.i = v;
		case 1:
			return this1.j = v;
		case 2:
			return this1.k = v;
		case 3:
			return this1.l = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x4");
		}
		break;
	case 3:
		switch(y) {
		case 0:
			return this1.m = v;
		case 1:
			return this1.n = v;
		case 2:
			return this1.o = v;
		case 3:
			return this1.p = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x4");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix4x4");
	}
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.getXY = function(this1,x,y) {
	switch(x) {
	case 0:
		switch(y) {
		case 0:
			return this1.a;
		case 1:
			return this1.b;
		case 2:
			return this1.c;
		case 3:
			return this1.d;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x4");
		}
		break;
	case 1:
		switch(y) {
		case 0:
			return this1.e;
		case 1:
			return this1.f;
		case 2:
			return this1.g;
		case 3:
			return this1.h;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x4");
		}
		break;
	case 2:
		switch(y) {
		case 0:
			return this1.i;
		case 1:
			return this1.j;
		case 2:
			return this1.k;
		case 3:
			return this1.l;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x4");
		}
		break;
	case 3:
		switch(y) {
		case 0:
			return this1.m;
		case 1:
			return this1.n;
		case 2:
			return this1.o;
		case 3:
			return this1.p;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x4");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix4x4");
	}
};
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.pretty = function(this1,prec) {
	var dp = geom_constraints_Precision.floatToStringPrecision;
	var max4 = geom_constraints_Precision.max4;
	var sa = dp(this1.a,prec);
	var sb = dp(this1.b,prec);
	var sc = dp(this1.c,prec);
	var sd = dp(this1.d,prec);
	var se = dp(this1.e,prec);
	var sf = dp(this1.f,prec);
	var sg = dp(this1.g,prec);
	var sh = dp(this1.h,prec);
	var si = dp(this1.i,prec);
	var sj = dp(this1.j,prec);
	var sk = dp(this1.k,prec);
	var sl = dp(this1.l,prec);
	var sm = dp(this1.m,prec);
	var sn = dp(this1.n,prec);
	var so = dp(this1.o,prec);
	var sp = dp(this1.p,prec);
	var la = sa.length;
	var lb = sb.length;
	var lc = sc.length;
	var ld = sd.length;
	var le = se.length;
	var lf = sf.length;
	var lg = sg.length;
	var lh = sh.length;
	var li = si.length;
	var lj = sj.length;
	var lk = sk.length;
	var ll = sl.length;
	var lm = sm.length;
	var ln = sn.length;
	var lo = so.length;
	var lp = sp.length;
	var r0 = max4(la,le,li,lm);
	var r1 = max4(lb,lf,lj,ln);
	var r2 = max4(lc,lg,lk,lo);
	var r3 = max4(ld,lh,ll,lp);
	var spaces = "";
	var _g = 0;
	var _g1 = r0;
	while(_g < _g1) {
		var n = _g++;
		spaces += " ";
	}
	sa = HxOverrides.substr(spaces,0,r0 - la) + sa;
	se = HxOverrides.substr(spaces,0,r0 - le) + se;
	si = HxOverrides.substr(spaces,0,r0 - li) + si;
	sm = HxOverrides.substr(spaces,0,r0 - lm) + sm;
	var spaces1 = "";
	var _g2 = 0;
	var _g3 = r1;
	while(_g2 < _g3) {
		var n1 = _g2++;
		spaces1 += " ";
	}
	sb = HxOverrides.substr(spaces1,0,r1 - lb) + sb;
	sf = HxOverrides.substr(spaces1,0,r1 - lf) + sf;
	sj = HxOverrides.substr(spaces1,0,r1 - lj) + sj;
	sn = HxOverrides.substr(spaces1,0,r1 - ln) + sn;
	var space = "";
	var _g4 = 0;
	var _g5 = r2;
	while(_g4 < _g5) {
		var n2 = _g4++;
		spaces1 += " ";
	}
	sc = HxOverrides.substr(spaces1,0,r2 - lc) + sc;
	sg = HxOverrides.substr(spaces1,0,r2 - lg) + sg;
	sk = HxOverrides.substr(spaces1,0,r2 - lk) + sk;
	so = HxOverrides.substr(spaces1,0,r2 - lo) + so;
	var space1 = "";
	var _g6 = 0;
	var _g7 = r3;
	while(_g6 < _g7) {
		var n3 = _g6++;
		spaces1 += " ";
	}
	sd = HxOverrides.substr(spaces1,0,r3 - ld) + sd;
	sh = HxOverrides.substr(spaces1,0,r3 - lh) + sh;
	sl = HxOverrides.substr(spaces1,0,r3 - ll) + sl;
	sp = HxOverrides.substr(spaces1,0,r3 - lp) + sp;
	return "\n" + "/ " + sa + ", " + sb + ", " + sc + ", " + sd + " \\\n" + "| " + se + ", " + sf + ", " + sg + ", " + sh + " |\n" + "| " + si + ", " + sj + ", " + sk + ", " + sl + " |\n" + "\\ " + sm + ", " + sn + ", " + so + ", " + sp + " /\n";
};
var geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$ = {};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.__name__ = "geom.matrix._Matrix5x5.Matrix5x5_Impl_";
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.__properties__ = {get_testCount:"get_testCount",get_counting:"get_counting",get_minus1:"get_minus1",get_one:"get_one",get_unit:"get_unit",get_nought:"get_nought",get_zero:"get_zero",get_self:"get_self"};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.clone = function(this1) {
	var this2 = new geom_structure_Mat5x5(this1.a,this1.b,this1.c,this1.d,this1.e,this1.f,this1.g,this1.h,this1.i,this1.j,this1.k,this1.l,this1.m,this1.n,this1.o,this1.p,this1.q,this1.r,this1.s,this1.t,this1.u,this1.v,this1.w,this1.x,this1.y);
	return this2;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.iterator = function(this1) {
	return HxOverrides.iter([this1.a,this1.b,this1.c,this1.d,this1.e,this1.f,this1.g,this1.h,this1.i,this1.j,this1.k,this1.l,this1.m,this1.n,this1.o,this1.p,this1.q,this1.r,this1.s,this1.t,this1.u,this1.v,this1.w,this1.x,this1.y]);
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.get_self = function(this1) {
	return this1;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_Mat5x5(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.get_nought = function(this1) {
	var this2 = new geom_structure_Mat5x5(0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.);
	return this2;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.get_unit = function() {
	var this1 = new geom_structure_Mat5x5(1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.get_one = function(this1) {
	var this2 = new geom_structure_Mat5x5(1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.);
	return this2;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.get_minus1 = function() {
	var this1 = new geom_structure_Mat5x5(1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.,0.,0.,0.,0.,0.,1.);
	var a = this1;
	var this2 = new geom_structure_Mat5x5(-a.a,-a.b,-a.c,-a.d,-a.e,-a.f,-a.g,-a.h,-a.i,-a.j,-a.k,-a.l,-a.m,-a.n,-a.o,-a.p,-a.q,-a.r,-a.s,-a.t,-a.u,-a.v,-a.w,-a.x,-a.y);
	return this2;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.get_counting = function() {
	var this1 = new geom_structure_Mat5x5(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.);
	return this1;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.get_testCount = function(this1) {
	var this2 = new geom_structure_Mat5x5(1.,2.,3.,4.,5.,6.,7.,8.,9.,10.,11.,12.,13.,14.,15.,16.,17.,18.,19.,20.,21.,22.,23.,24.,25.);
	return this2;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.equal = function(a,b) {
	var delta = 0.0000001;
	return !(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta || Math.abs(a.e - b.e) >= delta || Math.abs(a.f - b.f) >= delta || Math.abs(a.g - b.g) >= delta || Math.abs(a.h - b.h) >= delta || Math.abs(a.i - b.i) >= delta || Math.abs(a.j - b.j) >= delta || Math.abs(a.k - b.k) >= delta || Math.abs(a.l - b.l) >= delta || Math.abs(a.m - b.m) >= delta || Math.abs(a.n - b.n) >= delta || Math.abs(a.o - b.o) >= delta || Math.abs(a.p - b.p) >= delta || Math.abs(a.q - b.q) >= delta || Math.abs(a.r - b.r) >= delta || Math.abs(a.s - b.s) >= delta || Math.abs(a.t - b.t) >= delta || Math.abs(a.u - b.u) >= delta || Math.abs(a.v - b.v) >= delta || Math.abs(a.w - b.w) >= delta || Math.abs(a.x - b.x) >= delta || Math.abs(a.y - b.y) >= delta);
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.notEqual = function(a,b) {
	var delta = 0.0000001;
	return !(!(Math.abs(a.a - b.a) >= delta || Math.abs(a.b - b.b) >= delta || Math.abs(a.c - b.c) >= delta || Math.abs(a.d - b.d) >= delta || Math.abs(a.e - b.e) >= delta || Math.abs(a.f - b.f) >= delta || Math.abs(a.g - b.g) >= delta || Math.abs(a.h - b.h) >= delta || Math.abs(a.i - b.i) >= delta || Math.abs(a.j - b.j) >= delta || Math.abs(a.k - b.k) >= delta || Math.abs(a.l - b.l) >= delta || Math.abs(a.m - b.m) >= delta || Math.abs(a.n - b.n) >= delta || Math.abs(a.o - b.o) >= delta || Math.abs(a.p - b.p) >= delta || Math.abs(a.q - b.q) >= delta || Math.abs(a.r - b.r) >= delta || Math.abs(a.s - b.s) >= delta || Math.abs(a.t - b.t) >= delta || Math.abs(a.u - b.u) >= delta || Math.abs(a.v - b.v) >= delta || Math.abs(a.w - b.w) >= delta || Math.abs(a.x - b.x) >= delta || Math.abs(a.y - b.y) >= delta));
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.negating = function(a) {
	var this1 = new geom_structure_Mat5x5(-a.a,-a.b,-a.c,-a.d,-a.e,-a.f,-a.g,-a.h,-a.i,-a.j,-a.k,-a.l,-a.m,-a.n,-a.o,-a.p,-a.q,-a.r,-a.s,-a.t,-a.u,-a.v,-a.w,-a.x,-a.y);
	return this1;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.negate = function(this1) {
	var this2 = new geom_structure_Mat5x5(-this1.a,-this1.b,-this1.c,-this1.d,-this1.e,-this1.f,-this1.g,-this1.h,-this1.i,-this1.j,-this1.k,-this1.l,-this1.m,-this1.n,-this1.o,-this1.p,-this1.q,-this1.r,-this1.s,-this1.t,-this1.u,-this1.v,-this1.w,-this1.x,-this1.y);
	return this2;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.multiply = function(r,s) {
	var this1 = new geom_structure_Mat5x5(r.a * s.a + r.b * s.f + r.c * s.k + r.d * s.p + r.e * s.u,r.a * s.b + r.b * s.g + r.c * s.l + r.d * s.q + r.e * s.v,r.a * s.c + r.b * s.h + r.c * s.m + r.d * s.r + r.e * s.w,r.a * s.d + r.b * s.i + r.c * s.n + r.d * s.s + r.e * s.x,r.a * s.e + r.b * s.j + r.c * s.o + r.d * s.t + r.e * s.y,r.f * s.a + r.g * s.f + r.h * s.k + r.i * s.p + r.j * s.u,r.f * s.b + r.g * s.g + r.h * s.l + r.i * s.q + r.j * s.v,r.f * s.c + r.g * s.h + r.h * s.m + r.i * s.r + r.j * s.w,r.f * s.d + r.g * s.i + r.h * s.n + r.i * s.s + r.j * s.x,r.f * s.e + r.g * s.j + r.h * s.o + r.i * s.t + r.j * s.y,r.k * s.a + r.l * s.f + r.m * s.k + r.n * s.p + r.o * s.u,r.k * s.b + r.l * s.g + r.m * s.l + r.n * s.q + r.o * s.v,r.k * s.c + r.l * s.h + r.m * s.m + r.n * s.r + r.o * s.w,r.k * s.d + r.l * s.i + r.m * s.n + r.n * s.s + r.o * s.x,r.k * s.e + r.l * s.j + r.m * s.o + r.n * s.t + r.o * s.y,r.p * s.a + r.q * s.f + r.r * s.k + r.s * s.p + r.t * s.u,r.p * s.b + r.q * s.g + r.r * s.l + r.s * s.q + r.t * s.v,r.p * s.c + r.q * s.h + r.r * s.m + r.s * s.r + r.t * s.w,r.p * s.d + r.q * s.i + r.r * s.n + r.s * s.s + r.t * s.x,r.p * s.e + r.q * s.j + r.r * s.o + r.s * s.t + r.t * s.y,r.u * s.a + r.v * s.f + r.w * s.k + r.x * s.p + r.y * s.u,r.u * s.b + r.v * s.g + r.w * s.l + r.x * s.q + r.y * s.v,r.u * s.c + r.v * s.h + r.w * s.m + r.x * s.r + r.y * s.w,r.u * s.d + r.v * s.i + r.w * s.n + r.x * s.s + r.y * s.x,r.u * s.e + r.v * s.j + r.w * s.o + r.x * s.t + r.y * s.y);
	return this1;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.add = function(m0,m1) {
	var this1 = new geom_structure_Mat5x5(m0.a + m1.a,m0.b + m1.b,m0.c + m1.c,m0.d + m1.d,m0.e + m1.e,m0.f + m1.f,m0.g + m1.g,m0.h + m1.h,m0.i + m1.i,m0.j + m1.j,m0.k + m1.k,m0.l + m1.l,m0.m + m1.m,m0.n + m1.n,m0.o + m1.o,m0.p + m1.p,m0.q + m1.q,m0.r + m1.r,m0.s + m1.s,m0.t + m1.t,m0.u + m1.u,m0.v + m1.v,m0.w + m1.w,m0.x + m1.x,m0.y + m1.y);
	return this1;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.sub = function(m0,m1) {
	var this1 = new geom_structure_Mat5x5(m0.a - m1.a,m0.b - m1.b,m0.c - m1.c,m0.d - m1.d,m0.e - m1.e,m0.f - m1.f,m0.g - m1.g,m0.h - m1.h,m0.i - m1.i,m0.j - m1.j,m0.k - m1.k,m0.l - m1.l,m0.m - m1.m,m0.n - m1.n,m0.o - m1.o,m0.p - m1.p,m0.q - m1.q,m0.r - m1.r,m0.s - m1.s,m0.t - m1.t,m0.u - m1.u,m0.v - m1.v,m0.w - m1.w,m0.x - m1.x,m0.y - m1.y);
	return this1;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.transpose = function(this1) {
	var this2 = new geom_structure_Mat5x5(this1.a,this1.f,this1.k,this1.p,this1.u,this1.b,this1.g,this1.l,this1.q,this1.v,this1.c,this1.h,this1.m,this1.r,this1.w,this1.d,this1.i,this1.n,this1.s,this1.x,this1.e,this1.j,this1.o,this1.t,this1.y);
	return this2;
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.setXY = function(this1,x,y,v) {
	switch(x) {
	case 0:
		switch(y) {
		case 0:
			return this1.a = v;
		case 1:
			return this1.b = v;
		case 2:
			return this1.c = v;
		case 3:
			return this1.d = v;
		case 4:
			return this1.e = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix5x5");
		}
		break;
	case 1:
		switch(y) {
		case 0:
			return this1.f = v;
		case 1:
			return this1.g = v;
		case 2:
			return this1.h = v;
		case 3:
			return this1.i = v;
		case 4:
			return this1.j = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix5x5");
		}
		break;
	case 2:
		switch(y) {
		case 0:
			return this1.k = v;
		case 1:
			return this1.l = v;
		case 2:
			return this1.m = v;
		case 3:
			return this1.n = v;
		case 4:
			return this1.o = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix5x5");
		}
		break;
	case 3:
		switch(y) {
		case 0:
			return this1.p = v;
		case 1:
			return this1.q = v;
		case 2:
			return this1.r = v;
		case 3:
			return this1.s = v;
		case 4:
			return this1.t = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix5x5");
		}
		break;
	case 4:
		switch(y) {
		case 0:
			return this1.u = v;
		case 1:
			return this1.v = v;
		case 2:
			return this1.w = v;
		case 3:
			return this1.x = v;
		case 4:
			return this1.y = v;
		default:
			throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix5x5");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("bad set " + x + ", " + y + " on Matrix5x5");
	}
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.getXY = function(this1,x,y) {
	switch(x) {
	case 0:
		switch(y) {
		case 0:
			return this1.a;
		case 1:
			return this1.b;
		case 2:
			return this1.c;
		case 3:
			return this1.d;
		case 4:
			return this1.e;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix5x5");
		}
		break;
	case 1:
		switch(y) {
		case 0:
			return this1.f;
		case 1:
			return this1.g;
		case 2:
			return this1.h;
		case 3:
			return this1.i;
		case 4:
			return this1.j;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix5x5");
		}
		break;
	case 2:
		switch(y) {
		case 0:
			return this1.k;
		case 1:
			return this1.l;
		case 2:
			return this1.m;
		case 3:
			return this1.n;
		case 4:
			return this1.o;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix5x5");
		}
		break;
	case 3:
		switch(y) {
		case 0:
			return this1.p;
		case 1:
			return this1.q;
		case 2:
			return this1.r;
		case 3:
			return this1.s;
		case 4:
			return this1.t;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix5x5");
		}
		break;
	case 4:
		switch(y) {
		case 0:
			return this1.u;
		case 1:
			return this1.v;
		case 2:
			return this1.w;
		case 3:
			return this1.x;
		case 4:
			return this1.y;
		default:
			throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix5x5");
		}
		break;
	default:
		throw new js__$Boot_HaxeError("bad get " + x + ", " + y + " on Matrix5x5");
	}
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.pretty = function(this1,prec) {
	var sa = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.a,prec);
	var sb = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.b,prec);
	var sc = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.c,prec);
	var sd = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.d,prec);
	var se = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.e,prec);
	var sf = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.f,prec);
	var sg = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.g,prec);
	var sh = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.h,prec);
	var si = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.i,prec);
	var sj = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.j,prec);
	var sk = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.k,prec);
	var sl = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.l,prec);
	var sm = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.m,prec);
	var sn = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.n,prec);
	var so = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.o,prec);
	var sp = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.p,prec);
	var sq = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.q,prec);
	var sr = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.r,prec);
	var ss = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.s,prec);
	var st = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.t,prec);
	var su = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.u,prec);
	var sv = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.v,prec);
	var sw = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.w,prec);
	var sx = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.x,prec);
	var sy = geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision(this1.y,prec);
	var la = sa.length;
	var lb = sb.length;
	var lc = sc.length;
	var ld = sd.length;
	var le = se.length;
	var lf = sf.length;
	var lg = sg.length;
	var lh = sh.length;
	var li = si.length;
	var lj = sj.length;
	var lk = sk.length;
	var ll = sl.length;
	var lm = sm.length;
	var ln = sn.length;
	var lo = so.length;
	var lp = sp.length;
	var lq = sq.length;
	var lr = sr.length;
	var ls = ss.length;
	var lt = st.length;
	var lu = su.length;
	var lv = sv.length;
	var lw = sw.length;
	var lx = sx.length;
	var ly = sy.length;
	var r0 = Math.round(Math.max(Math.max(Math.max(Math.max(la,lf),lk),lp),lu));
	var r1 = Math.round(Math.max(Math.max(Math.max(Math.max(lb,lg),ll),lq),lv));
	var r2 = Math.round(Math.max(Math.max(Math.max(Math.max(lc,lh),lm),lr),lw));
	var r3 = Math.round(Math.max(Math.max(Math.max(Math.max(ld,li),ln),ls),lx));
	var r4 = Math.round(Math.max(Math.max(Math.max(Math.max(le,lj),lo),lt),ly));
	var spaces = "";
	var _g = 0;
	var _g1 = r0;
	while(_g < _g1) {
		var n = _g++;
		spaces += " ";
	}
	sa = HxOverrides.substr(spaces,0,r0 - la) + sa;
	sf = HxOverrides.substr(spaces,0,r0 - lf) + sf;
	sk = HxOverrides.substr(spaces,0,r0 - lk) + sk;
	sp = HxOverrides.substr(spaces,0,r0 - lp) + sp;
	su = HxOverrides.substr(spaces,0,r0 - lu) + su;
	var spaces1 = "";
	var _g2 = 0;
	var _g3 = r1;
	while(_g2 < _g3) {
		var n1 = _g2++;
		spaces1 += " ";
	}
	sb = HxOverrides.substr(spaces1,0,r1 - lb) + sb;
	sg = HxOverrides.substr(spaces1,0,r1 - lg) + sg;
	sl = HxOverrides.substr(spaces1,0,r1 - ll) + sl;
	sq = HxOverrides.substr(spaces1,0,r1 - lq) + sq;
	sv = HxOverrides.substr(spaces1,0,r1 - lv) + sv;
	var space = "";
	var _g4 = 0;
	var _g5 = r2;
	while(_g4 < _g5) {
		var n2 = _g4++;
		spaces1 += " ";
	}
	sc = HxOverrides.substr(spaces1,0,r2 - lc) + sc;
	sh = HxOverrides.substr(spaces1,0,r2 - lh) + sh;
	sm = HxOverrides.substr(spaces1,0,r2 - lm) + sm;
	sr = HxOverrides.substr(spaces1,0,r2 - lr) + sr;
	sw = HxOverrides.substr(spaces1,0,r2 - lw) + sw;
	var space1 = "";
	var _g6 = 0;
	var _g7 = r3;
	while(_g6 < _g7) {
		var n3 = _g6++;
		spaces1 += " ";
	}
	sd = HxOverrides.substr(spaces1,0,r3 - ld) + sd;
	si = HxOverrides.substr(spaces1,0,r3 - li) + si;
	sn = HxOverrides.substr(spaces1,0,r3 - ln) + sn;
	ss = HxOverrides.substr(spaces1,0,r3 - ls) + ss;
	sx = HxOverrides.substr(spaces1,0,r3 - lx) + sx;
	var space2 = "";
	var _g8 = 0;
	var _g9 = r4;
	while(_g8 < _g9) {
		var n4 = _g8++;
		spaces1 += " ";
	}
	se = HxOverrides.substr(spaces1,0,r4 - le) + se;
	sj = HxOverrides.substr(spaces1,0,r4 - lj) + sj;
	so = HxOverrides.substr(spaces1,0,r4 - lo) + so;
	st = HxOverrides.substr(spaces1,0,r4 - lt) + st;
	sy = HxOverrides.substr(spaces1,0,r4 - ly) + sy;
	return "\n" + "/ " + sa + ", " + sb + ", " + sc + ", " + sd + ", " + se + " \\\n" + "| " + sf + ", " + sg + ", " + sh + ", " + si + ", " + sj + " |\n" + "| " + sk + ", " + sl + ", " + sm + ", " + sn + ", " + so + " |\n" + "| " + sp + ", " + sq + ", " + sr + ", " + ss + ", " + st + " |\n" + "\\ " + su + ", " + sv + ", " + sw + ", " + sx + ", " + sy + " /\n";
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.max5 = function(f0,f1,f2,f3,f4) {
	return Math.round(Math.max(Math.max(Math.max(Math.max(f0,f1),f2),f3),f4));
};
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.floatToStringPrecision = function(n,prec) {
	if(n == 0) {
		var _g = [];
		var _g1 = 0;
		var _g2 = prec;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push("0");
		}
		return "0." + _g.join("");
	}
	var minusSign = n < 0.0;
	n = Math.abs(n);
	var intPart = Math.floor(n);
	var p = Math.pow(10,prec);
	var fracPart = Math.round(p * (n - intPart));
	var buf = new StringBuf();
	if(minusSign) {
		buf.addChar(45);
	}
	buf.add(intPart == null ? "null" : "" + intPart);
	if(fracPart == 0) {
		buf.addChar(46);
		var _g3 = 0;
		var _g11 = prec;
		while(_g3 < _g11) {
			var i1 = _g3++;
			buf.addChar(48);
		}
	} else {
		buf.addChar(46);
		p /= 10;
		var nZeros = 0;
		while(fracPart < p) {
			p /= 10;
			buf.addChar(48);
		}
		buf.add(fracPart);
	}
	return buf.toString();
};
var geom_matrix__$Quaternion_Quaternion_$Impl_$ = {};
geom_matrix__$Quaternion_Quaternion_$Impl_$.__name__ = "geom.matrix._Quaternion.Quaternion_Impl_";
geom_matrix__$Quaternion_Quaternion_$Impl_$.__properties__ = {set_euler:"set_euler",get_euler:"get_euler",set_magnitude:"set_magnitude",get_magnitude:"get_magnitude",get_unitNormal:"get_unitNormal",get_unit:"get_unit",get_zeroNormal:"get_zeroNormal",get_zero:"get_zero"};
geom_matrix__$Quaternion_Quaternion_$Impl_$._new = function(m) {
	var this1 = m;
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.get_zero = function() {
	var this1 = new geom_structure_Mat1x4(0.,0.,0.,0.);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.get_zeroNormal = function() {
	var this1 = new geom_structure_Mat1x4(0.,0.,0.,1.);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.get_unit = function() {
	var this1 = new geom_structure_Mat1x4(1.,1.,1.,1.);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.get_unitNormal = function() {
	var this1 = new geom_structure_Mat1x4(1.,1.,1.,1.);
	var this2 = this1;
	var currentLength = Math.sqrt(this2.x * this2.x + this2.y * this2.y + this2.z * this2.z + this2.w * this2.w);
	if(currentLength != 0.) {
		var mul = 1. / currentLength;
		this2.x *= mul;
		this2.y *= mul;
		this2.z *= mul;
		this2.w *= mul;
		var tmp = this2.x * this2.x + this2.y * this2.y + this2.z * this2.z + this2.w * this2.w;
	}
	return this2;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.clone = function(this1) {
	var this2 = new geom_structure_Mat1x4(this1.x,this1.y,this1.z,this1.w);
	return this2;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.xRotate = function(angle) {
	var this1 = new geom_structure_Mat1x4(Math.sin(0.5 * angle),0.,0,Math.cos(0.5 * angle));
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.yRotate = function(angle) {
	var this1 = new geom_structure_Mat1x4(0.,Math.sin(0.5 * angle),0.,Math.cos(0.5 * angle));
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.zRotate = function(angle) {
	var this1 = new geom_structure_Mat1x4(0.,0.,Math.sin(0.5 * angle),Math.cos(0.5 * angle));
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.xPIhalf = function() {
	var halfSqrt = Math.sqrt(0.5);
	var this1 = new geom_structure_Mat1x4(halfSqrt,0.,0,halfSqrt);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.yPIhalf = function() {
	var halfSqrt = Math.sqrt(0.5);
	var this1 = new geom_structure_Mat1x4(0.,halfSqrt,0.,halfSqrt);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.zPIhalf = function() {
	var halfSqrt = Math.sqrt(0.5);
	var this1 = new geom_structure_Mat1x4(0.,0.,halfSqrt,halfSqrt);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.xPI = function() {
	var this1 = new geom_structure_Mat1x4(1.,0.,0,0.);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.yPI = function() {
	var this1 = new geom_structure_Mat1x4(0.,1.,0.,0.);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.zPI = function() {
	var this1 = new geom_structure_Mat1x4(0.,0.,1.,0.);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.xPIhalfMinus = function() {
	var halfSqrt = Math.sqrt(0.5);
	var this1 = new geom_structure_Mat1x4(-halfSqrt,0.,0,halfSqrt);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.yPIhalfMinus = function() {
	var halfSqrt = Math.sqrt(0.5);
	var this1 = new geom_structure_Mat1x4(0.,-halfSqrt,0.,halfSqrt);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.zPIhalfMinus = function() {
	var halfSqrt = Math.sqrt(0.5);
	var this1 = new geom_structure_Mat1x4(0.,0.,-halfSqrt,halfSqrt);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.createFromAxisAngle = function(x,y,z,theta) {
	var factor = Math.sin(theta / 2.0);
	x *= factor;
	y *= factor;
	z *= factor;
	var w = Math.cos(theta / 2.0);
	var this1 = new geom_structure_Mat1x4(x,y,z,w);
	var this2 = this1;
	var currentLength = Math.sqrt(this2.x * this2.x + this2.y * this2.y + this2.z * this2.z + this2.w * this2.w);
	if(currentLength != 0.) {
		var mul = 1. / currentLength;
		this2.x *= mul;
		this2.y *= mul;
		this2.z *= mul;
		this2.w *= mul;
		var tmp = this2.x * this2.x + this2.y * this2.y + this2.z * this2.z + this2.w * this2.w;
	}
	return this2;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.getAngleAxis = function(this1) {
	var sqrt = Math.sqrt(1 - this1.w * this1.w);
	var this2 = new geom_structure_Mat1x3(this1.x / sqrt,this1.y / sqrt,this1.z / sqrt);
	return { axis : this2, angle : 2 * Math.acos(this1.w)};
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.identity = function(out) {
	out.x = 0.;
	out.y = 0.;
	out.z = 0.;
	out.w = 1.;
	return out;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.toMatrix4x1 = function(this1) {
	var this2 = new geom_structure_Mat1x4(this1.x,this1.y,this1.z,this1.w);
	return this2;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.copy = function(pin,pout) {
	pout.x = pin.x;
	pout.y = pin.y;
	pout.z = pin.z;
	pout.w = pin.w;
	return pout;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.get_magnitude = function(this1) {
	return Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w);
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.set_magnitude = function(this1,length) {
	var currentLength = Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w);
	if(currentLength == 0.) {
		return 0.;
	} else {
		var mul = length / currentLength;
		this1.x *= mul;
		this1.y *= mul;
		this1.z *= mul;
		this1.w *= mul;
		return Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w);
	}
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.dot = function(this1) {
	return this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.dotProd = function(this1,b) {
	return this1.x * b.x + this1.y * b.y + this1.z * b.z + this1.w * b.w;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.dotProduct = function(a,b) {
	return a.x * b.x + a.y * b.y + a.z * b.z + a.w * b.w;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.equal = function(a,b) {
	var delta = 0.0000001;
	return !(Math.abs(a.x - b.x) >= delta || Math.abs(a.y - b.y) >= delta || Math.abs(a.z - b.z) >= delta || Math.abs(a.w - b.w) >= delta);
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.distanceZeroOne = function(this1,q) {
	var dot_ = this1.x * q.x + this1.y * q.y + this1.z * q.z + this1.w * q.w;
	return 1 - dot_ * dot_;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.theta = function(this1,q) {
	var d = this1.x * q.x + this1.y * q.y + this1.z * q.z + this1.w * q.w;
	return Math.acos(2 * d * d - 1);
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.notEqual = function(a,b) {
	var delta = 0.0000001;
	return !(!(Math.abs(a.x - b.x) >= delta || Math.abs(a.y - b.y) >= delta || Math.abs(a.z - b.z) >= delta || Math.abs(a.w - b.w) >= delta));
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.magnitudeSquared = function(this1) {
	return this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.add = function(a,b) {
	var this1 = new geom_structure_Mat1x4(a.x + b.x,a.y + b.y,a.z + b.z,a.w + b.w);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.subtract = function(a,b) {
	var this1 = new geom_structure_Mat1x4(a.x - b.x,a.y - b.y,a.z - b.z,a.w - b.w);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.scaleMultiply = function(a,v) {
	var this1 = new geom_structure_Mat1x4(a.x * v,a.y * v,a.z * v,a.w * v);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.divide = function(a,v) {
	var v1 = 1 / v;
	var this1 = new geom_structure_Mat1x4(a.x * v1,a.y * v1,a.z * v1,a.w * v1);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.divide2 = function(v,a) {
	var this1 = new geom_structure_Mat1x4(v / a.x,v / a.y,v / a.z,v / a.w);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.conjugate = function(a) {
	var this1 = new geom_structure_Mat1x4(-a.x,-a.y,-a.z,a.w);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.negate = function(a) {
	var this1 = new geom_structure_Mat1x4(-a.x,-a.y,-a.z,-a.w);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.invert = function(this1) {
	var sqNorm = this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w;
	var this2 = new geom_structure_Mat1x4(this1.x / -sqNorm,this1.y / -sqNorm,this1.z / -sqNorm,this1.w / sqNorm);
	return this2;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.inversion = function(q1) {
	var sqNorm = q1.x * q1.x + q1.y * q1.y + q1.z * q1.z + q1.w * q1.w;
	var this1 = new geom_structure_Mat1x4(q1.x / -sqNorm,q1.y / -sqNorm,q1.z / -sqNorm,q1.w / sqNorm);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.multiplyQ = function(q1,q2) {
	var this1 = new geom_structure_Mat1x4(q1.x * q2.w + q1.y * q2.z - q1.z * q2.y + q1.w * q2.x,-q1.x * q2.z + q1.y * q2.w + q1.z * q2.x + q1.w * q2.y,q1.x * q2.y - q1.y * q2.x + q1.z * q2.w + q1.w * q2.z,-q1.x * q2.x - q1.y * q2.y - q1.z * q2.z + q1.w * q2.w);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.cross = function(this1,v) {
	var this2 = new geom_structure_Mat1x4(this1.y * v.z - this1.z * v.y,this1.z * v.x - this1.x * v.z,this1.x * v.y - this1.y * v.x,this1.w * v.w);
	return this2;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.fromYawPitchRoll = function(yaw,pitch,roll) {
	var n9 = roll * 0.5;
	var n6 = Math.sin(n9);
	var n5 = Math.cos(n9);
	var n8 = pitch * 0.5;
	var n4 = Math.sin(n8);
	var n3 = Math.cos(n8);
	var n7 = yaw * 0.5;
	var n2 = Math.sin(n7);
	var n1 = Math.cos(n7);
	var this1 = new geom_structure_Mat1x4(n1 * n4 * n5 + n2 * n3 * n6,n2 * n3 * n5 - n1 * n4 * n6,n1 * n3 * n6 - n2 * n4 * n5,n1 * n3 * n5 + n2 * n4 * n6);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.fromAxisAngle = function(theta,axis) {
	var half = theta / 2.;
	var c = Math.cos(half);
	var s = Math.sin(half);
	var this1 = new geom_structure_Mat1x4(s * axis.x,s * axis.y,s * axis.z,c);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.lerp = function(a,b,t) {
	var currentLength = Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z + a.w * a.w);
	if(currentLength != 0.) {
		var mul = 1. / currentLength;
		a.x *= mul;
		a.y *= mul;
		a.z *= mul;
		a.w *= mul;
		var tmp = a.x * a.x + a.y * a.y + a.z * a.z + a.w * a.w;
	}
	var currentLength1 = Math.sqrt(b.x * b.x + b.y * b.y + b.z * b.z + b.w * b.w);
	if(currentLength1 != 0.) {
		var mul1 = 1. / currentLength1;
		b.x *= mul1;
		b.y *= mul1;
		b.z *= mul1;
		b.w *= mul1;
		var tmp1 = b.x * b.x + b.y * b.y + b.z * b.z + b.w * b.w;
	}
	var v = 1.0 - t;
	var this1 = new geom_structure_Mat1x4(a.x * v,a.y * v,a.z * v,a.w * v);
	var a1 = this1;
	var this2 = new geom_structure_Mat1x4(b.x * t,b.y * t,b.z * t,b.w * t);
	var b1 = this2;
	var this3 = new geom_structure_Mat1x4(a1.x + b1.x,a1.y + b1.y,a1.z + b1.z,a1.w + b1.w);
	return this3;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.set_euler = function(this1,a) {
	var x5 = a.x * .5;
	var y5 = a.y * .5;
	var z5 = a.z * .5;
	var cx = Math.cos(x5);
	var sx = Math.sin(x5);
	var cy = Math.cos(y5);
	var sy = Math.sin(y5);
	var cz = Math.cos(z5);
	var sz = Math.sin(z5);
	this1.w = cx * cy * cz + sx * sy * sz;
	this1.x = sx * cy * cz - cx * sy * sz;
	this1.y = cx * sy * cz + sx * cy * sz;
	this1.z = cx * cy * sz - sx * sy * cz;
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.get_euler = function(this1) {
	var this2 = new geom_structure_Mat1x4(Math.atan2(2 * (this1.w * this1.x + this1.y * this1.z),1 - 2 * (this1.x * this1.x + this1.y * this1.y)),Math.asin(2 * (this1.w * this1.y - this1.z * this1.x)),Math.atan2(2 * (this1.w * this1.z + this1.x * this1.y),1 - 2 * (this1.y * this1.y + this1.z * this1.z)),1.);
	return this2;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.slerp = function(this1,v1,t) {
	var this2 = new geom_structure_Mat1x4(this1.x,this1.y,this1.z,this1.w);
	var v0 = this2;
	var currentLength = Math.sqrt(v0.x * v0.x + v0.y * v0.y + v0.z * v0.z + v0.w * v0.w);
	if(currentLength != 0.) {
		var mul = 1. / currentLength;
		v0.x *= mul;
		v0.y *= mul;
		v0.z *= mul;
		v0.w *= mul;
		var tmp = v0.x * v0.x + v0.y * v0.y + v0.z * v0.z + v0.w * v0.w;
	}
	var dot = v0.x * v1.x + v0.y * v1.y + v0.z * v1.z + v0.w * v1.w;
	if(dot < 0.0) {
		var this3 = new geom_structure_Mat1x4(-v1.x,-v1.y,-v1.z,-v1.w);
		v1 = this3;
		dot = -dot;
	}
	if(dot > 0.9995) {
		var _g = t;
		var this4 = new geom_structure_Mat1x4(v1.x - v0.x,v1.y - v0.y,v1.z - v0.z,v1.w - v0.w);
		var _g1 = this4;
		var this5 = new geom_structure_Mat1x4(_g1.x * _g,_g1.y * _g,_g1.z * _g,_g1.w * _g);
		var b = this5;
		var this6 = new geom_structure_Mat1x4(v0.x + b.x,v0.y + b.y,v0.z + b.z,v0.w + b.w);
		var result = this6;
		var currentLength1 = Math.sqrt(result.x * result.x + result.y * result.y + result.z * result.z + result.w * result.w);
		if(currentLength1 != 0.) {
			var mul1 = 1. / currentLength1;
			result.x *= mul1;
			result.y *= mul1;
			result.z *= mul1;
			result.w *= mul1;
			var tmp1 = result.x * result.x + result.y * result.y + result.z * result.z + result.w * result.w;
		}
		return result;
	}
	var theta0 = Math.acos(dot);
	var theta = theta0 * t;
	var sinTheta = Math.sin(theta);
	var sinTheta0 = Math.sin(theta0);
	var ratioA = Math.cos(theta) - dot * sinTheta / sinTheta0;
	var ratioB = sinTheta / sinTheta0;
	var this7 = new geom_structure_Mat1x4(v0.x * ratioA + v1.x * ratioB,v0.y * ratioA + v1.y * ratioB,v0.z * ratioA + v1.z * ratioB,v0.x * ratioA + v1.x * ratioB);
	var q = this7;
	var currentLength2 = Math.sqrt(q.x * q.x + q.y * q.y + q.z * q.z + q.w * q.w);
	if(currentLength2 != 0.) {
		var mul2 = 1. / currentLength2;
		q.x *= mul2;
		q.y *= mul2;
		q.z *= mul2;
		q.w *= mul2;
		var tmp2 = q.x * q.x + q.y * q.y + q.z * q.z + q.w * q.w;
	}
	return q;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.scalarReal = function(s) {
	var this1 = new geom_structure_Mat1x4(0,0,0,Math.sqrt(s));
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.scaled = function(this1,s) {
	var this2 = new geom_structure_Mat1x4(this1.x * s,this1.y * s,this1.z * s,this1.w * s);
	return this2;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.normalize = function(this1) {
	var currentLength = Math.sqrt(this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w);
	if(currentLength != 0.) {
		var mul = 1. / currentLength;
		this1.x *= mul;
		this1.y *= mul;
		this1.z *= mul;
		this1.w *= mul;
		var tmp = this1.x * this1.x + this1.y * this1.y + this1.z * this1.z + this1.w * this1.w;
	}
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.lookAt = function(this1,target,current,eye,up) {
	var this2 = new geom_structure_Mat1x4(current.x - eye.x,current.y - eye.y,current.z - eye.z,current.w - eye.w);
	var this3 = this2;
	var currentLength = Math.sqrt(this3.x * this3.x + this3.y * this3.y + this3.z * this3.z + this3.w * this3.w);
	if(currentLength != 0.) {
		var mul = 1. / currentLength;
		this3.x *= mul;
		this3.y *= mul;
		this3.z *= mul;
		this3.w *= mul;
		var tmp = this3.x * this3.x + this3.y * this3.y + this3.z * this3.z + this3.w * this3.w;
	}
	var n1 = this3;
	var this4 = new geom_structure_Mat1x4(target.x - eye.x,target.y - eye.y,target.z - eye.z,target.w - eye.w);
	var this5 = this4;
	var currentLength1 = Math.sqrt(this5.x * this5.x + this5.y * this5.y + this5.z * this5.z + this5.w * this5.w);
	if(currentLength1 != 0.) {
		var mul1 = 1. / currentLength1;
		this5.x *= mul1;
		this5.y *= mul1;
		this5.z *= mul1;
		this5.w *= mul1;
		var tmp1 = this5.x * this5.x + this5.y * this5.y + this5.z * this5.z + this5.w * this5.w;
	}
	var n2 = this5;
	var d = n1.x * n2.x + n1.y * n2.y + n1.z * n2.z + n1.w * n2.w;
	if(d > 0.9998) {
		var this6 = new geom_structure_Mat1x4(0.,0.,1.,0.);
		return this6;
	}
	if(d < -0.9998) {
		var this7 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,1.,0.,0.,0.,0.,1.,0.);
		var this8 = this7;
		var c = Math.cos(0.5);
		var s = Math.sin(0.5);
		var this9 = new geom_structure_Mat4x3(1.,0.,0.,0.,0.,c,-s,0.,0.,s,c,0.);
		var s1 = this9;
		var this10 = new geom_structure_Mat4x3(this8.a * s1.a + this8.b * s1.e + this8.c * s1.i,this8.a * s1.b + this8.b * s1.f + this8.c * s1.j,this8.a * s1.c + this8.b * s1.g + this8.c * s1.k,this8.a * s1.d + this8.b * s1.h + this8.c * s1.l + this8.d,this8.e * s1.a + this8.f * s1.e + this8.g * s1.i,this8.e * s1.b + this8.f * s1.f + this8.g * s1.j,this8.e * s1.c + this8.f * s1.g + this8.g * s1.k,this8.e * s1.d + this8.f * s1.h + this8.g * s1.l + this8.h,this8.i * s1.a + this8.j * s1.e + this8.k * s1.i,this8.i * s1.b + this8.j * s1.f + this8.k * s1.j,this8.i * s1.c + this8.j * s1.g + this8.k * s1.k,this8.i * s1.d + this8.j * s1.h + this8.k * s1.l + this8.l);
		var t = this10;
		var this11 = new geom_structure_Mat1x4(t.a * n1.x + t.b * n1.y + t.c * n1.z + t.d,t.e * n1.x + t.f * n1.y + t.g * n1.z + t.h,t.i * n1.x + t.j * n1.y + t.k * n1.z + t.l,1.);
		n1 = this11;
	}
	var axis = n1;
	var this12 = new geom_structure_Mat1x4(axis.y * n2.z - axis.z * n2.y,axis.z * n2.x - axis.x * n2.z,axis.x * n2.y - axis.y * n2.x,axis.w * n2.w);
	var pointToTarget = new geom_structure_Mat1x4(axis.x,axis.y,axis.z,1.0 + d);
	var currentLength2 = Math.sqrt(pointToTarget.x * pointToTarget.x + pointToTarget.y * pointToTarget.y + pointToTarget.z * pointToTarget.z + pointToTarget.w * pointToTarget.w);
	if(currentLength2 != 0.) {
		var mul2 = 1. / currentLength2;
		pointToTarget.x *= mul2;
		pointToTarget.y *= mul2;
		pointToTarget.z *= mul2;
		pointToTarget.w *= mul2;
		var tmp2 = pointToTarget.x * pointToTarget.x + pointToTarget.y * pointToTarget.y + pointToTarget.z * pointToTarget.z + pointToTarget.w * pointToTarget.w;
	}
	var a = pointToTarget.x;
	var b = pointToTarget.y;
	var c1 = pointToTarget.z;
	var this13 = new geom_structure_Mat4x3(b * b + c1 * c1,-a * b,-b * a,0,-b * a,a * a + c1 * c1,-b * c1,0,-c1 * a,-c1 * b,a * a + b * b,0);
	var projectionMatrix = this13;
	var this14 = new geom_structure_Mat1x4(projectionMatrix.a * up.x + projectionMatrix.b * up.y + projectionMatrix.c * up.z + projectionMatrix.d,projectionMatrix.e * up.x + projectionMatrix.f * up.y + projectionMatrix.g * up.z + projectionMatrix.h,projectionMatrix.i * up.x + projectionMatrix.j * up.y + projectionMatrix.k * up.z + projectionMatrix.l,1.);
	var upProjected = this14;
	var y = new geom_structure_Mat1x4(0.,0.,0.,1.);
	var this15 = new geom_structure_Mat1x4(projectionMatrix.a * y.x + projectionMatrix.b * y.y + projectionMatrix.c * y.z + projectionMatrix.d,projectionMatrix.e * y.x + projectionMatrix.f * y.y + projectionMatrix.g * y.z + projectionMatrix.h,projectionMatrix.i * y.x + projectionMatrix.j * y.y + projectionMatrix.k * y.z + projectionMatrix.l,1.);
	var yaxisProjected = this15;
	d = upProjected.x * yaxisProjected.x + upProjected.y * yaxisProjected.y + upProjected.z * yaxisProjected.z + upProjected.w * yaxisProjected.w;
	var s2 = Math.sqrt(1.0 - d * d);
	var twist = new geom_structure_Mat1x4(n2.x * s2,n2.y * s2,n2.z * s2,d);
	var this16 = new geom_structure_Mat1x4(pointToTarget.x * twist.w + pointToTarget.y * twist.z - pointToTarget.z * twist.y + pointToTarget.w * twist.x,-pointToTarget.x * twist.z + pointToTarget.y * twist.w + pointToTarget.z * twist.x + pointToTarget.w * twist.y,pointToTarget.x * twist.y - pointToTarget.y * twist.x + pointToTarget.z * twist.w + pointToTarget.w * twist.z,-pointToTarget.x * twist.x - pointToTarget.y * twist.y - pointToTarget.z * twist.z + pointToTarget.w * twist.w);
	return this16;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.fromVec = function(vec) {
	var this1 = new geom_structure_Mat1x4(vec[0],vec[1],vec[2],vec[3]);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.toVector = function(this1) {
	var this2 = new Array(4);
	var vec = this2;
	vec[0] = this1.x;
	vec[1] = this1.y;
	vec[2] = this1.z;
	vec[3] = this1.w;
	return vec;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.fromArray = function(arr) {
	var this1 = new geom_structure_Mat1x4(arr[0],arr[1],arr[2],arr[3]);
	return this1;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.toArray = function(this1) {
	return [this1.x,this1.y,this1.z,this1.w];
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.toMatrix4x3 = function(this1) {
	var this2 = this1;
	var this3 = this2;
	var xx = this3.x * this3.x;
	var xy = this3.x * this3.y;
	var xz = this3.x * this3.z;
	var xw = this3.x * this3.w;
	var yy = this3.y * this3.y;
	var yz = this3.y * this3.z;
	var yw = this3.y * this3.w;
	var zz = this3.z * this3.z;
	var zw = this3.z * this3.w;
	var this4 = new geom_structure_Mat3x3(1 - 2 * (yy + zz),2 * (xy - zw),2 * (xz + yw),2 * (xy + zw),1 - 2 * (xx + zz),2 * (yz - xw),2 * (xz - yw),2 * (yz + xw),1 - 2 * (xx + yy));
	var m = this4;
	return geom_matrix_Conversion._2x2to4x3(geom_matrix_Conversion._3x3to2x2(m));
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.toMatrix3x3 = function(this1) {
	var xx = this1.x * this1.x;
	var xy = this1.x * this1.y;
	var xz = this1.x * this1.z;
	var xw = this1.x * this1.w;
	var yy = this1.y * this1.y;
	var yz = this1.y * this1.z;
	var yw = this1.y * this1.w;
	var zz = this1.z * this1.z;
	var zw = this1.z * this1.w;
	var this2 = new geom_structure_Mat3x3(1 - 2 * (yy + zz),2 * (xy - zw),2 * (xz + yw),2 * (xy + zw),1 - 2 * (xx + zz),2 * (yz - xw),2 * (xz - yw),2 * (yz + xw),1 - 2 * (xx + yy));
	return this2;
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.fromMatrix4x3 = function(m4x3) {
	var m3x3 = geom_matrix_Conversion._4x3to3x3(m4x3);
	var this1 = new geom_structure_Mat3x3(0.,0.,0.,0.,0.,0.,0.,0.,0.);
	var tr = m3x3.a + m3x3.e + m3x3.i;
	var s;
	if(tr > 0) {
		s = Math.sqrt(tr + 1.0) * 2;
		var this2 = new geom_structure_Mat1x4((m3x3.h - m3x3.f) / s,(m3x3.c - m3x3.g) / s,(m3x3.d - m3x3.b) / s,0.25 * s);
		return this2;
	} else if(m3x3.a > m3x3.e && m3x3.a > m3x3.i) {
		s = Math.sqrt(1.0 + m3x3.a - m3x3.e - m3x3.i) * 2;
		var this3 = new geom_structure_Mat1x4(0.25 * s,(m3x3.b + m3x3.d) / s,(m3x3.c + m3x3.g) / s,(m3x3.h - m3x3.f) / s);
		return this3;
	} else if(m3x3.e > m3x3.i) {
		s = Math.sqrt(1.0 + m3x3.e - m3x3.a - m3x3.i) * 2;
		var this4 = new geom_structure_Mat1x4((m3x3.b + m3x3.d) / s,0.25 * s,(m3x3.f + m3x3.h) / s,(m3x3.c - m3x3.g) / s);
		return this4;
	} else {
		s = Math.sqrt(1.0 + m3x3.i - m3x3.i - m3x3.e) * 2;
		var this5 = new geom_structure_Mat1x4((m3x3.d - m3x3.b) / s,(m3x3.c + m3x3.g) / s,(m3x3.f + m3x3.h) / s,0.25 * s);
		return this5;
	}
};
geom_matrix__$Quaternion_Quaternion_$Impl_$.fromMatrix3x3 = function(m) {
	var this1 = new geom_structure_Mat3x3(0.,0.,0.,0.,0.,0.,0.,0.,0.);
	var tr = m.a + m.e + m.i;
	var s;
	if(tr > 0) {
		s = Math.sqrt(tr + 1.0) * 2;
		var this2 = new geom_structure_Mat1x4((m.h - m.f) / s,(m.c - m.g) / s,(m.d - m.b) / s,0.25 * s);
		return this2;
	} else if(m.a > m.e && m.a > m.i) {
		s = Math.sqrt(1.0 + m.a - m.e - m.i) * 2;
		var this3 = new geom_structure_Mat1x4(0.25 * s,(m.b + m.d) / s,(m.c + m.g) / s,(m.h - m.f) / s);
		return this3;
	} else if(m.e > m.i) {
		s = Math.sqrt(1.0 + m.e - m.a - m.i) * 2;
		var this4 = new geom_structure_Mat1x4((m.b + m.d) / s,0.25 * s,(m.f + m.h) / s,(m.c - m.g) / s);
		return this4;
	} else {
		s = Math.sqrt(1.0 + m.i - m.i - m.e) * 2;
		var this5 = new geom_structure_Mat1x4((m.d - m.b) / s,(m.c + m.g) / s,(m.f + m.h) / s,0.25 * s);
		return this5;
	}
};
var geom_structure_DualQ = function(real,dual) {
	this.real = real;
	this.dual = dual;
};
geom_structure_DualQ.__name__ = "geom.structure.DualQ";
geom_structure_DualQ.prototype = {
	real: null
	,dual: null
	,__class__: geom_structure_DualQ
};
var geom_structure_MVec2 = function(s,x,y,xy) {
	this.xy = 0.;
	this.y = 0.;
	this.x = 0.;
	this.s = 0.;
	this.s = s;
	this.x = x;
	this.y = y;
	this.xy = xy;
};
geom_structure_MVec2.__name__ = "geom.structure.MVec2";
geom_structure_MVec2.prototype = {
	s: null
	,x: null
	,y: null
	,xy: null
	,__class__: geom_structure_MVec2
};
var geom_structure_MVec3 = function(s,x,y,z,xy,zx,yz,xyz) {
	this.xyz = 0.;
	this.yz = 0.;
	this.zx = 0.;
	this.xy = 0.;
	this.z = 0.;
	this.y = 0.;
	this.x = 0.;
	this.s = 0.;
	this.s = s;
	this.x = x;
	this.y = y;
	this.z = z;
	this.xy = xy;
	this.zx = zx;
	this.yz = yz;
	this.xyz = xyz;
};
geom_structure_MVec3.__name__ = "geom.structure.MVec3";
geom_structure_MVec3.prototype = {
	s: null
	,x: null
	,y: null
	,z: null
	,xy: null
	,zx: null
	,yz: null
	,xyz: null
	,__class__: geom_structure_MVec3
};
var geom_structure_Mat1x2 = function(x,y) {
	this.y = 0.;
	this.x = 0.;
	this.x = x;
	this.y = y;
};
geom_structure_Mat1x2.__name__ = "geom.structure.Mat1x2";
geom_structure_Mat1x2.prototype = {
	x: null
	,y: null
	,__class__: geom_structure_Mat1x2
};
var geom_structure_Mat1x3 = function(x,y,z) {
	this.z = 0.;
	this.y = 0.;
	this.x = 0.;
	this.x = x;
	this.y = y;
	this.z = z;
};
geom_structure_Mat1x3.__name__ = "geom.structure.Mat1x3";
geom_structure_Mat1x3.prototype = {
	x: null
	,y: null
	,z: null
	,__class__: geom_structure_Mat1x3
};
var geom_structure_Mat1x4 = function(x,y,z,w) {
	if(w == null) {
		w = 1.;
	}
	this.w = 1.;
	this.z = 0.;
	this.y = 0.;
	this.x = 0.;
	this.x = x;
	this.y = y;
	this.z = z;
	this.w = w;
};
geom_structure_Mat1x4.__name__ = "geom.structure.Mat1x4";
geom_structure_Mat1x4.prototype = {
	x: null
	,y: null
	,z: null
	,w: null
	,__class__: geom_structure_Mat1x4
};
var geom_structure_Mat2x2 = function(a,b,c,d) {
	this.d = 0.;
	this.c = 0.;
	this.b = 0.;
	this.a = 0.;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
};
geom_structure_Mat2x2.__name__ = "geom.structure.Mat2x2";
geom_structure_Mat2x2.prototype = {
	a: null
	,b: null
	,c: null
	,d: null
	,__class__: geom_structure_Mat2x2
};
var geom_structure_Mat3x3 = function(a,b,c,d,e,f,g,h,i) {
	this.i = 0.;
	this.h = 0.;
	this.g = 0.;
	this.f = 0.;
	this.e = 0.;
	this.d = 0.;
	this.c = 0.;
	this.b = 0.;
	this.a = 0.;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	this.e = e;
	this.f = f;
	this.g = g;
	this.h = h;
	this.i = i;
};
geom_structure_Mat3x3.__name__ = "geom.structure.Mat3x3";
geom_structure_Mat3x3.prototype = {
	a: null
	,b: null
	,c: null
	,d: null
	,e: null
	,f: null
	,g: null
	,h: null
	,i: null
	,__class__: geom_structure_Mat3x3
};
var geom_structure_Mat4x3 = function(a,b,c,d,e,f,g,h,i,j,k,l) {
	this.l = 0.;
	this.k = 0.;
	this.j = 0.;
	this.i = 0.;
	this.h = 0.;
	this.g = 0.;
	this.f = 0.;
	this.e = 0.;
	this.d = 0.;
	this.c = 0.;
	this.b = 0.;
	this.a = 0.;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	this.e = e;
	this.f = f;
	this.g = g;
	this.h = h;
	this.i = i;
	this.j = j;
	this.k = k;
	this.l = l;
};
geom_structure_Mat4x3.__name__ = "geom.structure.Mat4x3";
geom_structure_Mat4x3.prototype = {
	a: null
	,b: null
	,c: null
	,d: null
	,e: null
	,f: null
	,g: null
	,h: null
	,i: null
	,j: null
	,k: null
	,l: null
	,__class__: geom_structure_Mat4x3
};
var geom_structure_Mat4x4 = function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) {
	this.p = 0.;
	this.o = 0.;
	this.n = 0.;
	this.m = 0.;
	this.l = 0.;
	this.k = 0.;
	this.j = 0.;
	this.i = 0.;
	this.h = 0.;
	this.g = 0.;
	this.f = 0.;
	this.e = 0.;
	this.d = 0.;
	this.c = 0.;
	this.b = 0.;
	this.a = 0.;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	this.e = e;
	this.f = f;
	this.g = g;
	this.h = h;
	this.i = i;
	this.j = j;
	this.k = k;
	this.l = l;
	this.m = m;
	this.n = n;
	this.o = o;
	this.p = p;
};
geom_structure_Mat4x4.__name__ = "geom.structure.Mat4x4";
geom_structure_Mat4x4.prototype = {
	a: null
	,b: null
	,c: null
	,d: null
	,e: null
	,f: null
	,g: null
	,h: null
	,i: null
	,j: null
	,k: null
	,l: null
	,m: null
	,n: null
	,o: null
	,p: null
	,__class__: geom_structure_Mat4x4
};
var geom_structure_Mat5x5 = function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y) {
	this.y = 0.;
	this.x = 0.;
	this.w = 0.;
	this.v = 0.;
	this.u = 0.;
	this.t = 0.;
	this.s = 0.;
	this.r = 0.;
	this.q = 0.;
	this.p = 0.;
	this.o = 0.;
	this.n = 0.;
	this.m = 0.;
	this.l = 0.;
	this.k = 0.;
	this.j = 0.;
	this.i = 0.;
	this.h = 0.;
	this.g = 0.;
	this.f = 0.;
	this.e = 0.;
	this.d = 0.;
	this.c = 0.;
	this.b = 0.;
	this.a = 0.;
	this.a = a;
	this.b = b;
	this.c = c;
	this.d = d;
	this.e = e;
	this.f = f;
	this.g = g;
	this.h = h;
	this.i = i;
	this.j = j;
	this.k = k;
	this.l = l;
	this.m = m;
	this.n = n;
	this.o = o;
	this.p = p;
	this.q = q;
	this.r = r;
	this.s = s;
	this.t = t;
	this.u = u;
	this.v = v;
	this.w = w;
	this.x = x;
	this.y = y;
};
geom_structure_Mat5x5.__name__ = "geom.structure.Mat5x5";
geom_structure_Mat5x5.prototype = {
	a: null
	,b: null
	,c: null
	,d: null
	,e: null
	,f: null
	,g: null
	,h: null
	,i: null
	,j: null
	,k: null
	,l: null
	,m: null
	,n: null
	,o: null
	,p: null
	,q: null
	,r: null
	,s: null
	,t: null
	,u: null
	,v: null
	,w: null
	,x: null
	,y: null
	,__class__: geom_structure_Mat5x5
};
var geom_structure_Range = function(u,l) {
	this.l = 0.;
	this.u = 0.;
	this.u = u;
	this.l = l;
};
geom_structure_Range.__name__ = "geom.structure.Range";
geom_structure_Range.prototype = {
	u: null
	,l: null
	,__class__: geom_structure_Range
};
var haxe_StackItem = $hxEnums["haxe.StackItem"] = { __ename__ : "haxe.StackItem", __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"]
	,CFunction: {_hx_index:0,__enum__:"haxe.StackItem",toString:$estr}
	,Module: ($_=function(m) { return {_hx_index:1,m:m,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["m"],$_)
	,FilePos: ($_=function(s,file,line,column) { return {_hx_index:2,s:s,file:file,line:line,column:column,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["s","file","line","column"],$_)
	,Method: ($_=function(classname,method) { return {_hx_index:3,classname:classname,method:method,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["classname","method"],$_)
	,LocalFunction: ($_=function(v) { return {_hx_index:4,v:v,__enum__:"haxe.StackItem",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = "haxe.CallStack";
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			var fileName = site.getFileName();
			var fileAddr = fileName == null ? -1 : fileName.indexOf("file:");
			if(haxe_CallStack.wrapCallSite != null && fileAddr > 0) {
				fileName = HxOverrides.substr(fileName,fileAddr + 6,null);
			}
			stack.push(haxe_StackItem.FilePos(method,fileName,site.getLineNumber(),site.getColumnNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.toString = function(stack) {
	var b = new StringBuf();
	var _g = 0;
	while(_g < stack.length) {
		var s = stack[_g];
		++_g;
		b.add("\nCalled from ");
		haxe_CallStack.itemToString(b,s);
	}
	return b.toString();
};
haxe_CallStack.itemToString = function(b,s) {
	switch(s._hx_index) {
	case 0:
		b.add("a C function");
		break;
	case 1:
		var m = s.m;
		b.add("module ");
		b.add(m);
		break;
	case 2:
		var col = s.column;
		var line = s.line;
		var file = s.file;
		var s1 = s.s;
		if(s1 != null) {
			haxe_CallStack.itemToString(b,s1);
			b.add(" (");
		}
		b.add(file);
		b.add(" line ");
		b.add(line);
		if(col != null) {
			b.add(" column ");
			b.add(col);
		}
		if(s1 != null) {
			b.add(")");
		}
		break;
	case 3:
		var meth = s.method;
		var cname = s.classname;
		b.add(cname == null ? "<unknown>" : cname);
		b.add(".");
		b.add(meth);
		break;
	case 4:
		var n = s.v;
		b.add("local function #");
		b.add(n);
		break;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				var column = Std.parseInt(rie10.matched(4));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function" ? haxe_StackItem.LocalFunction() : meth == "Global code" ? null : haxe_StackItem.Method(path.join("."),meth),file,line1,column));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = "haxe.IMap";
haxe_IMap.__isInterface__ = true;
haxe_IMap.prototype = {
	get: null
	,keys: null
	,__class__: haxe_IMap
};
var haxe_Log = function() { };
haxe_Log.__name__ = "haxe.Log";
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = "haxe.Timer";
haxe_Timer.delay = function(f,time_ms) {
	var t = new haxe_Timer(time_ms);
	t.run = function() {
		t.stop();
		f();
	};
	return t;
};
haxe_Timer.stamp = function() {
	return Date.now() / 1000;
};
haxe_Timer.prototype = {
	id: null
	,stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_List = function() {
	this.length = 0;
};
haxe_ds_List.__name__ = "haxe.ds.List";
haxe_ds_List.prototype = {
	h: null
	,q: null
	,length: null
	,add: function(item) {
		var x = new haxe_ds__$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l.item == v) {
				if(prev == null) {
					this.h = l.next;
				} else {
					prev.next = l.next;
				}
				if(this.q == l) {
					this.q = prev;
				}
				this.length--;
				return true;
			}
			prev = l;
			l = l.next;
		}
		return false;
	}
	,iterator: function() {
		return new haxe_ds__$List_ListIterator(this.h);
	}
	,__class__: haxe_ds_List
};
var haxe_ds__$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
haxe_ds__$List_ListNode.__name__ = "haxe.ds._List.ListNode";
haxe_ds__$List_ListNode.prototype = {
	item: null
	,next: null
	,__class__: haxe_ds__$List_ListNode
};
var haxe_ds__$List_ListIterator = function(head) {
	this.head = head;
};
haxe_ds__$List_ListIterator.__name__ = "haxe.ds._List.ListIterator";
haxe_ds__$List_ListIterator.prototype = {
	head: null
	,hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
	,__class__: haxe_ds__$List_ListIterator
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = "haxe.ds.ObjectMap";
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.assignId = function(obj) {
	return (obj.__id__ = js_Lib.getNextHaxeUID());
};
haxe_ds_ObjectMap.getId = function(obj) {
	return obj.__id__;
};
haxe_ds_ObjectMap.prototype = {
	h: null
	,set: function(key,value) {
		var id = haxe_ds_ObjectMap.getId(key);
		if(id == null) {
			id = haxe_ds_ObjectMap.assignId(key);
		}
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[haxe_ds_ObjectMap.getId(key)];
	}
	,exists: function(key) {
		return this.h.__keys__[haxe_ds_ObjectMap.getId(key)] != null;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) {
			a.push(this.h.__keys__[key]);
		}
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = "haxe.ds.StringMap";
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	h: null
	,rh: null
	,isReserved: function(key) {
		return __map_reserved[key] != null;
	}
	,set: function(key,value) {
		if(this.isReserved(key)) {
			this.setReserved(key,value);
		} else {
			this.h[key] = value;
		}
	}
	,get: function(key) {
		if(this.isReserved(key)) {
			return this.getReserved(key);
		}
		return this.h[key];
	}
	,exists: function(key) {
		if(this.isReserved(key)) {
			return this.existsReserved(key);
		}
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = "haxe.io.Bytes";
haxe_io_Bytes.prototype = {
	length: null
	,b: null
	,get: function(pos) {
		return this.b[pos];
	}
	,getData: function() {
		return this.b.bufferValue;
	}
	,__class__: haxe_io_Bytes
};
var haxe_iterators_StringIteratorUnicode = function(s) {
	this.offset = 0;
	this.s = s;
};
haxe_iterators_StringIteratorUnicode.__name__ = "haxe.iterators.StringIteratorUnicode";
haxe_iterators_StringIteratorUnicode.prototype = {
	offset: null
	,s: null
	,hasNext: function() {
		return this.offset < this.s.length;
	}
	,next: function() {
		var c = StringTools.utf16CodePointAt(this.s,this.offset++);
		if(c >= 65536) {
			this.offset++;
		}
		return c;
	}
	,__class__: haxe_iterators_StringIteratorUnicode
};
var haxe_rtti_Meta = function() { };
haxe_rtti_Meta.__name__ = "haxe.rtti.Meta";
haxe_rtti_Meta.getMeta = function(t) {
	return t.__meta__;
};
haxe_rtti_Meta.getFields = function(t) {
	var meta = haxe_rtti_Meta.getMeta(t);
	if(meta == null || meta.fields == null) {
		return { };
	} else {
		return meta.fields;
	}
};
var hx_doctest_internal_DocTestUtils = function() { };
hx_doctest_internal_DocTestUtils.__name__ = "hx.doctest.internal.DocTestUtils";
hx_doctest_internal_DocTestUtils.exceptionStackAsString = function() {
	var stack = haxe_CallStack.exceptionStack();
	var i = -1;
	var _g = 0;
	_hx_loop1: while(_g < stack.length) {
		var elem = stack[_g];
		++_g;
		++i;
		switch(elem._hx_index) {
		case 2:
			var _g3 = elem.column;
			var line = elem.line;
			var file = elem.file;
			var elem2 = elem.s;
			if(StringTools.startsWith(file,"hx/doctest")) {
				stack = stack.slice(0,i);
				break _hx_loop1;
			}
			if(elem2 != null) {
				if(elem2 != null) {
					if(elem2._hx_index == 3) {
						var method = elem2.method;
						var classname = elem2.classname;
						if(StringTools.startsWith(classname,"hx.doctest.")) {
							stack = stack.slice(0,i);
							break _hx_loop1;
						}
					}
				}
			}
			break;
		case 3:
			var method1 = elem.method;
			var classname1 = elem.classname;
			if(StringTools.startsWith(classname1,"hx.doctest.")) {
				stack = stack.slice(0,i);
				break _hx_loop1;
			}
			break;
		default:
		}
	}
	return "  " + haxe_CallStack.toString(stack).split("\n").join("\n  ") + "\n";
};
hx_doctest_internal_DocTestUtils.deepEquals = function(left,right) {
	if(left == right) {
		return true;
	}
	if(((right) instanceof EReg)) {
		return (js_Boot.__cast(right , EReg)).match(Std.string(left));
	}
	if(typeof(left) == "string") {
		return false;
	}
	if(((left) instanceof Array) && ((right) instanceof Array)) {
		if(left.length == right.length) {
			var _g = 0;
			var _g1 = left.length;
			while(_g < _g1) {
				var i = _g++;
				if(!hx_doctest_internal_DocTestUtils.deepEquals(left[i],right[i])) {
					return false;
				}
			}
			return true;
		}
		return false;
	}
	if(Reflect.isEnumValue(left) && Reflect.isEnumValue(right)) {
		var leftEnum = left;
		var rightEnum = right;
		return Type.enumEq(leftEnum,rightEnum);
	}
	if(Reflect.isObject(left) && Reflect.isObject(right)) {
		var clsLeft = Type.getClass(left);
		var clsLeftName = clsLeft == null ? null : Type.getClassName(clsLeft);
		var clsRight = Type.getClass(right);
		var clsRightName = clsRight == null ? null : Type.getClassName(clsRight);
		if(clsLeftName != clsRightName) {
			return false;
		}
		var clsLeftFields = Reflect.fields(left);
		clsLeftFields.sort(function(x,y) {
			if(x > y) {
				return 1;
			} else if(x == y) {
				return 0;
			} else {
				return -1;
			}
		});
		var clsRightFields = Reflect.fields(right);
		clsRightFields.sort(function(x1,y1) {
			if(x1 > y1) {
				return 1;
			} else if(x1 == y1) {
				return 0;
			} else {
				return -1;
			}
		});
		if(hx_doctest_internal_DocTestUtils.deepEquals(clsLeftFields,clsRightFields)) {
			var _g2 = 0;
			while(_g2 < clsLeftFields.length) {
				var fieldName = clsLeftFields[_g2];
				++_g2;
				if(!hx_doctest_internal_DocTestUtils.deepEquals(Reflect.field(left,fieldName),Reflect.field(right,fieldName))) {
					return false;
				}
			}
			return true;
		}
	}
	return false;
};
hx_doctest_internal_DocTestUtils.substringAfter = function(str,sep) {
	var foundAt = str.indexOf(sep);
	if(foundAt == -1) {
		return "";
	}
	return str.substring(foundAt + sep.length);
};
hx_doctest_internal_DocTestUtils.substringAfterLast = function(str,sep) {
	var foundAt = str.lastIndexOf(sep);
	if(foundAt == -1) {
		return "";
	}
	return str.substring(foundAt + sep.length);
};
hx_doctest_internal_DocTestUtils.substringBefore = function(str,sep) {
	var foundAt = str.indexOf(sep);
	if(foundAt == -1) {
		return "";
	}
	return str.substring(0,foundAt);
};
hx_doctest_internal_DocTestUtils.substringBeforeLast = function(str,sep) {
	var foundAt = str.lastIndexOf(sep);
	if(foundAt == -1) {
		return "";
	}
	return str.substring(0,foundAt);
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = "js._Boot.HaxeError";
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	val: null
	,__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = "js.Boot";
js_Boot.isClass = function(o) {
	return o.__name__;
};
js_Boot.isInterface = function(o) {
	return o.__isInterface__;
};
js_Boot.isEnum = function(e) {
	return e.__ename__;
};
js_Boot.getClass = function(o) {
	if(o == null) {
		return null;
	} else if(((o) instanceof Array)) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (js_Boot.isClass(o) || js_Boot.isEnum(o))) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s = s + "\t";
				return n + "(" + ((function($this) {
					var $r;
					var _g = [];
					{
						var _g1 = 0;
						var _g2 = con.__params__;
						while(true) {
							if(!(_g1 < _g2.length)) {
								break;
							}
							var p = _g2[_g1];
							_g1 = _g1 + 1;
							_g.push(js_Boot.__string_rec(o[p],s));
						}
					}
					$r = _g;
					return $r;
				}(this))).join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			haxe_CallStack.lastException = e1;
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	if(Object.prototype.hasOwnProperty.call(cc,"__interfaces__")) {
		var intf = cc.__interfaces__;
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		return ((o) instanceof Array);
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return o != null;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(js_Boot.__downcastCheck(o,cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(((o) instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ != null ? $hxEnums[o.__enum__] == cl : false;
	}
};
js_Boot.__downcastCheck = function(o,cl) {
	if(!((o) instanceof cl)) {
		if(js_Boot.isInterface(cl)) {
			return js_Boot.__interfLoop(js_Boot.getClass(o),cl);
		} else {
			return false;
		}
	} else {
		return true;
	}
};
js_Boot.__implements = function(o,iface) {
	return js_Boot.__interfLoop(js_Boot.getClass(o),iface);
};
js_Boot.__cast = function(o,t) {
	if(o == null || js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_Lib = function() { };
js_Lib.__name__ = "js.Lib";
js_Lib.__properties__ = {get_undefined:"get_undefined"};
js_Lib.get_undefined = function() {
	return undefined;
};
js_Lib.getNextHaxeUID = function() {
	return $global.$haxeUID++;
};
var utest_Assert = function() { };
utest_Assert.__name__ = "utest.Assert";
utest_Assert.processResult = function(cond,getMessage,pos) {
	if(utest_Assert.results == null) {
		throw new js__$Boot_HaxeError("Assert at " + pos.fileName + ":" + pos.lineNumber + " out of context. Most likely you are trying to assert after a test timeout.");
	}
	if(cond) {
		utest_Assert.results.add(utest_Assertation.Success(pos));
	} else {
		utest_Assert.results.add(utest_Assertation.Failure(getMessage(),pos));
	}
};
utest_Assert.isTrue = function(cond,msg,pos) {
	utest_Assert.processResult(cond,function() {
		if(msg != null) {
			return msg;
		} else {
			return "expected true";
		}
	},pos);
};
utest_Assert.isFalse = function(value,msg,pos) {
	utest_Assert.processResult(value == false,function() {
		if(msg != null) {
			return msg;
		} else {
			return "expected false";
		}
	},pos);
};
utest_Assert.isNull = function(value,msg,pos) {
	utest_Assert.processResult(value == null,function() {
		if(msg != null) {
			return msg;
		} else {
			return "expected null but it is " + utest_Assert.q(value);
		}
	},pos);
};
utest_Assert.notNull = function(value,msg,pos) {
	utest_Assert.processResult(value != null,function() {
		if(msg != null) {
			return msg;
		} else {
			return "expected not null";
		}
	},pos);
};
utest_Assert.is = function(value,type,msg,pos) {
	utest_Assert.processResult(Std.is(value,type),function() {
		if(msg != null) {
			return msg;
		} else {
			return "expected type " + utest_Assert.typeToString(type) + " but it is " + utest_Assert.typeToString(value);
		}
	},pos);
};
utest_Assert.notEquals = function(expected,value,msg,pos) {
	utest_Assert.processResult(expected != value,function() {
		if(msg != null) {
			return msg;
		} else {
			return "expected " + utest_Assert.q(expected) + " and test value " + utest_Assert.q(value) + " should be different";
		}
	},pos);
};
utest_Assert.equals = function(expected,value,msg,pos) {
	utest_Assert.processResult(expected == value,function() {
		if(msg != null) {
			return msg;
		} else {
			return "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value);
		}
	},pos);
};
utest_Assert.match = function(pattern,value,msg,pos) {
	utest_Assert.processResult(pattern.match(value),function() {
		if(msg != null) {
			return msg;
		} else {
			return "the value " + utest_Assert.q(value) + " does not match the provided pattern";
		}
	},pos);
};
utest_Assert.floatEquals = function(expected,value,approx,msg,pos) {
	utest_Assert.processResult(utest_Assert._floatEquals(expected,value,approx),function() {
		if(msg != null) {
			return msg;
		} else {
			return "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value);
		}
	},pos);
};
utest_Assert._floatEquals = function(expected,value,approx) {
	if(isNaN(expected)) {
		return isNaN(value);
	} else if(isNaN(value)) {
		return false;
	} else if(!isFinite(expected) && !isFinite(value)) {
		return expected > 0 == value > 0;
	}
	if(null == approx) {
		approx = 1e-5;
	}
	return Math.abs(value - expected) <= approx;
};
utest_Assert.getTypeName = function(v) {
	var _g = Type.typeof(v);
	switch(_g._hx_index) {
	case 0:
		return "`null`";
	case 1:
		return "Int";
	case 2:
		return "Float";
	case 3:
		return "Bool";
	case 4:
		return "Object";
	case 5:
		return "function";
	case 6:
		var c = _g.c;
		return Type.getClassName(c);
	case 7:
		var e = _g.e;
		return Type.getEnumName(e);
	case 8:
		return "`Unknown`";
	}
};
utest_Assert.isIterable = function(v,isAnonym) {
	var fields = isAnonym ? Reflect.fields(v) : Type.getInstanceFields(Type.getClass(v));
	if(!Lambda.has(fields,"iterator")) {
		return false;
	}
	return Reflect.isFunction(Reflect.field(v,"iterator"));
};
utest_Assert.isIterator = function(v,isAnonym) {
	var fields = isAnonym ? Reflect.fields(v) : Type.getInstanceFields(Type.getClass(v));
	if(!Lambda.has(fields,"next") || !Lambda.has(fields,"hasNext")) {
		return false;
	}
	if(Reflect.isFunction(Reflect.field(v,"next"))) {
		return Reflect.isFunction(Reflect.field(v,"hasNext"));
	} else {
		return false;
	}
};
utest_Assert.sameAs = function(expected,value,status,approx) {
	var texpected = utest_Assert.getTypeName(expected);
	var tvalue = utest_Assert.getTypeName(value);
	status.expectedValue = expected;
	status.actualValue = value;
	if(texpected != tvalue && !(texpected == "Int" && tvalue == "Float" || texpected == "Float" && tvalue == "Int")) {
		status.error = "expected type " + texpected + " but it is " + tvalue + (status.path == "" ? "" : " for field " + status.path);
		return false;
	}
	var _g = Type.typeof(expected);
	switch(_g._hx_index) {
	case 1:case 2:
		if(!utest_Assert._floatEquals(expected,value,approx)) {
			status.error = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		return true;
	case 0:case 3:
		if(expected != value) {
			status.error = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		return true;
	case 4:
		if(status.recursive || status.path == "") {
			var tfields = Reflect.fields(value);
			var fields = Reflect.fields(expected);
			var path = status.path;
			var _g1 = 0;
			while(_g1 < fields.length) {
				var field = fields[_g1];
				++_g1;
				HxOverrides.remove(tfields,field);
				status.path = path == "" ? field : path + "." + field;
				if(!Reflect.hasField(value,field)) {
					status.error = "expected field " + status.path + " does not exist in " + utest_Assert.q(value);
					return false;
				}
				var e = Reflect.field(expected,field);
				if(Reflect.isFunction(e)) {
					continue;
				}
				var v = Reflect.field(value,field);
				if(!utest_Assert.sameAs(e,v,status,approx)) {
					return false;
				}
			}
			if(tfields.length > 0) {
				status.error = "the tested object has extra field(s) (" + tfields.join(", ") + ") not included in the expected ones";
				return false;
			}
		}
		if(utest_Assert.isIterator(expected,true)) {
			if(!utest_Assert.isIterator(value,true)) {
				status.error = "expected Iterable but it is not " + (status.path == "" ? "" : " for field " + status.path);
				return false;
			}
			if(status.recursive || status.path == "") {
				var evalues = Lambda.array({ iterator : function() {
					return expected;
				}});
				var vvalues = Lambda.array({ iterator : function() {
					return value;
				}});
				if(evalues.length != vvalues.length) {
					status.error = "expected " + evalues.length + " values in Iterator but they are " + vvalues.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path1 = status.path;
				var _g2 = 0;
				var _g11 = evalues.length;
				while(_g2 < _g11) {
					var i = _g2++;
					status.path = path1 == "" ? "iterator[" + i + "]" : path1 + "[" + i + "]";
					if(!utest_Assert.sameAs(evalues[i],vvalues[i],status,approx)) {
						status.error = "expected " + utest_Assert.q(status.expectedValue) + " but it is " + utest_Assert.q(status.actualValue) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(utest_Assert.isIterable(expected,true)) {
			if(!utest_Assert.isIterable(value,true)) {
				status.error = "expected Iterator but it is not " + (status.path == "" ? "" : " for field " + status.path);
				return false;
			}
			if(status.recursive || status.path == "") {
				var evalues1 = Lambda.array(expected);
				var vvalues1 = Lambda.array(value);
				if(evalues1.length != vvalues1.length) {
					status.error = "expected " + evalues1.length + " values in Iterable but they are " + vvalues1.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path2 = status.path;
				var _g3 = 0;
				var _g12 = evalues1.length;
				while(_g3 < _g12) {
					var i1 = _g3++;
					status.path = path2 == "" ? "iterable[" + i1 + "]" : path2 + "[" + i1 + "]";
					if(!utest_Assert.sameAs(evalues1[i1],vvalues1[i1],status,approx)) {
						return false;
					}
				}
			}
			return true;
		}
		return true;
	case 5:
		if(!Reflect.compareMethods(expected,value)) {
			status.error = "expected same function reference" + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		return true;
	case 6:
		var c = _g.c;
		var cexpected = Type.getClassName(c);
		var cvalue = Type.getClassName(Type.getClass(value));
		if(cexpected != cvalue) {
			status.error = "expected instance of " + utest_Assert.q(cexpected) + " but it is " + utest_Assert.q(cvalue) + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		if(typeof(expected) == "string") {
			if(expected == value) {
				return true;
			} else {
				status.error = "expected string '" + Std.string(expected) + "' but it is '" + Std.string(value) + "'";
				return false;
			}
		}
		if(((expected) instanceof Array)) {
			if(status.recursive || status.path == "") {
				if(expected.length != value.length) {
					status.error = "expected " + Std.string(expected.length) + " elements but they are " + Std.string(value.length) + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path3 = status.path;
				var _g4 = 0;
				var _g13 = expected.length;
				while(_g4 < _g13) {
					var i2 = _g4++;
					status.path = path3 == "" ? "array[" + i2 + "]" : path3 + "[" + i2 + "]";
					if(!utest_Assert.sameAs(expected[i2],value[i2],status,approx)) {
						status.error = "expected array element at [" + i2 + "] to have " + utest_Assert.q(status.expectedValue) + " but it is " + utest_Assert.q(status.actualValue) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(((expected) instanceof Date)) {
			if(expected.getTime() != value.getTime()) {
				status.error = "expected " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path);
				return false;
			}
			return true;
		}
		if(((expected) instanceof haxe_io_Bytes)) {
			if(status.recursive || status.path == "") {
				var ebytes = expected;
				var vbytes = value;
				if(ebytes.length != vbytes.length) {
					return false;
				}
				var _g5 = 0;
				var _g14 = ebytes.length;
				while(_g5 < _g14) {
					var i3 = _g5++;
					if(ebytes.get(i3) != vbytes.get(i3)) {
						status.error = "expected byte " + ebytes.get(i3) + " but it is " + vbytes.get(i3) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(js_Boot.__implements(expected,haxe_IMap)) {
			if(status.recursive || status.path == "") {
				var map = js_Boot.__cast(expected , haxe_IMap);
				var vmap = js_Boot.__cast(value , haxe_IMap);
				var _g6 = [];
				var k = map.keys();
				while(k.hasNext()) {
					var k1 = k.next();
					_g6.push(k1);
				}
				var keys = _g6;
				var _g15 = [];
				var k2 = vmap.keys();
				while(k2.hasNext()) {
					var k3 = k2.next();
					_g15.push(k3);
				}
				var vkeys = _g15;
				if(keys.length != vkeys.length) {
					status.error = "expected " + keys.length + " keys but they are " + vkeys.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path4 = status.path;
				var _g21 = 0;
				while(_g21 < keys.length) {
					var key = keys[_g21];
					++_g21;
					status.path = path4 == "" ? "hash[" + Std.string(key) + "]" : path4 + "[" + Std.string(key) + "]";
					if(!utest_Assert.sameAs(map.get(key),vmap.get(key),status,approx)) {
						status.error = "expected " + utest_Assert.q(status.expectedValue) + " but it is " + utest_Assert.q(status.actualValue) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(utest_Assert.isIterator(expected,false)) {
			if(status.recursive || status.path == "") {
				var evalues2 = Lambda.array({ iterator : function() {
					return expected;
				}});
				var vvalues2 = Lambda.array({ iterator : function() {
					return value;
				}});
				if(evalues2.length != vvalues2.length) {
					status.error = "expected " + evalues2.length + " values in Iterator but they are " + vvalues2.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path5 = status.path;
				var _g7 = 0;
				var _g16 = evalues2.length;
				while(_g7 < _g16) {
					var i4 = _g7++;
					status.path = path5 == "" ? "iterator[" + i4 + "]" : path5 + "[" + i4 + "]";
					if(!utest_Assert.sameAs(evalues2[i4],vvalues2[i4],status,approx)) {
						status.error = "expected " + utest_Assert.q(status.expectedValue) + " but it is " + utest_Assert.q(status.actualValue) + (status.path == "" ? "" : " for field " + status.path);
						return false;
					}
				}
			}
			return true;
		}
		if(utest_Assert.isIterable(expected,false)) {
			if(status.recursive || status.path == "") {
				var evalues3 = Lambda.array(expected);
				var vvalues3 = Lambda.array(value);
				if(evalues3.length != vvalues3.length) {
					status.error = "expected " + evalues3.length + " values in Iterable but they are " + vvalues3.length + (status.path == "" ? "" : " for field " + status.path);
					return false;
				}
				var path6 = status.path;
				var _g8 = 0;
				var _g17 = evalues3.length;
				while(_g8 < _g17) {
					var i5 = _g8++;
					status.path = path6 == "" ? "iterable[" + i5 + "]" : path6 + "[" + i5 + "]";
					if(!utest_Assert.sameAs(evalues3[i5],vvalues3[i5],status,approx)) {
						return false;
					}
				}
			}
			return true;
		}
		if(status.recursive || status.path == "") {
			var fields1 = Type.getInstanceFields(Type.getClass(expected));
			var path7 = status.path;
			var _g9 = 0;
			while(_g9 < fields1.length) {
				var field1 = fields1[_g9];
				++_g9;
				status.path = path7 == "" ? field1 : path7 + "." + field1;
				var e1 = Reflect.field(expected,field1);
				if(Reflect.isFunction(e1)) {
					continue;
				}
				var v1 = Reflect.field(value,field1);
				if(!utest_Assert.sameAs(e1,v1,status,approx)) {
					return false;
				}
			}
		}
		return true;
	case 7:
		var e2 = _g.e;
		var eexpected = Type.getEnumName(e2);
		var evalue = Type.getEnumName(Type.getEnum(value));
		if(eexpected != evalue) {
			status.error = "expected enumeration of " + utest_Assert.q(eexpected) + " but it is " + utest_Assert.q(evalue) + (status.path == "" ? "" : " for field " + status.path);
			return false;
		}
		if(status.recursive || status.path == "") {
			if(Type.enumIndex(expected) != Type.enumIndex(value)) {
				status.error = "expected enum constructor " + utest_Assert.q(Type.enumConstructor(expected)) + " but it is " + utest_Assert.q(Type.enumConstructor(value)) + (status.path == "" ? "" : " for field " + status.path);
				return false;
			}
			var eparams = Type.enumParameters(expected);
			var vparams = Type.enumParameters(value);
			var path8 = status.path;
			var _g10 = 0;
			var _g18 = eparams.length;
			while(_g10 < _g18) {
				var i6 = _g10++;
				status.path = path8 == "" ? "enum[" + i6 + "]" : path8 + "[" + i6 + "]";
				if(!utest_Assert.sameAs(eparams[i6],vparams[i6],status,approx)) {
					status.error = "expected enum param " + utest_Assert.q(expected) + " but it is " + utest_Assert.q(value) + (status.path == "" ? "" : " for field " + status.path) + " with " + status.error;
					return false;
				}
			}
		}
		return true;
	case 8:
		throw new js__$Boot_HaxeError("Unable to compare two unknown types");
	}
};
utest_Assert.q = function(v) {
	if(typeof(v) == "string") {
		return "\"" + StringTools.replace(v,"\"","\\\"") + "\"";
	} else {
		return Std.string(v);
	}
};
utest_Assert.same = function(expected,value,recursive,msg,approx,pos) {
	if(null == approx) {
		approx = 1e-5;
	}
	var status = { recursive : null == recursive ? true : recursive, path : "", error : null, expectedValue : expected, actualValue : value};
	if(utest_Assert.sameAs(expected,value,status,approx)) {
		utest_Assert.pass(msg,pos);
	} else {
		utest_Assert.fail(msg == null ? status.error : msg,pos);
	}
};
utest_Assert.raises = function(method,type,msgNotThrown,msgWrongType,pos) {
	var name = type != null ? Type.getClassName(type) : "Dynamic";
	try {
		method();
		if(null == msgNotThrown) {
			msgNotThrown = "exception of type " + name + " not raised";
		}
		utest_Assert.fail(msgNotThrown,pos);
	} catch( ex ) {
		haxe_CallStack.lastException = ex;
		var ex1 = ((ex) instanceof js__$Boot_HaxeError) ? ex.val : ex;
		if(null == type) {
			utest_Assert.pass(null,pos);
		} else {
			if(null == msgWrongType) {
				msgWrongType = "expected throw of type " + name + " but it is " + Std.string(ex1);
			}
			utest_Assert.isTrue(Std.is(ex1,type),msgWrongType,pos);
		}
	}
};
utest_Assert.allows = function(possibilities,value,msg,pos) {
	if(Lambda.has(possibilities,value)) {
		utest_Assert.isTrue(true,msg,pos);
	} else {
		utest_Assert.fail(msg == null ? "value " + utest_Assert.q(value) + " not found in the expected possibilities " + Std.string(possibilities) : msg,pos);
	}
};
utest_Assert.contains = function(match,values,msg,pos) {
	if(Lambda.has(values,match)) {
		utest_Assert.isTrue(true,msg,pos);
	} else {
		utest_Assert.fail(msg == null ? "values " + utest_Assert.q(values) + " do not contain " + Std.string(match) : msg,pos);
	}
};
utest_Assert.notContains = function(match,values,msg,pos) {
	if(!Lambda.has(values,match)) {
		utest_Assert.isTrue(true,msg,pos);
	} else {
		utest_Assert.fail(msg == null ? "values " + utest_Assert.q(values) + " do contain " + Std.string(match) : msg,pos);
	}
};
utest_Assert.stringContains = function(match,value,msg,pos) {
	if(value != null && value.indexOf(match) >= 0) {
		utest_Assert.isTrue(true,msg,pos);
	} else {
		utest_Assert.fail(msg == null ? "value " + utest_Assert.q(value) + " does not contain " + utest_Assert.q(match) : msg,pos);
	}
};
utest_Assert.stringSequence = function(sequence,value,msg,pos) {
	if(null == value) {
		utest_Assert.fail(msg == null ? "null argument value" : msg,pos);
		return;
	}
	var p = 0;
	var _g = 0;
	while(_g < sequence.length) {
		var s = sequence[_g];
		++_g;
		var p2 = value.indexOf(s,p);
		if(p2 < 0) {
			if(msg == null) {
				msg = "expected '" + s + "' after ";
				if(p > 0) {
					var cut = HxOverrides.substr(value,0,p);
					if(cut.length > 30) {
						cut = "..." + HxOverrides.substr(cut,-27,null);
					}
					msg += " '" + cut + "'";
				} else {
					msg += " begin";
				}
			}
			utest_Assert.fail(msg,pos);
			return;
		}
		p = p2 + s.length;
	}
	utest_Assert.isTrue(true,msg,pos);
};
utest_Assert.pass = function(msg,pos) {
	if(msg == null) {
		msg = "pass expected";
	}
	utest_Assert.isTrue(true,msg,pos);
};
utest_Assert.fail = function(msg,pos) {
	if(msg == null) {
		msg = "failure expected";
	}
	utest_Assert.isTrue(false,msg,pos);
};
utest_Assert.warn = function(msg) {
	utest_Assert.results.add(utest_Assertation.Warning(msg));
};
utest_Assert.createAsync = function(f,timeout) {
	return function() {
	};
};
utest_Assert.createEvent = function(f,timeout) {
	return function(e) {
	};
};
utest_Assert.typeToString = function(t) {
	try {
		var _t = Type.getClass(t);
		if(_t != null) {
			t = _t;
		}
	} catch( e ) {
		haxe_CallStack.lastException = e;
		var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
	}
	try {
		return Type.getClassName(t);
	} catch( e2 ) {
		haxe_CallStack.lastException = e2;
		var e3 = ((e2) instanceof js__$Boot_HaxeError) ? e2.val : e2;
	}
	try {
		var _t1 = Type.getEnum(t);
		if(_t1 != null) {
			t = _t1;
		}
	} catch( e4 ) {
		haxe_CallStack.lastException = e4;
		var e5 = ((e4) instanceof js__$Boot_HaxeError) ? e4.val : e4;
	}
	try {
		return Type.getEnumName(t);
	} catch( e6 ) {
		haxe_CallStack.lastException = e6;
		var e7 = ((e6) instanceof js__$Boot_HaxeError) ? e6.val : e6;
	}
	try {
		return Std.string(Type.typeof(t));
	} catch( e8 ) {
		haxe_CallStack.lastException = e8;
		var e9 = ((e8) instanceof js__$Boot_HaxeError) ? e8.val : e8;
	}
	try {
		return Std.string(t);
	} catch( e10 ) {
		haxe_CallStack.lastException = e10;
		var e11 = ((e10) instanceof js__$Boot_HaxeError) ? e10.val : e10;
	}
	return "<unable to retrieve type name>";
};
var utest_Assertation = $hxEnums["utest.Assertation"] = { __ename__ : "utest.Assertation", __constructs__ : ["Success","Failure","Error","SetupError","TeardownError","TimeoutError","AsyncError","Warning","Ignore"]
	,Success: ($_=function(pos) { return {_hx_index:0,pos:pos,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["pos"],$_)
	,Failure: ($_=function(msg,pos) { return {_hx_index:1,msg:msg,pos:pos,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["msg","pos"],$_)
	,Error: ($_=function(e,stack) { return {_hx_index:2,e:e,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["e","stack"],$_)
	,SetupError: ($_=function(e,stack) { return {_hx_index:3,e:e,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["e","stack"],$_)
	,TeardownError: ($_=function(e,stack) { return {_hx_index:4,e:e,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["e","stack"],$_)
	,TimeoutError: ($_=function(missedAsyncs,stack) { return {_hx_index:5,missedAsyncs:missedAsyncs,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["missedAsyncs","stack"],$_)
	,AsyncError: ($_=function(e,stack) { return {_hx_index:6,e:e,stack:stack,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["e","stack"],$_)
	,Warning: ($_=function(msg) { return {_hx_index:7,msg:msg,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["msg"],$_)
	,Ignore: ($_=function(reason) { return {_hx_index:8,reason:reason,__enum__:"utest.Assertation",toString:$estr}; },$_.__params__ = ["reason"],$_)
};
var utest_Async = function(timeoutMs) {
	if(timeoutMs == null) {
		timeoutMs = 250;
	}
	this.callbacks = [];
	this.timedOut = false;
	this.resolved = false;
	this.startTime = haxe_Timer.stamp();
	this.timer = haxe_Timer.delay($bind(this,this.setTimedOutState),timeoutMs);
};
utest_Async.__name__ = "utest.Async";
utest_Async.getResolved = function() {
	if(utest_Async.resolvedInstance == null) {
		utest_Async.resolvedInstance = new utest_Async();
		utest_Async.resolvedInstance.done({ fileName : "utest/Async.hx", lineNumber : 28, className : "utest.Async", methodName : "getResolved"});
	}
	return utest_Async.resolvedInstance;
};
utest_Async.prototype = {
	resolved: null
	,timedOut: null
	,callbacks: null
	,startTime: null
	,timer: null
	,done: function(pos) {
		if(this.resolved) {
			if(this.timedOut) {
				throw new js__$Boot_HaxeError("Cannot done() at " + pos.fileName + ":" + pos.lineNumber + " because async is timed out.");
			} else {
				throw new js__$Boot_HaxeError("Cannot done() at " + pos.fileName + ":" + pos.lineNumber + " because async is done already.");
			}
		}
		this.resolved = true;
		var _g = 0;
		var _g1 = this.callbacks;
		while(_g < _g1.length) {
			var cb = _g1[_g];
			++_g;
			cb();
		}
	}
	,setTimeout: function(timeoutMs,pos) {
		if(this.resolved) {
			throw new js__$Boot_HaxeError("Cannot setTimeout(" + timeoutMs + ") at " + pos.fileName + ":" + pos.lineNumber + " because async is done.");
		}
		if(this.timedOut) {
			throw new js__$Boot_HaxeError("Cannot setTimeout(" + timeoutMs + ") at " + pos.fileName + ":" + pos.lineNumber + " because async is timed out.");
		}
		this.timer.stop();
		var delay = timeoutMs - Math.round(1000 * (haxe_Timer.stamp() - this.startTime));
		this.timer = haxe_Timer.delay($bind(this,this.setTimedOutState),delay);
	}
	,then: function(cb) {
		if(this.resolved) {
			cb();
		} else {
			this.callbacks.push(cb);
		}
	}
	,setTimedOutState: function() {
		if(this.resolved) {
			return;
		}
		this.timedOut = true;
		this.done({ fileName : "utest/Async.hx", lineNumber : 78, className : "utest.Async", methodName : "setTimedOutState"});
	}
	,__class__: utest_Async
};
var utest__$Dispatcher_EventException = $hxEnums["utest._Dispatcher.EventException"] = { __ename__ : "utest._Dispatcher.EventException", __constructs__ : ["StopPropagation"]
	,StopPropagation: {_hx_index:0,__enum__:"utest._Dispatcher.EventException",toString:$estr}
};
var utest_Dispatcher = function() {
	this.handlers = [];
};
utest_Dispatcher.__name__ = "utest.Dispatcher";
utest_Dispatcher.stop = function() {
	throw new js__$Boot_HaxeError(utest__$Dispatcher_EventException.StopPropagation);
};
utest_Dispatcher.prototype = {
	handlers: null
	,add: function(h) {
		this.handlers.push(h);
		return h;
	}
	,remove: function(h) {
		var _g = 0;
		var _g1 = this.handlers.length;
		while(_g < _g1) {
			var i = _g++;
			if(Reflect.compareMethods(this.handlers[i],h)) {
				return this.handlers.splice(i,1)[0];
			}
		}
		return null;
	}
	,clear: function() {
		this.handlers = [];
	}
	,dispatch: function(e) {
		try {
			var list = this.handlers.slice();
			var _g = 0;
			while(_g < list.length) {
				var l = list[_g];
				++_g;
				l(e);
			}
			return true;
		} catch( exc ) {
			haxe_CallStack.lastException = exc;
			var exc1 = ((exc) instanceof js__$Boot_HaxeError) ? exc.val : exc;
			if(js_Boot.__instanceof(exc1,utest__$Dispatcher_EventException)) {
				var exc2 = exc1;
				return false;
			} else {
				throw exc;
			}
		}
	}
	,has: function() {
		return this.handlers.length > 0;
	}
	,__class__: utest_Dispatcher
};
var utest_Notifier = function() {
	this.handlers = [];
};
utest_Notifier.__name__ = "utest.Notifier";
utest_Notifier.stop = function() {
	throw new js__$Boot_HaxeError(utest__$Dispatcher_EventException.StopPropagation);
};
utest_Notifier.prototype = {
	handlers: null
	,add: function(h) {
		this.handlers.push(h);
		return h;
	}
	,remove: function(h) {
		var _g = 0;
		var _g1 = this.handlers.length;
		while(_g < _g1) {
			var i = _g++;
			if(Reflect.compareMethods(this.handlers[i],h)) {
				return this.handlers.splice(i,1)[0];
			}
		}
		return null;
	}
	,clear: function() {
		this.handlers = [];
	}
	,dispatch: function() {
		try {
			var list = this.handlers.slice();
			var _g = 0;
			while(_g < list.length) {
				var l = list[_g];
				++_g;
				l();
			}
			return true;
		} catch( exc ) {
			haxe_CallStack.lastException = exc;
			var exc1 = ((exc) instanceof js__$Boot_HaxeError) ? exc.val : exc;
			if(js_Boot.__instanceof(exc1,utest__$Dispatcher_EventException)) {
				var exc2 = exc1;
				return false;
			} else {
				throw exc;
			}
		}
	}
	,has: function() {
		return this.handlers.length > 0;
	}
	,__class__: utest_Notifier
};
var utest_TestHandler = function(fixture) {
	this.wasBound = false;
	this.finished = false;
	if(fixture == null) {
		throw new js__$Boot_HaxeError("fixture argument is null");
	}
	this.fixture = fixture;
	this.results = new haxe_ds_List();
	this.asyncStack = new haxe_ds_List();
	this.onTested = new utest_Dispatcher();
	this.onTimeout = new utest_Dispatcher();
	this.onComplete = new utest_Dispatcher();
	this.onPrecheck = new utest_Dispatcher();
	if(fixture.ignoringInfo != null) {
		this.results.add(utest_Assertation.Ignore(fixture.ignoringInfo));
	}
};
utest_TestHandler.__name__ = "utest.TestHandler";
utest_TestHandler.exceptionStack = function(pops) {
	if(pops == null) {
		pops = 2;
	}
	var stack = haxe_CallStack.exceptionStack();
	while(pops-- > 0) stack.pop();
	return stack;
};
utest_TestHandler.prototype = {
	results: null
	,fixture: null
	,finished: null
	,asyncStack: null
	,onTested: null
	,onTimeout: null
	,onComplete: null
	,onPrecheck: null
	,precheck: null
	,wasBound: null
	,execute: function() {
		var _gthis = this;
		if(this.fixture.ignoringInfo != null) {
			this.executeFinally();
			return;
		}
		var isSync = true;
		var expectingAsync = true;
		var run = function() {
			if(isSync) {
				expectingAsync = false;
				return;
			}
			_gthis.executeFixtureMethod();
			_gthis.executeFinally();
		};
		try {
			this.executeMethod(this.fixture.setup);
			this.executeAsyncMethod(this.fixture.setupAsync,run);
			if(!expectingAsync) {
				this.executeFixtureMethod();
			}
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.SetupError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,utest_TestHandler.exceptionStack()));
		}
		isSync = false;
		if(!expectingAsync) {
			this.executeFinally();
		}
	}
	,executeFixtureMethod: function() {
		try {
			this.executeMethod(this.fixture.method);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.Error(((e) instanceof js__$Boot_HaxeError) ? e.val : e,utest_TestHandler.exceptionStack()));
		}
	}
	,executeFinally: function() {
		this.onPrecheck.dispatch(this);
		this.checkTested();
	}
	,checkTested: function() {
		if(this.expiration == null || this.asyncStack.length == 0) {
			this.tested();
		} else if(haxe_Timer.stamp() > this.expiration) {
			this.timeout();
		} else {
			haxe_Timer.delay($bind(this,this.checkTested),10);
		}
	}
	,expiration: null
	,setTimeout: function(timeout) {
		var newExpire = haxe_Timer.stamp() + timeout / 1000;
		this.expiration = this.expiration == null ? newExpire : newExpire > this.expiration ? newExpire : this.expiration;
	}
	,bindHandler: function() {
		if(this.wasBound) {
			return;
		}
		utest_Assert.results = this.results;
		utest_Assert.createAsync = $bind(this,this.addAsync);
		utest_Assert.createEvent = $bind(this,this.addEvent);
		this.wasBound = true;
	}
	,unbindHandler: function() {
		if(!this.wasBound) {
			return;
		}
		utest_Assert.results = null;
		utest_Assert.createAsync = function(f,t) {
			return function() {
			};
		};
		utest_Assert.createEvent = function(f1,t1) {
			return function(e) {
			};
		};
		this.wasBound = false;
	}
	,addAsync: function(f,timeout) {
		if(timeout == null) {
			timeout = 250;
		}
		if(null == f) {
			f = function() {
			};
		}
		this.asyncStack.add(f);
		var handler = this;
		this.setTimeout(timeout);
		return function() {
			if(!handler.asyncStack.remove(f)) {
				handler.results.add(utest_Assertation.AsyncError("async function already executed",[]));
				return;
			}
			try {
				handler.bindHandler();
				f();
			} catch( e ) {
				haxe_CallStack.lastException = e;
				handler.results.add(utest_Assertation.AsyncError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,utest_TestHandler.exceptionStack(0)));
			}
		};
	}
	,addEvent: function(f,timeout) {
		if(timeout == null) {
			timeout = 250;
		}
		this.asyncStack.add(f);
		var handler = this;
		this.setTimeout(timeout);
		return function(e) {
			if(!handler.asyncStack.remove(f)) {
				handler.results.add(utest_Assertation.AsyncError("event already executed",[]));
				return;
			}
			try {
				handler.bindHandler();
				f(e);
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				handler.results.add(utest_Assertation.AsyncError(((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1,utest_TestHandler.exceptionStack(0)));
			}
		};
	}
	,executeMethod: function(name) {
		if(name == null) {
			return;
		}
		this.bindHandler();
		Reflect.callMethod(this.fixture.target,Reflect.field(this.fixture.target,name),[]);
	}
	,executeAsyncMethod: function(name,done) {
		if(name == null) {
			done();
			return;
		}
		this.bindHandler();
		Reflect.callMethod(this.fixture.target,Reflect.field(this.fixture.target,name),[done]);
	}
	,tested: function() {
		if(this.results.length == 0) {
			this.results.add(utest_Assertation.Warning("no assertions"));
		}
		this.onTested.dispatch(this);
		this.completed();
	}
	,timeout: function() {
		this.results.add(utest_Assertation.TimeoutError(this.asyncStack.length,[]));
		this.onTimeout.dispatch(this);
		this.completed();
	}
	,completed: function() {
		var _gthis = this;
		if(this.fixture.ignoringInfo != null) {
			this.completedFinally();
			return;
		}
		var isSync = true;
		var expectingAsync = true;
		var complete = function() {
			if(isSync) {
				expectingAsync = false;
				return;
			}
			_gthis.completedFinally();
		};
		try {
			this.executeMethod(this.fixture.teardown);
			this.executeAsyncMethod(this.fixture.teardownAsync,complete);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.TeardownError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,utest_TestHandler.exceptionStack(2)));
		}
		isSync = false;
		if(!expectingAsync) {
			this.completedFinally();
		}
	}
	,completedFinally: function() {
		this.finished = true;
		this.unbindHandler();
		this.onComplete.dispatch(this);
	}
	,__class__: utest_TestHandler
};
var utest_ITestHandler = function(fixture) {
	utest_TestHandler.call(this,fixture);
	if(!fixture.isITest) {
		throw new js__$Boot_HaxeError("Invalid fixture type for utest.ITestHandler");
	}
	this.testCase = js_Boot.__cast(fixture.target , utest_ITest);
	this.test = fixture.test;
	if(this.test == null) {
		throw new js__$Boot_HaxeError("Fixture is missing test data");
	}
};
utest_ITestHandler.__name__ = "utest.ITestHandler";
utest_ITestHandler.__super__ = utest_TestHandler;
utest_ITestHandler.prototype = $extend(utest_TestHandler.prototype,{
	testCase: null
	,test: null
	,setupAsync: null
	,testAsync: null
	,teardownAsync: null
	,execute: function() {
		if(this.fixture.ignoringInfo != null) {
			this.executeFinally();
			return;
		}
		this.bindHandler();
		this.runSetup();
	}
	,runSetup: function() {
		try {
			this.setupAsync = this.fixture.setupMethod();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.SetupError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,haxe_CallStack.exceptionStack()));
			this.completedFinally();
			return;
		}
		this.setupAsync.then($bind(this,this.checkSetup));
	}
	,checkSetup: function() {
		if(this.setupAsync.timedOut) {
			this.results.add(utest_Assertation.SetupError("Setup timeout",[]));
			this.completedFinally();
		} else {
			this.runTest();
		}
	}
	,runTest: function() {
		try {
			this.testAsync = this.test.execute();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.Error(((e) instanceof js__$Boot_HaxeError) ? e.val : e,haxe_CallStack.exceptionStack()));
			this.runTeardown();
			return;
		}
		this.testAsync.then($bind(this,this.checkTest));
	}
	,checkTest: function() {
		this.onPrecheck.dispatch(this);
		if(this.testAsync.timedOut) {
			this.results.add(utest_Assertation.TimeoutError(1,[]));
			this.onTimeout.dispatch(this);
		} else if(this.testAsync.resolved) {
			if(this.results.length == 0) {
				this.results.add(utest_Assertation.Warning("no assertions"));
			}
			this.onTested.dispatch(this);
		} else {
			throw new js__$Boot_HaxeError("Unexpected test state");
		}
		this.runTeardown();
	}
	,runTeardown: function() {
		try {
			this.teardownAsync = this.fixture.teardownMethod();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.results.add(utest_Assertation.TeardownError(((e) instanceof js__$Boot_HaxeError) ? e.val : e,haxe_CallStack.exceptionStack()));
			this.completedFinally();
			return;
		}
		this.teardownAsync.then($bind(this,this.checkTeardown));
	}
	,checkTeardown: function() {
		if(this.teardownAsync.timedOut) {
			this.results.add(utest_Assertation.TeardownError("Teardown timeout",[]));
		}
		this.completedFinally();
	}
	,bindHandler: function() {
		if(this.wasBound) {
			return;
		}
		utest_Assert.results = this.results;
		var msg = " is not allowed in tests extending utest.ITest. Add `async:utest.Async` argument to the test method instead.";
		utest_Assert.createAsync = function(f,t) {
			throw new js__$Boot_HaxeError("Assert.createAsync() " + msg);
		};
		utest_Assert.createEvent = function(f1,t1) {
			throw new js__$Boot_HaxeError("Assert.createEvent() " + msg);
		};
		this.wasBound = true;
	}
	,__class__: utest_ITestHandler
});
var utest__$IgnoredFixture_IgnoredFixture_$Impl_$ = {};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.__name__ = "utest._IgnoredFixture.IgnoredFixture_Impl_";
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.__properties__ = {get_ignoreReason:"get_ignoreReason",get_isIgnored:"get_isIgnored"};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.NotIgnored = function() {
	var this1 = null;
	return this1;
};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.Ignored = function(reason) {
	var this1 = reason != null ? reason : "";
	return this1;
};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$._new = function(reason) {
	var this1 = reason;
	return this1;
};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.get_isIgnored = function(this1) {
	return this1 != null;
};
utest__$IgnoredFixture_IgnoredFixture_$Impl_$.get_ignoreReason = function(this1) {
	return this1;
};
var utest_Runner = function() {
	this.executedFixtures = 0;
	this.pos = 0;
	this.complete = false;
	this.globalPattern = null;
	this.iTestFixtures = new haxe_ds_ObjectMap();
	this.fixtures = [];
	this.onProgress = new utest_Dispatcher();
	this.onStart = new utest_Dispatcher();
	this.onComplete = new utest_Dispatcher();
	this.onPrecheck = new utest_Dispatcher();
	this.onTestStart = new utest_Dispatcher();
	this.onTestComplete = new utest_Dispatcher();
	this.length = 0;
	var envPattern = null;
	if(envPattern != null) {
		this.globalPattern = new EReg(envPattern,"");
	}
};
utest_Runner.__name__ = "utest.Runner";
utest_Runner.prototype = {
	fixtures: null
	,iTestFixtures: null
	,onProgress: null
	,onStart: null
	,onComplete: null
	,onPrecheck: null
	,onTestStart: null
	,onTestComplete: null
	,length: null
	,globalPattern: null
	,complete: null
	,addCase: function(test,setup,teardown,prefix,pattern,setupAsync,teardownAsync) {
		if(teardownAsync == null) {
			teardownAsync = "teardownAsync";
		}
		if(setupAsync == null) {
			setupAsync = "setupAsync";
		}
		if(prefix == null) {
			prefix = "test";
		}
		if(teardown == null) {
			teardown = "teardown";
		}
		if(setup == null) {
			setup = "setup";
		}
		if(js_Boot.__implements(test,utest_ITest)) {
			this.addITest(test,pattern);
		} else {
			this.addCaseOld(test,setup,teardown,prefix,pattern,setupAsync,teardownAsync);
		}
	}
	,addITest: function(testCase,pattern) {
		if(this.iTestFixtures.exists(testCase)) {
			throw new js__$Boot_HaxeError("Cannot add the same test twice.");
		}
		var fixtures = [];
		var init = testCase.__initializeUtest__();
		var _g = 0;
		var _g1 = init.tests;
		while(_g < _g1.length) {
			var test = _g1[_g];
			++_g;
			if(!this.isTestFixtureName(test.name,["test","spec"],pattern,this.globalPattern)) {
				continue;
			}
			var fixture = utest_TestFixture.ofData(testCase,test,init.accessories);
			this.addFixture(fixture);
			fixtures.push(fixture);
		}
		this.iTestFixtures.set(testCase,{ setupClass : utest_utils_AccessoriesUtils.getSetupClass(init.accessories), fixtures : fixtures, teardownClass : utest_utils_AccessoriesUtils.getTeardownClass(init.accessories)});
	}
	,addCaseOld: function(test,setup,teardown,prefix,pattern,setupAsync,teardownAsync) {
		if(teardownAsync == null) {
			teardownAsync = "teardownAsync";
		}
		if(setupAsync == null) {
			setupAsync = "setupAsync";
		}
		if(prefix == null) {
			prefix = "test";
		}
		if(teardown == null) {
			teardown = "teardown";
		}
		if(setup == null) {
			setup = "setup";
		}
		if(!Reflect.isObject(test)) {
			throw new js__$Boot_HaxeError("can't add a null object as a test case");
		}
		if(!this.isMethod(test,setup)) {
			setup = null;
		}
		if(!this.isMethod(test,setupAsync)) {
			setupAsync = null;
		}
		if(!this.isMethod(test,teardown)) {
			teardown = null;
		}
		if(!this.isMethod(test,teardownAsync)) {
			teardownAsync = null;
		}
		var fields = Type.getInstanceFields(Type.getClass(test));
		var _g = 0;
		while(_g < fields.length) {
			var field = fields[_g];
			++_g;
			if(!this.isMethod(test,field)) {
				continue;
			}
			if(!this.isTestFixtureName(field,[prefix],pattern,this.globalPattern)) {
				continue;
			}
			this.addFixture(new utest_TestFixture(test,field,setup,teardown,setupAsync,teardownAsync));
		}
	}
	,isTestFixtureName: function(name,prefixes,pattern,globalPattern) {
		if(pattern == null && globalPattern == null) {
			var _g = 0;
			while(_g < prefixes.length) {
				var prefix = prefixes[_g];
				++_g;
				if(StringTools.startsWith(name,prefix)) {
					return true;
				}
			}
			return false;
		}
		if(pattern == null) {
			pattern = globalPattern;
		}
		return pattern.match(name);
	}
	,addFixture: function(fixture) {
		this.fixtures.push(fixture);
		this.length++;
	}
	,getFixture: function(index) {
		return this.fixtures[index];
	}
	,isMethod: function(test,name) {
		try {
			return Reflect.isFunction(Reflect.field(test,name));
		} catch( e ) {
			haxe_CallStack.lastException = e;
			var e1 = ((e) instanceof js__$Boot_HaxeError) ? e.val : e;
			return false;
		}
	}
	,run: function() {
		this.onStart.dispatch(this);
		var iTestRunner = new utest__$Runner_ITestRunner(this);
		iTestRunner.run();
		this.waitForCompletion();
	}
	,waitForCompletion: function() {
		if(!this.complete) {
			haxe_Timer.delay($bind(this,this.waitForCompletion),100);
		}
	}
	,pos: null
	,executedFixtures: null
	,runNext: function(finishedHandler) {
		var _g = this.pos;
		var _g1 = this.fixtures.length;
		while(_g < _g1) {
			var i = _g++;
			var fixture = this.fixtures[this.pos++];
			if(fixture.isITest) {
				continue;
			}
			var handler = this.runFixture(fixture);
			if(!handler.finished) {
				handler.onComplete.add($bind(this,this.runNext));
				return;
			}
		}
		this.complete = true;
		this.onComplete.dispatch(this);
	}
	,runFixture: function(fixture) {
		var handler = fixture.isITest ? new utest_ITestHandler(fixture) : new utest_TestHandler(fixture);
		handler.onComplete.add($bind(this,this.testComplete));
		handler.onPrecheck.add(($_=this.onPrecheck,$bind($_,$_.dispatch)));
		this.onTestStart.dispatch(handler);
		handler.execute();
		return handler;
	}
	,testComplete: function(h) {
		++this.executedFixtures;
		this.onTestComplete.dispatch(h);
		this.onProgress.dispatch({ result : utest_TestResult.ofHandler(h), done : this.executedFixtures, totals : this.length});
	}
	,__class__: utest_Runner
};
var utest__$Runner_ITestRunner = function(runner) {
	this.runner = runner;
};
utest__$Runner_ITestRunner.__name__ = "utest._Runner.ITestRunner";
utest__$Runner_ITestRunner.prototype = {
	runner: null
	,cases: null
	,currentCase: null
	,currentCaseFixtures: null
	,teardownClass: null
	,setupAsync: null
	,teardownAsync: null
	,run: function() {
		this.cases = this.runner.iTestFixtures.keys();
		this.runCases();
	}
	,runCases: function() {
		while(this.cases.hasNext()) {
			this.currentCase = this.cases.next();
			var data = this.runner.iTestFixtures.get(this.currentCase);
			this.currentCaseFixtures = data.fixtures;
			this.teardownClass = data.teardownClass;
			try {
				this.setupAsync = data.setupClass();
			} catch( e ) {
				haxe_CallStack.lastException = e;
				this.setupFailed(utest_Assertation.SetupError("setupClass failed: " + Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e),haxe_CallStack.exceptionStack()));
				return;
			}
			if(this.setupAsync.resolved) {
				if(!this.runFixtures()) {
					return;
				}
			} else {
				this.setupAsync.then($bind(this,this.checkSetup));
				return;
			}
		}
		this.runner.runNext();
	}
	,checkSetup: function() {
		if(this.setupAsync.timedOut) {
			this.setupFailed(utest_Assertation.SetupError("setupClass timeout",[]));
		} else {
			this.runFixtures();
		}
	}
	,setupFailed: function(assertation) {
		this.runner.executedFixtures += this.currentCaseFixtures.length;
		this.runner.onProgress.dispatch({ totals : this.runner.length, result : utest_TestResult.ofFailedSetupClass(this.currentCase,assertation), done : this.runner.executedFixtures});
		this.runCases();
	}
	,runFixtures: function(finishedHandler) {
		while(this.currentCaseFixtures.length > 0) {
			var handler = this.runner.runFixture(this.currentCaseFixtures.pop());
			if(!handler.finished) {
				handler.onComplete.add($bind(this,this.runFixtures));
				return false;
			}
		}
		try {
			this.teardownAsync = this.teardownClass();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			this.teardownFailed(utest_Assertation.TeardownError("tearDownClass failed: " + Std.string(((e) instanceof js__$Boot_HaxeError) ? e.val : e),haxe_CallStack.exceptionStack()));
		}
		if(this.teardownAsync.resolved && finishedHandler == null) {
			return true;
		}
		this.teardownAsync.then($bind(this,this.checkTeardown));
		return false;
	}
	,checkTeardown: function() {
		if(this.teardownAsync.timedOut) {
			this.teardownFailed(utest_Assertation.TeardownError("teardownClass timeout",[]));
		}
		this.runCases();
	}
	,teardownFailed: function(assertation) {
		this.runner.onProgress.dispatch({ totals : this.runner.length, result : utest_TestResult.ofFailedTeardownClass(this.currentCase,assertation), done : this.runner.executedFixtures});
	}
	,__class__: utest__$Runner_ITestRunner
};
var utest_AccessoryName = function() { };
utest_AccessoryName.__name__ = "utest.AccessoryName";
var utest_TestFixture = function(target,method,setup,teardown,setupAsync,teardownAsync) {
	this.isITest = false;
	this.target = target;
	this.method = method;
	this.setup = setup;
	this.setupAsync = setupAsync;
	this.teardown = teardown;
	this.teardownAsync = teardownAsync;
	this.ignoringInfo = this.getIgnored();
};
utest_TestFixture.__name__ = "utest.TestFixture";
utest_TestFixture.ofData = function(target,test,accessories) {
	var fixture = new utest_TestFixture(target,test.name);
	fixture.isITest = true;
	fixture.test = test;
	fixture.setupMethod = utest_utils_AccessoriesUtils.getSetup(accessories);
	fixture.teardownMethod = utest_utils_AccessoriesUtils.getTeardown(accessories);
	return fixture;
};
utest_TestFixture.prototype = {
	target: null
	,method: null
	,setup: null
	,setupAsync: null
	,teardown: null
	,teardownAsync: null
	,ignoringInfo: null
	,isITest: null
	,test: null
	,setupMethod: null
	,teardownMethod: null
	,checkMethod: function(name,arg) {
		var field = Reflect.field(this.target,name);
		if(field == null) {
			throw new js__$Boot_HaxeError(arg + " function " + name + " is not a field of target");
		}
		if(!Reflect.isFunction(field)) {
			throw new js__$Boot_HaxeError(arg + " function " + name + " is not a function");
		}
	}
	,getIgnored: function() {
		var metas = haxe_rtti_Meta.getFields(Type.getClass(this.target));
		var metasForTestMetas = Reflect.getProperty(metas,this.method);
		if(metasForTestMetas == null || !Reflect.hasField(metasForTestMetas,"Ignored")) {
			return utest__$IgnoredFixture_IgnoredFixture_$Impl_$.NotIgnored();
		}
		var ignoredArgs = Reflect.getProperty(metasForTestMetas,"Ignored");
		if(ignoredArgs == null || ignoredArgs.length == 0 || ignoredArgs[0] == null) {
			return utest__$IgnoredFixture_IgnoredFixture_$Impl_$.Ignored();
		}
		var ignoredReason = Std.string(ignoredArgs[0]);
		return utest__$IgnoredFixture_IgnoredFixture_$Impl_$.Ignored(ignoredReason);
	}
	,__class__: utest_TestFixture
};
var utest_TestResult = function() {
};
utest_TestResult.__name__ = "utest.TestResult";
utest_TestResult.ofHandler = function(handler) {
	var r = new utest_TestResult();
	var path = Type.getClassName(Type.getClass(handler.fixture.target)).split(".");
	r.cls = path.pop();
	r.pack = path.join(".");
	r.method = handler.fixture.method;
	r.setup = handler.fixture.setup;
	r.setupAsync = handler.fixture.setupAsync;
	r.teardown = handler.fixture.teardown;
	r.teardownAsync = handler.fixture.teardownAsync;
	r.assertations = handler.results;
	return r;
};
utest_TestResult.ofFailedSetupClass = function(testCase,assertation) {
	var r = new utest_TestResult();
	var path = Type.getClassName(Type.getClass(testCase)).split(".");
	r.cls = path.pop();
	r.pack = path.join(".");
	r.method = "setup";
	r.assertations = new haxe_ds_List();
	r.assertations.add(assertation);
	return r;
};
utest_TestResult.ofFailedTeardownClass = function(testCase,assertation) {
	var r = new utest_TestResult();
	var path = Type.getClassName(Type.getClass(testCase)).split(".");
	r.cls = path.pop();
	r.pack = path.join(".");
	r.method = "setup";
	r.assertations = new haxe_ds_List();
	r.assertations.add(assertation);
	return r;
};
utest_TestResult.prototype = {
	pack: null
	,cls: null
	,method: null
	,setup: null
	,setupAsync: null
	,teardown: null
	,teardownAsync: null
	,assertations: null
	,allOk: function() {
		var l = this.assertations.iterator();
		while(l.hasNext()) {
			var l1 = l.next();
			if(l1._hx_index == 0) {
				var _g = l1.pos;
				break;
			} else {
				return false;
			}
		}
		return true;
	}
	,__class__: utest_TestResult
};
var utest_ui_Report = function() { };
utest_ui_Report.__name__ = "utest.ui.Report";
utest_ui_Report.create = function(runner,displaySuccessResults,headerDisplayMode) {
	var report;
	if(typeof window != 'undefined') {
		report = new utest_ui_text_HtmlReport(runner,null,true);
	} else {
		report = new utest_ui_text_PrintReport(runner);
	}
	if(null == displaySuccessResults) {
		report.displaySuccessResults = utest_ui_common_SuccessResultsDisplayMode.ShowSuccessResultsWithNoErrors;
	} else {
		report.displaySuccessResults = displaySuccessResults;
	}
	if(null == headerDisplayMode) {
		report.displayHeader = utest_ui_common_HeaderDisplayMode.ShowHeaderWithResults;
	} else {
		report.displayHeader = headerDisplayMode;
	}
	return report;
};
var utest_ui_common_ClassResult = function(className,setupName,teardownName) {
	this.fixtures = new haxe_ds_StringMap();
	this.className = className;
	this.setupName = setupName;
	this.hasSetup = setupName != null;
	this.teardownName = teardownName;
	this.hasTeardown = teardownName != null;
	this.methods = 0;
	this.stats = new utest_ui_common_ResultStats();
};
utest_ui_common_ClassResult.__name__ = "utest.ui.common.ClassResult";
utest_ui_common_ClassResult.prototype = {
	fixtures: null
	,className: null
	,setupName: null
	,teardownName: null
	,hasSetup: null
	,hasTeardown: null
	,methods: null
	,stats: null
	,add: function(result) {
		if(this.fixtures.exists(result.methodName)) {
			throw new js__$Boot_HaxeError("invalid duplicated fixture: " + this.className + "." + result.methodName);
		}
		this.stats.wire(result.stats);
		this.methods++;
		this.fixtures.set(result.methodName,result);
	}
	,get: function(method) {
		return this.fixtures.get(method);
	}
	,exists: function(method) {
		return this.fixtures.exists(method);
	}
	,methodNames: function(errorsHavePriority) {
		if(errorsHavePriority == null) {
			errorsHavePriority = true;
		}
		var names = [];
		var name = this.fixtures.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			names.push(name1);
		}
		if(errorsHavePriority) {
			var me = this;
			names.sort(function(a,b) {
				var as = me.get(a).stats;
				var bs = me.get(b).stats;
				if(as.hasErrors) {
					if(!bs.hasErrors) {
						return -1;
					} else if(as.errors == bs.errors) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.errors,bs.errors);
					}
				} else if(bs.hasErrors) {
					return 1;
				} else if(as.hasFailures) {
					if(!bs.hasFailures) {
						return -1;
					} else if(as.failures == bs.failures) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.failures,bs.failures);
					}
				} else if(bs.hasFailures) {
					return 1;
				} else if(as.hasWarnings) {
					if(!bs.hasWarnings) {
						return -1;
					} else if(as.warnings == bs.warnings) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.warnings,bs.warnings);
					}
				} else if(bs.hasWarnings) {
					return 1;
				} else {
					return Reflect.compare(a,b);
				}
			});
		} else {
			names.sort(function(a1,b1) {
				return Reflect.compare(a1,b1);
			});
		}
		return names;
	}
	,__class__: utest_ui_common_ClassResult
};
var utest_ui_common_FixtureResult = function(methodName) {
	this.methodName = methodName;
	this.list = new haxe_ds_List();
	this.hasTestError = false;
	this.hasSetupError = false;
	this.hasTeardownError = false;
	this.hasTimeoutError = false;
	this.hasAsyncError = false;
	this.stats = new utest_ui_common_ResultStats();
};
utest_ui_common_FixtureResult.__name__ = "utest.ui.common.FixtureResult";
utest_ui_common_FixtureResult.prototype = {
	methodName: null
	,hasTestError: null
	,hasSetupError: null
	,hasTeardownError: null
	,hasTimeoutError: null
	,hasAsyncError: null
	,stats: null
	,list: null
	,iterator: function() {
		return this.list.iterator();
	}
	,add: function(assertation) {
		this.list.add(assertation);
		switch(assertation._hx_index) {
		case 0:
			var _g9 = assertation.pos;
			this.stats.addSuccesses(1);
			break;
		case 1:
			var _g3 = assertation.pos;
			var _g2 = assertation.msg;
			this.stats.addFailures(1);
			break;
		case 2:
			var _g8 = assertation.stack;
			var _g7 = assertation.e;
			this.stats.addErrors(1);
			break;
		case 3:
			var _g14 = assertation.stack;
			var _g13 = assertation.e;
			this.stats.addErrors(1);
			this.hasSetupError = true;
			break;
		case 4:
			var _g5 = assertation.stack;
			var _g4 = assertation.e;
			this.stats.addErrors(1);
			this.hasTeardownError = true;
			break;
		case 5:
			var _g1 = assertation.stack;
			var _g = assertation.missedAsyncs;
			this.stats.addErrors(1);
			this.hasTimeoutError = true;
			break;
		case 6:
			var _g12 = assertation.stack;
			var _g11 = assertation.e;
			this.stats.addErrors(1);
			this.hasAsyncError = true;
			break;
		case 7:
			var _g10 = assertation.msg;
			this.stats.addWarnings(1);
			break;
		case 8:
			var _g6 = assertation.reason;
			this.stats.addIgnores(1);
			break;
		}
	}
	,__class__: utest_ui_common_FixtureResult
};
var utest_ui_common_HeaderDisplayMode = $hxEnums["utest.ui.common.HeaderDisplayMode"] = { __ename__ : "utest.ui.common.HeaderDisplayMode", __constructs__ : ["AlwaysShowHeader","NeverShowHeader","ShowHeaderWithResults"]
	,AlwaysShowHeader: {_hx_index:0,__enum__:"utest.ui.common.HeaderDisplayMode",toString:$estr}
	,NeverShowHeader: {_hx_index:1,__enum__:"utest.ui.common.HeaderDisplayMode",toString:$estr}
	,ShowHeaderWithResults: {_hx_index:2,__enum__:"utest.ui.common.HeaderDisplayMode",toString:$estr}
};
var utest_ui_common_SuccessResultsDisplayMode = $hxEnums["utest.ui.common.SuccessResultsDisplayMode"] = { __ename__ : "utest.ui.common.SuccessResultsDisplayMode", __constructs__ : ["AlwaysShowSuccessResults","NeverShowSuccessResults","ShowSuccessResultsWithNoErrors"]
	,AlwaysShowSuccessResults: {_hx_index:0,__enum__:"utest.ui.common.SuccessResultsDisplayMode",toString:$estr}
	,NeverShowSuccessResults: {_hx_index:1,__enum__:"utest.ui.common.SuccessResultsDisplayMode",toString:$estr}
	,ShowSuccessResultsWithNoErrors: {_hx_index:2,__enum__:"utest.ui.common.SuccessResultsDisplayMode",toString:$estr}
};
var utest_ui_common_IReport = function() { };
utest_ui_common_IReport.__name__ = "utest.ui.common.IReport";
utest_ui_common_IReport.__isInterface__ = true;
utest_ui_common_IReport.prototype = {
	displaySuccessResults: null
	,displayHeader: null
	,setHandler: null
	,__class__: utest_ui_common_IReport
};
var utest_ui_common_PackageResult = function(packageName) {
	this.isEmpty = true;
	this.packageName = packageName;
	this.classes = new haxe_ds_StringMap();
	this.packages = new haxe_ds_StringMap();
	this.stats = new utest_ui_common_ResultStats();
};
utest_ui_common_PackageResult.__name__ = "utest.ui.common.PackageResult";
utest_ui_common_PackageResult.prototype = {
	packageName: null
	,isEmpty: null
	,classes: null
	,packages: null
	,stats: null
	,addResult: function(result,flattenPackage) {
		this.isEmpty = false;
		var pack = this.getOrCreatePackage(result.pack,flattenPackage,this);
		var cls = this.getOrCreateClass(pack,result.cls,result.setup,result.teardown);
		var fix = this.createFixture(result.method,result.assertations);
		cls.add(fix);
	}
	,addClass: function(result) {
		this.isEmpty = false;
		this.classes.set(result.className,result);
		this.stats.wire(result.stats);
	}
	,addPackage: function(result) {
		this.isEmpty = false;
		this.packages.set(result.packageName,result);
		this.stats.wire(result.stats);
	}
	,existsPackage: function(name) {
		return this.packages.exists(name);
	}
	,existsClass: function(name) {
		return this.classes.exists(name);
	}
	,getPackage: function(name) {
		if(this.packageName == null && name == "") {
			return this;
		}
		return this.packages.get(name);
	}
	,getClass: function(name) {
		return this.classes.get(name);
	}
	,classNames: function(errorsHavePriority) {
		if(errorsHavePriority == null) {
			errorsHavePriority = true;
		}
		var names = [];
		var name = this.classes.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			names.push(name1);
		}
		if(errorsHavePriority) {
			var me = this;
			names.sort(function(a,b) {
				var as = me.getClass(a).stats;
				var bs = me.getClass(b).stats;
				if(as.hasErrors) {
					if(!bs.hasErrors) {
						return -1;
					} else if(as.errors == bs.errors) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.errors,bs.errors);
					}
				} else if(bs.hasErrors) {
					return 1;
				} else if(as.hasFailures) {
					if(!bs.hasFailures) {
						return -1;
					} else if(as.failures == bs.failures) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.failures,bs.failures);
					}
				} else if(bs.hasFailures) {
					return 1;
				} else if(as.hasWarnings) {
					if(!bs.hasWarnings) {
						return -1;
					} else if(as.warnings == bs.warnings) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.warnings,bs.warnings);
					}
				} else if(bs.hasWarnings) {
					return 1;
				} else {
					return Reflect.compare(a,b);
				}
			});
		} else {
			names.sort(function(a1,b1) {
				return Reflect.compare(a1,b1);
			});
		}
		return names;
	}
	,packageNames: function(errorsHavePriority) {
		if(errorsHavePriority == null) {
			errorsHavePriority = true;
		}
		var names = [];
		if(this.packageName == null) {
			names.push("");
		}
		var name = this.packages.keys();
		while(name.hasNext()) {
			var name1 = name.next();
			names.push(name1);
		}
		if(errorsHavePriority) {
			var me = this;
			names.sort(function(a,b) {
				var as = me.getPackage(a).stats;
				var bs = me.getPackage(b).stats;
				if(as.hasErrors) {
					if(!bs.hasErrors) {
						return -1;
					} else if(as.errors == bs.errors) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.errors,bs.errors);
					}
				} else if(bs.hasErrors) {
					return 1;
				} else if(as.hasFailures) {
					if(!bs.hasFailures) {
						return -1;
					} else if(as.failures == bs.failures) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.failures,bs.failures);
					}
				} else if(bs.hasFailures) {
					return 1;
				} else if(as.hasWarnings) {
					if(!bs.hasWarnings) {
						return -1;
					} else if(as.warnings == bs.warnings) {
						return Reflect.compare(a,b);
					} else {
						return Reflect.compare(as.warnings,bs.warnings);
					}
				} else if(bs.hasWarnings) {
					return 1;
				} else {
					return Reflect.compare(a,b);
				}
			});
		} else {
			names.sort(function(a1,b1) {
				return Reflect.compare(a1,b1);
			});
		}
		return names;
	}
	,createFixture: function(method,assertations) {
		var f = new utest_ui_common_FixtureResult(method);
		var assertation = $getIterator(assertations);
		while(assertation.hasNext()) {
			var assertation1 = assertation.next();
			f.add(assertation1);
		}
		return f;
	}
	,getOrCreateClass: function(pack,cls,setup,teardown) {
		if(pack.existsClass(cls)) {
			return pack.getClass(cls);
		}
		var c = new utest_ui_common_ClassResult(cls,setup,teardown);
		pack.addClass(c);
		return c;
	}
	,getOrCreatePackage: function(pack,flat,ref) {
		if(pack == null || pack == "") {
			return ref;
		}
		if(flat) {
			if(ref.existsPackage(pack)) {
				return ref.getPackage(pack);
			}
			var p = new utest_ui_common_PackageResult(pack);
			ref.addPackage(p);
			return p;
		} else {
			var parts = pack.split(".");
			var _g = 0;
			while(_g < parts.length) {
				var part = parts[_g];
				++_g;
				ref = this.getOrCreatePackage(part,true,ref);
			}
			return ref;
		}
	}
	,__class__: utest_ui_common_PackageResult
};
var utest_ui_common_ReportTools = function() { };
utest_ui_common_ReportTools.__name__ = "utest.ui.common.ReportTools";
utest_ui_common_ReportTools.hasHeader = function(report,stats) {
	switch(report.displayHeader._hx_index) {
	case 0:
		return true;
	case 1:
		return false;
	case 2:
		if(!stats.isOk) {
			return true;
		}
		switch(report.displaySuccessResults._hx_index) {
		case 1:
			return false;
		case 0:case 2:
			return true;
		}
		break;
	}
};
utest_ui_common_ReportTools.skipResult = function(report,stats,isOk) {
	if(!stats.isOk) {
		return false;
	}
	switch(report.displaySuccessResults._hx_index) {
	case 0:
		return false;
	case 1:
		return true;
	case 2:
		return !isOk;
	}
};
utest_ui_common_ReportTools.hasOutput = function(report,stats) {
	if(!stats.isOk) {
		return true;
	}
	return utest_ui_common_ReportTools.hasHeader(report,stats);
};
var utest_ui_common_ResultAggregator = function(runner,flattenPackage) {
	if(flattenPackage == null) {
		flattenPackage = false;
	}
	if(runner == null) {
		throw new js__$Boot_HaxeError("runner argument is null");
	}
	this.flattenPackage = flattenPackage;
	this.runner = runner;
	runner.onStart.add($bind(this,this.start));
	runner.onProgress.add($bind(this,this.progress));
	runner.onComplete.add($bind(this,this.complete));
	this.onStart = new utest_Notifier();
	this.onComplete = new utest_Dispatcher();
	this.onProgress = new utest_Dispatcher();
};
utest_ui_common_ResultAggregator.__name__ = "utest.ui.common.ResultAggregator";
utest_ui_common_ResultAggregator.prototype = {
	runner: null
	,flattenPackage: null
	,root: null
	,onStart: null
	,onComplete: null
	,onProgress: null
	,start: function(runner) {
		this.checkNonITest();
		this.root = new utest_ui_common_PackageResult(null);
		this.onStart.dispatch();
	}
	,checkNonITest: function() {
		var first = null;
		var total = 0;
		var _g = 0;
		var _g1 = this.runner.length;
		while(_g < _g1) {
			var i = _g++;
			var fixture = this.runner.getFixture(i);
			if(!fixture.isITest) {
				++total;
				if(first == null) {
					first = Type.getClassName(Type.getClass(fixture.target));
				}
			}
		}
		if(total > 0) {
			var baseMsg = "implement utest.ITest. Non-ITest tests are deprecated. Implement utest.ITest or extend utest.Test.";
			var msg;
			switch(total) {
			case 1:
				msg = "" + first + " doesn't " + baseMsg;
				break;
			case 2:
				msg = "" + first + " and 1 other don't " + baseMsg;
				break;
			default:
				msg = "" + first + " and " + total + " others don't " + baseMsg;
			}
			haxe_Log.trace(msg,{ fileName : "utest/ui/common/ResultAggregator.hx", lineNumber : 54, className : "utest.ui.common.ResultAggregator", methodName : "checkNonITest"});
		}
	}
	,getOrCreatePackage: function(pack,flat,ref) {
		if(ref == null) {
			ref = this.root;
		}
		if(pack == null || pack == "") {
			return ref;
		}
		if(flat) {
			if(ref.existsPackage(pack)) {
				return ref.getPackage(pack);
			}
			var p = new utest_ui_common_PackageResult(pack);
			ref.addPackage(p);
			return p;
		} else {
			var parts = pack.split(".");
			var _g = 0;
			while(_g < parts.length) {
				var part = parts[_g];
				++_g;
				ref = this.getOrCreatePackage(part,true,ref);
			}
			return ref;
		}
	}
	,getOrCreateClass: function(pack,cls,setup,teardown) {
		if(pack.existsClass(cls)) {
			return pack.getClass(cls);
		}
		var c = new utest_ui_common_ClassResult(cls,setup,teardown);
		pack.addClass(c);
		return c;
	}
	,createFixture: function(result) {
		var f = new utest_ui_common_FixtureResult(result.method);
		var assertation = result.assertations.iterator();
		while(assertation.hasNext()) {
			var assertation1 = assertation.next();
			f.add(assertation1);
		}
		return f;
	}
	,progress: function(e) {
		this.root.addResult(e.result,this.flattenPackage);
		this.onProgress.dispatch(e);
	}
	,complete: function(runner) {
		if(this.root.isEmpty) {
			this.root.addResult(this.createNoTestsResult(),false);
		}
		this.onComplete.dispatch(this.root);
	}
	,createNoTestsResult: function() {
		var result = new utest_TestResult();
		result.pack = "";
		result.cls = "";
		result.method = "";
		result.assertations = new haxe_ds_List();
		var pos = { fileName : "", lineNumber : 1, className : "utest.Runner", methodName : "run"};
		result.assertations.add(utest_Assertation.Failure("No tests executed.",pos));
		return result;
	}
	,__class__: utest_ui_common_ResultAggregator
};
var utest_ui_common_ResultStats = function() {
	this.assertations = 0;
	this.successes = 0;
	this.failures = 0;
	this.errors = 0;
	this.warnings = 0;
	this.ignores = 0;
	this.isOk = true;
	this.hasFailures = false;
	this.hasErrors = false;
	this.hasWarnings = false;
	this.hasIgnores = false;
	this.onAddSuccesses = new utest_Dispatcher();
	this.onAddFailures = new utest_Dispatcher();
	this.onAddErrors = new utest_Dispatcher();
	this.onAddWarnings = new utest_Dispatcher();
	this.onAddIgnores = new utest_Dispatcher();
};
utest_ui_common_ResultStats.__name__ = "utest.ui.common.ResultStats";
utest_ui_common_ResultStats.prototype = {
	assertations: null
	,successes: null
	,failures: null
	,errors: null
	,warnings: null
	,ignores: null
	,onAddSuccesses: null
	,onAddFailures: null
	,onAddErrors: null
	,onAddWarnings: null
	,onAddIgnores: null
	,isOk: null
	,hasFailures: null
	,hasErrors: null
	,hasWarnings: null
	,hasIgnores: null
	,addSuccesses: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.successes += v;
		this.onAddSuccesses.dispatch(v);
	}
	,addFailures: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.failures += v;
		this.hasFailures = this.failures > 0;
		this.isOk = !(this.hasFailures || this.hasErrors || this.hasWarnings);
		this.onAddFailures.dispatch(v);
	}
	,addErrors: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.errors += v;
		this.hasErrors = this.errors > 0;
		this.isOk = !(this.hasFailures || this.hasErrors || this.hasWarnings);
		this.onAddErrors.dispatch(v);
	}
	,addIgnores: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.ignores += v;
		this.hasIgnores = this.ignores > 0;
		this.onAddIgnores.dispatch(v);
	}
	,addWarnings: function(v) {
		if(v == 0) {
			return;
		}
		this.assertations += v;
		this.warnings += v;
		this.hasWarnings = this.warnings > 0;
		this.isOk = !(this.hasFailures || this.hasErrors || this.hasWarnings);
		this.onAddWarnings.dispatch(v);
	}
	,sum: function(other) {
		this.addSuccesses(other.successes);
		this.addFailures(other.failures);
		this.addErrors(other.errors);
		this.addWarnings(other.warnings);
		this.addIgnores(other.ignores);
	}
	,subtract: function(other) {
		this.addSuccesses(-other.successes);
		this.addFailures(-other.failures);
		this.addErrors(-other.errors);
		this.addWarnings(-other.warnings);
		this.addIgnores(-other.ignores);
	}
	,wire: function(dependant) {
		dependant.onAddSuccesses.add($bind(this,this.addSuccesses));
		dependant.onAddFailures.add($bind(this,this.addFailures));
		dependant.onAddErrors.add($bind(this,this.addErrors));
		dependant.onAddWarnings.add($bind(this,this.addWarnings));
		dependant.onAddIgnores.add($bind(this,this.addIgnores));
		this.sum(dependant);
	}
	,unwire: function(dependant) {
		dependant.onAddSuccesses.remove($bind(this,this.addSuccesses));
		dependant.onAddFailures.remove($bind(this,this.addFailures));
		dependant.onAddErrors.remove($bind(this,this.addErrors));
		dependant.onAddWarnings.remove($bind(this,this.addWarnings));
		dependant.onAddIgnores.remove($bind(this,this.addIgnores));
		this.subtract(dependant);
	}
	,__class__: utest_ui_common_ResultStats
};
var utest_ui_text_HtmlReport = function(runner,outputHandler,traceRedirected) {
	if(traceRedirected == null) {
		traceRedirected = true;
	}
	this.aggregator = new utest_ui_common_ResultAggregator(runner,true);
	runner.onStart.add($bind(this,this.start));
	this.aggregator.onComplete.add($bind(this,this.complete));
	if(null == outputHandler) {
		this.setHandler($bind(this,this._handler));
	} else {
		this.setHandler(outputHandler);
	}
	if(traceRedirected) {
		this.redirectTrace();
	}
	this.displaySuccessResults = utest_ui_common_SuccessResultsDisplayMode.AlwaysShowSuccessResults;
	this.displayHeader = utest_ui_common_HeaderDisplayMode.AlwaysShowHeader;
};
utest_ui_text_HtmlReport.__name__ = "utest.ui.text.HtmlReport";
utest_ui_text_HtmlReport.__interfaces__ = [utest_ui_common_IReport];
utest_ui_text_HtmlReport.prototype = {
	traceRedirected: null
	,displaySuccessResults: null
	,displayHeader: null
	,handler: null
	,aggregator: null
	,oldTrace: null
	,_traces: null
	,setHandler: function(handler) {
		this.handler = handler;
	}
	,redirectTrace: function() {
		if(this.traceRedirected) {
			return;
		}
		this._traces = [];
		this.oldTrace = haxe_Log.trace;
		haxe_Log.trace = $bind(this,this._trace);
	}
	,restoreTrace: function() {
		if(!this.traceRedirected) {
			return;
		}
		haxe_Log.trace = this.oldTrace;
	}
	,_traceTime: null
	,_trace: function(v,infos) {
		var time = haxe_Timer.stamp();
		var delta = this._traceTime == null ? 0 : time - this._traceTime;
		this._traces.push({ msg : StringTools.htmlEscape(Std.string(v)), infos : infos, time : time - this.startTime, delta : delta, stack : haxe_CallStack.callStack()});
		this._traceTime = haxe_Timer.stamp();
	}
	,startTime: null
	,start: function(e) {
		this.startTime = haxe_Timer.stamp();
	}
	,cls: function(stats) {
		if(stats.hasErrors) {
			return "error";
		} else if(stats.hasFailures) {
			return "failure";
		} else if(stats.hasWarnings) {
			return "warn";
		} else {
			return "ok";
		}
	}
	,resultNumbers: function(buf,stats) {
		var numbers = [];
		if(stats.assertations == 1) {
			numbers.push("<strong>1</strong> test");
		} else {
			numbers.push("<strong>" + stats.assertations + "</strong> tests");
		}
		if(stats.successes != stats.assertations) {
			if(stats.successes == 1) {
				numbers.push("<strong>1</strong> pass");
			} else if(stats.successes > 0) {
				numbers.push("<strong>" + stats.successes + "</strong> passes");
			}
		}
		if(stats.errors == 1) {
			numbers.push("<strong>1</strong> error");
		} else if(stats.errors > 0) {
			numbers.push("<strong>" + stats.errors + "</strong> errors");
		}
		if(stats.failures == 1) {
			numbers.push("<strong>1</strong> failure");
		} else if(stats.failures > 0) {
			numbers.push("<strong>" + stats.failures + "</strong> failures");
		}
		if(stats.warnings == 1) {
			numbers.push("<strong>1</strong> warning");
		} else if(stats.warnings > 0) {
			numbers.push("<strong>" + stats.warnings + "</strong> warnings");
		}
		buf.add(numbers.join(", "));
	}
	,blockNumbers: function(buf,stats) {
		buf.add("<div class=\"" + this.cls(stats) + "bg statnumbers\">");
		this.resultNumbers(buf,stats);
		buf.add("</div>");
	}
	,formatStack: function(stack,addNL) {
		if(addNL == null) {
			addNL = true;
		}
		var parts = [];
		var nl = addNL ? "\n" : "";
		var last = null;
		var count = 1;
		var _g = 0;
		var _g1 = haxe_CallStack.toString(stack).split("\n");
		while(_g < _g1.length) {
			var part = _g1[_g];
			++_g;
			if(StringTools.trim(part) == "") {
				continue;
			}
			if(-1 < part.indexOf("Called from utest.")) {
				continue;
			}
			if(part == last) {
				parts[parts.length - 1] = part + " (#" + ++count + ")";
			} else {
				count = 1;
				last = part;
				parts.push(last);
			}
		}
		var s = "<ul><li>" + parts.join("</li>" + nl + "<li>") + "</li></ul>" + nl;
		return "<div>" + s + "</div>" + nl;
	}
	,addFixture: function(buf,result,name,isOk) {
		if(utest_ui_common_ReportTools.skipResult(this,result.stats,isOk)) {
			return;
		}
		buf.add("<li class=\"fixture\"><div class=\"li\">");
		buf.add("<span class=\"" + this.cls(result.stats) + "bg fixtureresult\">");
		if(result.stats.isOk) {
			buf.add("OK ");
		} else if(result.stats.hasErrors) {
			buf.add("ERROR ");
		} else if(result.stats.hasFailures) {
			buf.add("FAILURE ");
		} else if(result.stats.hasWarnings) {
			buf.add("WARNING ");
		}
		buf.add("</span>");
		buf.add("<div class=\"fixturedetails\">");
		buf.add("<strong>" + name + "</strong>");
		buf.add(": ");
		this.resultNumbers(buf,result.stats);
		var messages = [];
		var assertation = result.iterator();
		while(assertation.hasNext()) {
			var assertation1 = assertation.next();
			switch(assertation1._hx_index) {
			case 0:
				var _g9 = assertation1.pos;
				break;
			case 1:
				var pos = assertation1.pos;
				var msg = assertation1.msg;
				messages.push("<strong>line " + pos.lineNumber + "</strong>: <em>" + StringTools.htmlEscape(msg) + "</em>");
				break;
			case 2:
				var s = assertation1.stack;
				var e = assertation1.e;
				messages.push("<strong>error</strong>: <em>" + this.getErrorDescription(e) + "</em>\n<br/><strong>stack</strong>:" + this.getErrorStack(s,e));
				break;
			case 3:
				var s1 = assertation1.stack;
				var e1 = assertation1.e;
				messages.push("<strong>setup error</strong>: " + this.getErrorDescription(e1) + "\n<br/><strong>stack</strong>:" + this.getErrorStack(s1,e1));
				break;
			case 4:
				var s2 = assertation1.stack;
				var e2 = assertation1.e;
				messages.push("<strong>tear-down error</strong>: " + this.getErrorDescription(e2) + "\n<br/><strong>stack</strong>:" + this.getErrorStack(s2,e2));
				break;
			case 5:
				var _g1 = assertation1.stack;
				var missedAsyncs = assertation1.missedAsyncs;
				messages.push("<strong>missed async call(s)</strong>: " + missedAsyncs);
				break;
			case 6:
				var s3 = assertation1.stack;
				var e3 = assertation1.e;
				messages.push("<strong>async error</strong>: " + this.getErrorDescription(e3) + "\n<br/><strong>stack</strong>:" + this.getErrorStack(s3,e3));
				break;
			case 7:
				var msg1 = assertation1.msg;
				messages.push(StringTools.htmlEscape(msg1));
				break;
			case 8:
				var reason = assertation1.reason;
				messages.push(StringTools.htmlEscape(reason));
				break;
			}
		}
		if(messages.length > 0) {
			buf.add("<div class=\"testoutput\">");
			buf.add(messages.join("<br/>"));
			buf.add("</div>\n");
		}
		buf.add("</div>\n");
		buf.add("</div></li>\n");
	}
	,getErrorDescription: function(e) {
		return Std.string(e);
	}
	,getErrorStack: function(s,e) {
		return this.formatStack(s);
	}
	,addClass: function(buf,result,name,isOk) {
		if(utest_ui_common_ReportTools.skipResult(this,result.stats,isOk)) {
			return;
		}
		buf.add("<li>");
		buf.add("<h2 class=\"classname\">" + name + "</h2>");
		this.blockNumbers(buf,result.stats);
		buf.add("<ul>\n");
		var _g = 0;
		var _g1 = result.methodNames();
		while(_g < _g1.length) {
			var mname = _g1[_g];
			++_g;
			this.addFixture(buf,result.get(mname),mname,isOk);
		}
		buf.add("</ul>\n");
		buf.add("</li>\n");
	}
	,addPackages: function(buf,result,isOk) {
		if(utest_ui_common_ReportTools.skipResult(this,result.stats,isOk)) {
			return;
		}
		buf.add("<ul id=\"utest-results-packages\">\n");
		var _g = 0;
		var _g1 = result.packageNames(false);
		while(_g < _g1.length) {
			var name = _g1[_g];
			++_g;
			this.addPackage(buf,result.getPackage(name),name,isOk);
		}
		buf.add("</ul>\n");
	}
	,addPackage: function(buf,result,name,isOk) {
		if(utest_ui_common_ReportTools.skipResult(this,result.stats,isOk)) {
			return;
		}
		if(name == "" && result.classNames().length == 0) {
			return;
		}
		buf.add("<li>");
		buf.add("<h2>" + name + "</h2>");
		this.blockNumbers(buf,result.stats);
		buf.add("<ul>\n");
		var _g = 0;
		var _g1 = result.classNames();
		while(_g < _g1.length) {
			var cname = _g1[_g];
			++_g;
			this.addClass(buf,result.getClass(cname),cname,isOk);
		}
		buf.add("</ul>\n");
		buf.add("</li>\n");
	}
	,getTextResults: function() {
		var newline = "\n";
		var indents = function(count) {
			var _g = [];
			var _g1 = 0;
			var _g2 = count;
			while(_g1 < _g2) {
				var i = _g1++;
				_g.push("  ");
			}
			return _g.join("");
		};
		var dumpStack = function(stack) {
			if(stack.length == 0) {
				return "";
			}
			var parts = haxe_CallStack.toString(stack).split("\n");
			var r = [];
			var _g3 = 0;
			while(_g3 < parts.length) {
				var part = parts[_g3];
				++_g3;
				if(part.indexOf(" utest.") >= 0) {
					continue;
				}
				r.push(part);
			}
			return r.join(newline);
		};
		var buf = new StringBuf();
		var _g4 = 0;
		var _g11 = this.result.packageNames();
		while(_g4 < _g11.length) {
			var pname = _g11[_g4];
			++_g4;
			var pack = this.result.getPackage(pname);
			if(utest_ui_common_ReportTools.skipResult(this,pack.stats,this.result.stats.isOk)) {
				continue;
			}
			var _g5 = 0;
			var _g12 = pack.classNames();
			while(_g5 < _g12.length) {
				var cname = _g12[_g5];
				++_g5;
				var cls = pack.getClass(cname);
				if(utest_ui_common_ReportTools.skipResult(this,cls.stats,this.result.stats.isOk)) {
					continue;
				}
				buf.add((pname == "" ? "" : pname + ".") + cname + newline);
				var _g6 = 0;
				var _g13 = cls.methodNames();
				while(_g6 < _g13.length) {
					var mname = _g13[_g6];
					++_g6;
					var fix = cls.get(mname);
					if(utest_ui_common_ReportTools.skipResult(this,fix.stats,this.result.stats.isOk)) {
						continue;
					}
					buf.add(indents(1) + mname + ": ");
					if(fix.stats.isOk) {
						buf.add("OK ");
					} else if(fix.stats.hasErrors) {
						buf.add("ERROR ");
					} else if(fix.stats.hasFailures) {
						buf.add("FAILURE ");
					} else if(fix.stats.hasWarnings) {
						buf.add("WARNING ");
					}
					var messages = "";
					var assertation = fix.iterator();
					while(assertation.hasNext()) {
						var assertation1 = assertation.next();
						switch(assertation1._hx_index) {
						case 0:
							var _g9 = assertation1.pos;
							buf.add(".");
							break;
						case 1:
							var pos = assertation1.pos;
							var msg = assertation1.msg;
							buf.add("F");
							messages += indents(2) + "line: " + pos.lineNumber + ", " + msg + newline;
							break;
						case 2:
							var s = assertation1.stack;
							var e = assertation1.e;
							buf.add("E");
							messages += indents(2) + Std.string(e) + dumpStack(s) + newline;
							break;
						case 3:
							var s1 = assertation1.stack;
							var e1 = assertation1.e;
							buf.add("S");
							messages += indents(2) + Std.string(e1) + dumpStack(s1) + newline;
							break;
						case 4:
							var s2 = assertation1.stack;
							var e2 = assertation1.e;
							buf.add("T");
							messages += indents(2) + Std.string(e2) + dumpStack(s2) + newline;
							break;
						case 5:
							var s3 = assertation1.stack;
							var missedAsyncs = assertation1.missedAsyncs;
							buf.add("O");
							messages += indents(2) + "missed async calls: " + missedAsyncs + dumpStack(s3) + newline;
							break;
						case 6:
							var s4 = assertation1.stack;
							var e3 = assertation1.e;
							buf.add("A");
							messages += indents(2) + Std.string(e3) + dumpStack(s4) + newline;
							break;
						case 7:
							var msg1 = assertation1.msg;
							buf.add("W");
							messages += indents(2) + msg1 + newline;
							break;
						case 8:
							var reason = assertation1.reason;
							buf.add("I");
							if(reason != null && reason != "") {
								messages += indents(2) + ("With reason: " + reason) + newline;
							}
							break;
						}
					}
					buf.add(newline);
					buf.add(messages);
				}
			}
		}
		return buf.toString();
	}
	,getHeader: function() {
		var buf = new StringBuf();
		if(!utest_ui_common_ReportTools.hasHeader(this,this.result.stats)) {
			return "";
		}
		var end = haxe_Timer.stamp();
		var time = Std.int((end - this.startTime) * 1000) / 1000;
		var msg = "TEST OK";
		if(this.result.stats.hasErrors) {
			msg = "TEST ERRORS";
		} else if(this.result.stats.hasFailures) {
			msg = "TEST FAILED";
		} else if(this.result.stats.hasWarnings) {
			msg = "WARNING REPORTED";
		}
		buf.add("<h1 class=\"" + this.cls(this.result.stats) + "bg header\">" + msg + "</h1>\n");
		buf.add("<div class=\"headerinfo\">");
		this.resultNumbers(buf,this.result.stats);
		buf.add(" performed on <strong>" + utest_ui_text_HtmlReport.platform + "</strong>, executed in <strong> " + time + " sec. </strong></div >\n ");
		return buf.toString();
	}
	,getTrace: function() {
		var buf = new StringBuf();
		if(this._traces == null || this._traces.length == 0) {
			return "";
		}
		buf.add("<div class=\"trace\"><h2>traces</h2><ol>");
		var _g = 0;
		var _g1 = this._traces;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			buf.add("<li><div class=\"li\">");
			var stack = StringTools.replace(this.formatStack(t.stack,false),"'","\\'");
			var method = "<span class=\"tracepackage\">" + t.infos.className + "</span><br/>" + t.infos.methodName + "(" + t.infos.lineNumber + ")";
			buf.add("<span class=\"tracepos\" onmouseover=\"utestTooltip(this.parentNode, '" + stack + "')\" onmouseout=\"utestRemoveTooltip()\">");
			buf.add(method);
			buf.add("</span><span class=\"tracetime\">");
			buf.add("@ " + this.formatTime(t.time));
			if(Math.round(t.delta * 1000) > 0) {
				buf.add(", ~" + this.formatTime(t.delta));
			}
			buf.add("</span><span class=\"tracemsg\">");
			buf.add(StringTools.replace(StringTools.trim(t.msg),"\n","<br/>\n"));
			buf.add("</span><div class=\"clr\"></div></div></li>");
		}
		buf.add("</ol></div>");
		return buf.toString();
	}
	,getResults: function() {
		var buf = new StringBuf();
		this.addPackages(buf,this.result,this.result.stats.isOk);
		return buf.toString();
	}
	,getAll: function() {
		if(!utest_ui_common_ReportTools.hasOutput(this,this.result.stats)) {
			return "";
		} else {
			return this.getHeader() + this.getTrace() + this.getResults();
		}
	}
	,getHtml: function(title) {
		if(null == title) {
			title = "utest: " + utest_ui_text_HtmlReport.platform;
		}
		var s = this.getAll();
		if("" == s) {
			return "";
		} else {
			return this.wrapHtml(title,s);
		}
	}
	,result: null
	,complete: function(result) {
		this.result = result;
		this.handler(this);
		this.restoreTrace();
		var exposedResult = { isOk : result.stats.isOk, message : this.getTextResults()};
		if('undefined' != typeof window) {
			window.utest_result = exposedResult;
		}
	}
	,formatTime: function(t) {
		return Math.round(t * 1000) + " ms";
	}
	,cssStyle: function() {
		return "body, dd, dt {\n  font-family: Verdana, Arial, Sans-serif;\n  font-size: 12px;\n}\ndl {\n  width: 180px;\n}\ndd, dt {\n  margin : 0;\n  padding : 2px 5px;\n  border-top: 1px solid #f0f0f0;\n  border-left: 1px solid #f0f0f0;\n  border-right: 1px solid #CCCCCC;\n  border-bottom: 1px solid #CCCCCC;\n}\ndd.value {\n  text-align: center;\n  background-color: #eeeeee;\n}\ndt {\n  text-align: left;\n  background-color: #e6e6e6;\n  float: left;\n  width: 100px;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  margin: 0;\n  padding: 0;\n}\n\nh1 {\n  text-align: center;\n  font-weight: bold;\n  padding: 5px 0 4px 0;\n  font-family: Arial, Sans-serif;\n  font-size: 18px;\n  border-top: 1px solid #f0f0f0;\n  border-left: 1px solid #f0f0f0;\n  border-right: 1px solid #CCCCCC;\n  border-bottom: 1px solid #CCCCCC;\n  margin: 0 2px 0px 2px;\n}\n\nh2 {\n  font-weight: bold;\n  padding: 2px 0 2px 8px;\n  font-family: Arial, Sans-serif;\n  font-size: 13px;\n  border-top: 1px solid #f0f0f0;\n  border-left: 1px solid #f0f0f0;\n  border-right: 1px solid #CCCCCC;\n  border-bottom: 1px solid #CCCCCC;\n  margin: 0 0 0px 0;\n  background-color: #FFFFFF;\n  color: #777777;\n}\n\nh2.classname {\n  color: #000000;\n}\n\n.okbg {\n  background-color: #66FF55;\n}\n.errorbg {\n  background-color: #CC1100;\n}\n.failurebg {\n  background-color: #EE3322;\n}\n.warnbg {\n  background-color: #FFCC99;\n}\n.headerinfo {\n  text-align: right;\n  font-size: 11px;\n  font - color: 0xCCCCCC;\n  margin: 0 2px 5px 2px;\n  border-left: 1px solid #f0f0f0;\n  border-right: 1px solid #CCCCCC;\n  border-bottom: 1px solid #CCCCCC;\n  padding: 2px;\n}\n\nli {\n  padding: 4px;\n  margin: 2px;\n  border-top: 1px solid #f0f0f0;\n  border-left: 1px solid #f0f0f0;\n  border-right: 1px solid #CCCCCC;\n  border-bottom: 1px solid #CCCCCC;\n  background-color: #e6e6e6;\n}\n\nli.fixture {\n  background-color: #f6f6f6;\n  padding-bottom: 6px;\n}\n\ndiv.fixturedetails {\n  padding-left: 108px;\n}\n\nul {\n  padding: 0;\n  margin: 6px 0 0 0;\n  list-style-type: none;\n}\n\nol {\n  padding: 0 0 0 28px;\n  margin: 0px 0 0 0;\n}\n\n.statnumbers {\n  padding: 2px 8px;\n}\n\n.fixtureresult {\n  width: 100px;\n  text-align: center;\n  display: block;\n  float: left;\n  font-weight: bold;\n  padding: 1px;\n  margin: 0 0 0 0;\n}\n\n.testoutput {\n  border: 1px dashed #CCCCCC;\n  margin: 4px 0 0 0;\n  padding: 4px 8px;\n  background-color: #eeeeee;\n}\n\nspan.tracepos, span.traceposempty {\n  display: block;\n  float: left;\n  font-weight: bold;\n  font-size: 9px;\n  width: 170px;\n  margin: 2px 0 0 2px;\n}\n\nspan.tracepos:hover {\n  cursor : pointer;\n  background-color: #ffff99;\n}\n\nspan.tracemsg {\n  display: block;\n  margin-left: 180px;\n  background-color: #eeeeee;\n  padding: 7px;\n}\n\nspan.tracetime {\n  display: block;\n  float: right;\n  margin: 2px;\n  font-size: 9px;\n  color: #777777;\n}\n\n\ndiv.trace ol {\n  padding: 0 0 0 40px;\n  color: #777777;\n}\n\ndiv.trace li {\n  padding: 0;\n}\n\ndiv.trace li div.li {\n  color: #000000;\n}\n\ndiv.trace h2 {\n  margin: 0 2px 0px 2px;\n  padding-left: 4px;\n}\n\n.tracepackage {\n  color: #777777;\n  font-weight: normal;\n}\n\n.clr {\n  clear: both;\n}\n\n#utesttip {\n  margin-top: -3px;\n  margin-left: 170px;\n  font-size: 9px;\n}\n\n#utesttip li {\n  margin: 0;\n  background-color: #ffff99;\n  padding: 2px 4px;\n  border: 0;\n  border-bottom: 1px dashed #ffff33;\n}";
	}
	,jsScript: function() {
		return "function utestTooltip(ref, text) {\n  var el = document.getElementById(\"utesttip\");\n  if(!el) {\n    var el = document.createElement(\"div\")\n    el.id = \"utesttip\";\n    el.style.position = \"absolute\";\n    document.body.appendChild(el)\n  }\n  var p = utestFindPos(ref);\n  el.style.left = (4 + p[0]) + \"px\";\n  el.style.top = (p[1] - 1) + \"px\";\n  el.innerHTML =  text;\n}\n\nfunction utestFindPos(el) {\n  var left = 0;\n  var top = 0;\n  do {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n  } while(el = el.offsetParent)\n  return [left, top];\n}\n\nfunction utestRemoveTooltip() {\n  var el = document.getElementById(\"utesttip\")\n  if(el)\n    document.body.removeChild(el)\n}";
	}
	,wrapHtml: function(title,s) {
		return "<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" />\n<title>" + title + "</title>\n      <style type=\"text/css\">" + this.cssStyle() + "</style>\n      <script type=\"text/javascript\">\n" + this.jsScript() + "\n</" + "script>\n</head>\n      <body>\n" + s + "\n</body>\n</html>";
	}
	,_handler: function(report) {
		var _gthis = this;
		if(window.document.readyState == "loading") {
			var onReadyStateChange = null;
			onReadyStateChange = function() {
				if(window.document.readyState != "loading") {
					window.document.removeEventListener("readystatechange",onReadyStateChange);
					_gthis._handler(report);
				}
			};
			window.document.addEventListener("readystatechange",onReadyStateChange);
			return;
		}
		var isDef = function(v) {
			return typeof v != 'undefined';
		};
		var hasProcess = typeof process != 'undefined';
		if(hasProcess) {
			process.stdout.write(report.getHtml());
			return;
		}
		var head = window.document.getElementsByTagName("head")[0];
		var script = window.document.createElement("script");
		script.type = "text/javascript";
		var sjs = report.jsScript();
		if(isDef(script.text)) {
			script.text = sjs;
		} else {
			script.innerHTML = sjs;
		}
		head.appendChild(script);
		var style = window.document.createElement("style");
		style.type = "text/css";
		var scss = report.cssStyle();
		if(isDef(style.styleSheet)) {
			style.styleSheet.cssText = scss;
		} else if(isDef(style.cssText)) {
			style.cssText = scss;
		} else if(isDef(style.innerText)) {
			style.innerText = scss;
		} else {
			style.innerHTML = scss;
		}
		head.appendChild(style);
		var el = window.document.getElementById("utest-results");
		if(null == el) {
			el = window.document.createElement("div");
			el.id = "utest-results";
			window.document.body.appendChild(el);
		}
		el.innerHTML = report.getAll();
	}
	,__class__: utest_ui_text_HtmlReport
};
var utest_ui_text_PlainTextReport = function(runner,outputHandler) {
	this.aggregator = new utest_ui_common_ResultAggregator(runner,true);
	runner.onStart.add($bind(this,this.start));
	this.aggregator.onComplete.add($bind(this,this.complete));
	if(null != outputHandler) {
		this.setHandler(outputHandler);
	}
	this.displaySuccessResults = utest_ui_common_SuccessResultsDisplayMode.AlwaysShowSuccessResults;
	this.displayHeader = utest_ui_common_HeaderDisplayMode.AlwaysShowHeader;
};
utest_ui_text_PlainTextReport.__name__ = "utest.ui.text.PlainTextReport";
utest_ui_text_PlainTextReport.__interfaces__ = [utest_ui_common_IReport];
utest_ui_text_PlainTextReport.prototype = {
	displaySuccessResults: null
	,displayHeader: null
	,handler: null
	,aggregator: null
	,newline: null
	,indent: null
	,setHandler: function(handler) {
		this.handler = handler;
	}
	,startTime: null
	,start: function(e) {
		this.startTime = this.getTime();
	}
	,getTime: function() {
		return haxe_Timer.stamp();
	}
	,indents: function(c) {
		var s = "";
		while(--c >= 0) s += this.indent;
		return s;
	}
	,dumpStack: function(stack) {
		if(stack.length == 0) {
			return "";
		}
		var parts = haxe_CallStack.toString(stack).split("\n");
		var r = [];
		var _g = 0;
		while(_g < parts.length) {
			var part = parts[_g];
			++_g;
			if(part.indexOf(" utest.") >= 0) {
				continue;
			}
			r.push(part);
		}
		return r.join(this.newline);
	}
	,addHeader: function(buf,result) {
		if(!utest_ui_common_ReportTools.hasHeader(this,result.stats)) {
			return;
		}
		var end = this.getTime();
		var time = Std.int((end - this.startTime) * 1000) / 1000;
		buf.add("\nassertations: " + result.stats.assertations + this.newline);
		buf.add("successes: " + result.stats.successes + this.newline);
		buf.add("errors: " + result.stats.errors + this.newline);
		buf.add("failures: " + result.stats.failures + this.newline);
		buf.add("warnings: " + result.stats.warnings + this.newline);
		buf.add("execution time: " + time + this.newline);
		buf.add(this.newline);
		buf.add("results: " + (result.stats.isOk ? "ALL TESTS OK (success: true)" : "SOME TESTS FAILURES (success: false)"));
		buf.add(this.newline);
	}
	,result: null
	,getResults: function() {
		var buf = new StringBuf();
		this.addHeader(buf,this.result);
		var _g = 0;
		var _g1 = this.result.packageNames();
		while(_g < _g1.length) {
			var pname = _g1[_g];
			++_g;
			var pack = this.result.getPackage(pname);
			if(utest_ui_common_ReportTools.skipResult(this,pack.stats,this.result.stats.isOk)) {
				continue;
			}
			var _g2 = 0;
			var _g11 = pack.classNames();
			while(_g2 < _g11.length) {
				var cname = _g11[_g2];
				++_g2;
				var cls = pack.getClass(cname);
				if(utest_ui_common_ReportTools.skipResult(this,cls.stats,this.result.stats.isOk)) {
					continue;
				}
				buf.add((pname == "" ? "" : pname + ".") + cname + this.newline);
				var _g3 = 0;
				var _g12 = cls.methodNames();
				while(_g3 < _g12.length) {
					var mname = _g12[_g3];
					++_g3;
					var fix = cls.get(mname);
					if(utest_ui_common_ReportTools.skipResult(this,fix.stats,this.result.stats.isOk)) {
						continue;
					}
					buf.add(this.indents(1) + mname + ": ");
					if(fix.stats.isOk) {
						buf.add("OK ");
					} else if(fix.stats.hasErrors) {
						buf.add("ERROR ");
					} else if(fix.stats.hasFailures) {
						buf.add("FAILURE ");
					} else if(fix.stats.hasWarnings) {
						buf.add("WARNING ");
					}
					var messages = "";
					var assertation = fix.iterator();
					while(assertation.hasNext()) {
						var assertation1 = assertation.next();
						switch(assertation1._hx_index) {
						case 0:
							var _g9 = assertation1.pos;
							buf.add(".");
							break;
						case 1:
							var pos = assertation1.pos;
							var msg = assertation1.msg;
							buf.add("F");
							messages += this.indents(2) + "line: " + pos.lineNumber + ", " + msg + this.newline;
							break;
						case 2:
							var s = assertation1.stack;
							var e = assertation1.e;
							buf.add("E");
							messages += this.indents(2) + Std.string(e) + this.dumpStack(s) + this.newline;
							break;
						case 3:
							var s1 = assertation1.stack;
							var e1 = assertation1.e;
							buf.add("S");
							messages += this.indents(2) + Std.string(e1) + this.dumpStack(s1) + this.newline;
							break;
						case 4:
							var s2 = assertation1.stack;
							var e2 = assertation1.e;
							buf.add("T");
							messages += this.indents(2) + Std.string(e2) + this.dumpStack(s2) + this.newline;
							break;
						case 5:
							var s3 = assertation1.stack;
							var missedAsyncs = assertation1.missedAsyncs;
							buf.add("O");
							messages += this.indents(2) + "missed async calls: " + missedAsyncs + this.dumpStack(s3) + this.newline;
							break;
						case 6:
							var s4 = assertation1.stack;
							var e3 = assertation1.e;
							buf.add("A");
							messages += this.indents(2) + Std.string(e3) + this.dumpStack(s4) + this.newline;
							break;
						case 7:
							var msg1 = assertation1.msg;
							buf.add("W");
							messages += this.indents(2) + msg1 + this.newline;
							break;
						case 8:
							var reason = assertation1.reason;
							buf.add("I");
							if(reason != null && reason != "") {
								messages += this.indents(2) + ("With reason: " + reason) + this.newline;
							}
							break;
						}
					}
					buf.add(this.newline);
					buf.add(messages);
				}
			}
		}
		return buf.toString();
	}
	,complete: function(result) {
		this.result = result;
		if(this.handler != null) {
			this.handler(this);
		}
		if(typeof phantom != "undefined") {
			phantom.exit(result.stats.isOk ? 0 : 1);
		}
		if(typeof process != "undefined") {
			process.exit(result.stats.isOk ? 0 : 1);
		}
	}
	,__class__: utest_ui_text_PlainTextReport
};
var utest_ui_text_PrintReport = function(runner) {
	utest_ui_text_PlainTextReport.call(this,runner,$bind(this,this._handler));
	this.newline = "\n";
	this.indent = "  ";
};
utest_ui_text_PrintReport.__name__ = "utest.ui.text.PrintReport";
utest_ui_text_PrintReport.__super__ = utest_ui_text_PlainTextReport;
utest_ui_text_PrintReport.prototype = $extend(utest_ui_text_PlainTextReport.prototype,{
	_handler: function(report) {
		this._trace(report.getResults());
	}
	,_trace: function(s) {
		s = StringTools.replace(s,"  ",this.indent);
		s = StringTools.replace(s,"\n",this.newline);
		haxe_Log.trace(s,{ fileName : "utest/ui/text/PrintReport.hx", lineNumber : 52, className : "utest.ui.text.PrintReport", methodName : "_trace"});
	}
	,__class__: utest_ui_text_PrintReport
});
var utest_utils_AccessoriesUtils = function() { };
utest_utils_AccessoriesUtils.__name__ = "utest.utils.AccessoriesUtils";
utest_utils_AccessoriesUtils.getSetupClass = function(accessories) {
	if(accessories.setupClass == null) {
		return utest_Async.getResolved;
	} else {
		return accessories.setupClass;
	}
};
utest_utils_AccessoriesUtils.getSetup = function(accessories) {
	if(accessories.setup == null) {
		return utest_Async.getResolved;
	} else {
		return accessories.setup;
	}
};
utest_utils_AccessoriesUtils.getTeardown = function(accessories) {
	if(accessories.teardown == null) {
		return utest_Async.getResolved;
	} else {
		return accessories.teardown;
	}
};
utest_utils_AccessoriesUtils.getTeardownClass = function(accessories) {
	if(accessories.teardownClass == null) {
		return utest_Async.getResolved;
	} else {
		return accessories.teardownClass;
	}
};
var utest_utils_AsyncUtils = function() { };
utest_utils_AsyncUtils.__name__ = "utest.utils.AsyncUtils";
utest_utils_AsyncUtils.orResolved = function(async) {
	if(async == null) {
		return utest_Async.getResolved();
	} else {
		return async;
	}
};
function $getIterator(o) { if( o instanceof Array ) return HxOverrides.iter(o); else return o.iterator(); }
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = String;
String.__name__ = "String";
Array.__name__ = "Array";
Date.prototype.__class__ = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
haxe_ds_ObjectMap.count = 0;
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.rows = 1;
geom_matrix__$Matrix1x2_Matrix1x2_$Impl_$.columns = 2;
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.rows = 1;
geom_matrix__$Matrix1x3_Matrix1x3_$Impl_$.columns = 3;
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.rows = 1;
geom_matrix__$Matrix1x4_Matrix1x4_$Impl_$.columns = 4;
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.row = 2;
geom_matrix__$Matrix2x2_Matrix2x2_$Impl_$.col = 2;
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.rows = 3;
geom_matrix__$Matrix3x3_Matrix3x3_$Impl_$.columns = 3;
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.rows = 4;
geom_matrix__$Matrix4x3_Matrix4x3_$Impl_$.columns = 3;
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.rows = 4;
geom_matrix__$Matrix4x4_Matrix4x4_$Impl_$.columns = 4;
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.rows = 5;
geom_matrix__$Matrix5x5_Matrix5x5_$Impl_$.columns = 5;
utest_TestHandler.POLLING_TIME = 10;
utest_AccessoryName.SETUP_NAME = "setup";
utest_AccessoryName.SETUP_CLASS_NAME = "setupClass";
utest_AccessoryName.TEARDOWN_NAME = "teardown";
utest_AccessoryName.TEARDOWN_CLASS_NAME = "teardownClass";
utest_ui_text_HtmlReport.platform = "javascript";
geom_GeomTest.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
