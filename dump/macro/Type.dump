extern class Type {

	static function getClass<T : getClass.T>(o:getClass.T):Class<getClass.T>;

	static function getEnum(o:EnumValue):Enum<Dynamic>;

	static function getSuperClass(c:Class<Dynamic>):Class<Dynamic>;

	static function getClassName(c:Class<Dynamic>):String;

	static function getEnumName(e:Enum<Dynamic>):String;

	static function resolveClass(name:String):Class<Dynamic>;

	static function resolveEnum(name:String):Enum<Dynamic>;

	static function createInstance<T : createInstance.T>(cl:Class<createInstance.T>, args:Array<Dynamic>):createInstance.T;

	static function createEmptyInstance<T : createEmptyInstance.T>(cl:Class<createEmptyInstance.T>):createEmptyInstance.T;

	static function createEnum<T : createEnum.T>(e:Enum<createEnum.T>, constr:String, params:Null<Array<Dynamic>>):createEnum.T;

	static function createEnumIndex<T : createEnumIndex.T>(e:Enum<createEnumIndex.T>, index:Int, params:Null<Array<Dynamic>>):createEnumIndex.T;

	static function getInstanceFields(c:Class<Dynamic>):Array<String>;

	static function getClassFields(c:Class<Dynamic>):Array<String>;

	static function getEnumConstructs(e:Enum<Dynamic>):Array<String>;

	static function typeof(v:Dynamic):ValueType;

	static function enumEq<T : enumEq.T>(a:enumEq.T, b:enumEq.T):Bool;

	static function enumConstructor(e:EnumValue):String;

	static function enumParameters(e:EnumValue):Array<Dynamic>;

	static function enumIndex(e:EnumValue):Int;

	static function allEnums<T : allEnums.T>(e:Enum<allEnums.T>):Array<allEnums.T>;
}