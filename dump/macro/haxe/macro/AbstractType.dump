typedef haxe.macro.AbstractType = { unops : Array<{ postFix : Bool, op : haxe.macro.Unop, field : haxe.macro.ClassField }>, type : haxe.macro.Type, to : Array<{ t : haxe.macro.Type, field : Null<haxe.macro.ClassField> }>, resolveWrite : Null<haxe.macro.ClassField>, resolve : Null<haxe.macro.ClassField>, pos : haxe.macro.Position, params : Array<haxe.macro.TypeParameter>, pack : Array<String>, name : String, module : String, meta : haxe.macro.MetaAccess, isPrivate : Bool, isExtern : Bool, impl : Null<haxe.macro.Ref<haxe.macro.ClassType>>, from : Array<{ t : haxe.macro.Type, field : Null<haxe.macro.ClassField> }>, exclude : Void -> Void, doc : Null<String>, binops : Array<{ op : haxe.macro.Binop, field : haxe.macro.ClassField }>, array : Array<haxe.macro.ClassField> }