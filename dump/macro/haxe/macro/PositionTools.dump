class haxe.macro.PositionTools {

	@:has_untyped
	public static macro function here() {
		var positionExpr = haxe.macro.Context.makeExpr(haxe.macro.Context.getPosInfos(haxe.macro.Context.currentPos()), haxe.macro.Context.currentPos());
		if (haxe.macro.Context.defined("macro")) {
			return cast {expr : haxe.macro.ExprDef.ECall({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EField({expr : haxe.macro.ExprDef.EConst(haxe.macro.Constant.CIdent("haxe")), pos : $__mk_pos__("/usr/local/lib/haxe/std/haxe/macro/PositionTools.hx", 1508, 1512)}, "macro"), pos : $__mk_pos__("/usr/local/lib/haxe/std/haxe/macro/PositionTools.hx", 1508, 1518)}, "Context"), pos : $__mk_pos__("/usr/local/lib/haxe/std/haxe/macro/PositionTools.hx", 1508, 1526)}, "makePosition"), pos : $__mk_pos__("/usr/local/lib/haxe/std/haxe/macro/PositionTools.hx", 1508, 1539)}, [positionExpr]), pos : $__mk_pos__("/usr/local/lib/haxe/std/haxe/macro/PositionTools.hx", 1508, 1554)};
		} else {
			return positionExpr;
		};
	}

	public static function getInfos(p:haxe.macro.Position) {
		return haxe.macro.Context.getPosInfos(p);
	}

	public static function make(inf:{ min : Int, max : Int, file : String }) {
		return haxe.macro.Context.makePosition(inf);
	}

	public static function toLocation(p:haxe.macro.Position) {
		return haxe.macro.Context.load("position_to_range", 1)(p);
	}
}