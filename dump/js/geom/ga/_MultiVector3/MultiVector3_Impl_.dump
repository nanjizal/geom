@:used
private class geom.ga._MultiVector3.MultiVector3_Impl_ {

	@:impl @:noCompletion
	public static inline function _new(m:geom.structure.MVec3) {
		var this1 = m;
		return cast this1;
	}

	public static var zero(get,never):geom.ga.MultiVector3;

	static inline function get_zero() {
		var this1 = new geom.structure.MVec3(0., 0., 0., 0., 0., 0., 0., 0.);
		return cast this1;
	}

	@:impl
	static var nought(get,never):geom.ga.MultiVector3;

	@:impl
	static inline function get_nought(this1:geom.structure.MVec3) {
		var this1 = new geom.structure.MVec3(0., 0., 0., 0., 0., 0., 0., 0.);
		return cast this1;
	}

	@:op(A - B)
	public static inline function subtracting(a:geom.ga.MultiVector3, b:geom.ga.MultiVector3) {
		var this1 = new geom.structure.MVec3(cast a.s - b.s, cast a.x - b.x, cast a.y - b.y, cast a.z - b.z, cast a.xy - b.xy, cast a.zx - b.zx, cast a.yz - b.yz, cast a.xyz - b.xyz);
		return cast this1;
	}

	@:impl
	public static inline function subtract(this1:geom.structure.MVec3, b:geom.ga.MultiVector3) {
		var this2 = new geom.structure.MVec3(this1.s - b.s, this1.x - b.x, this1.y - b.y, this1.z - b.z, this1.xy - b.xy, this1.zx - b.zx, this1.yz - b.yz, this1.xyz - b.xyz);
		return cast this2;
	}

	@:op(A + B)
	public static inline function adding(a:geom.ga.MultiVector3, b:geom.ga.MultiVector3) {
		var this1 = new geom.structure.MVec3(cast a.s + b.s, cast a.x + b.x, cast a.y + b.y, cast a.z + b.z, cast a.xy + b.xy, cast a.zx + b.zx, cast a.yz + b.yz, cast a.xyz + b.xyz);
		return cast this1;
	}

	@:impl
	public static inline function add(this1:geom.structure.MVec3, b:geom.ga.MultiVector3) {
		var this2 = new geom.structure.MVec3(this1.s + b.s, this1.x + b.x, this1.y + b.y, this1.z + b.z, this1.xy + b.xy, this1.zx + b.zx, this1.yz + b.yz, this1.xyz + b.xyz);
		return cast this2;
	}

	@:op(A * B)
	public static inline function multiplying(a:geom.ga.MultiVector3, b:geom.ga.MultiVector3) {
		var this1 = new geom.structure.MVec3(cast a.s * b.s + cast a.x * b.x + cast a.y * b.y + cast a.z * b.z - cast a.xy * b.xy - cast a.zx * cast a.zx - cast a.yz * b.yz - cast a.xyz * b.xyz, cast a.x * b.s + cast a.s * b.x - cast a.xy * b.y + cast a.zx * b.z + cast a.y * b.xy - cast a.z * b.zx - cast a.xyz * b.yz - cast a.yz * b.xyz, cast a.y * b.s + cast a.xy * b.x + cast a.s * b.y - cast a.yz * b.z - cast a.x * b.xy - cast a.xyz * b.zx + cast a.z * b.yz - cast a.zx * b.xyz, cast a.z * b.s - cast a.zx * b.x + cast a.yz * b.y + cast a.s * b.z - cast a.xyz * b.xy + cast a.x * b.zx - cast a.y * b.yz - cast a.xy * b.xyz, cast a.xy * b.s + cast a.y * b.x - cast a.x * b.y + cast a.xyz * b.z + cast a.s * b.xy + cast a.yz * b.zx - cast a.zx * b.yz + cast a.z * b.xyz, cast a.zx * b.s - cast a.z * b.x + cast a.xyz * b.y + cast a.x * b.z - cast a.yz * b.xy + cast a.s * b.zx + cast a.xy * b.yz + cast a.y * b.xyz, cast a.yz * b.s + cast a.xyz * b.x + cast a.z * b.y - cast a.y * b.z + cast a.zx * b.xy - cast a.xy * b.zx + cast a.s * b.yz + cast a.x * b.xyz, cast a.xyz * b.s + cast a.yz * b.x + cast a.zx * b.y + cast a.xy * b.z + cast a.z * b.xy + cast a.y * b.zx + cast a.x * b.yz + cast a.s * b.xyz);
		return cast this1;
	}

	@:impl
	public static inline function multiply(this1:geom.structure.MVec3, b:geom.ga.MultiVector3) {
		var this2 = new geom.structure.MVec3(this1.s * b.s + this1.x * b.x + this1.y * b.y + this1.z * b.z - this1.xy * b.xy - this1.zx * this1.zx - this1.yz * b.yz - this1.xyz * b.xyz, this1.x * b.s + this1.s * b.x - this1.xy * b.y + this1.zx * b.z + this1.y * b.xy - this1.z * b.zx - this1.xyz * b.yz - this1.yz * b.xyz, this1.y * b.s + this1.xy * b.x + this1.s * b.y - this1.yz * b.z - this1.x * b.xy - this1.xyz * b.zx + this1.z * b.yz - this1.zx * b.xyz, this1.z * b.s - this1.zx * b.x + this1.yz * b.y + this1.s * b.z - this1.xyz * b.xy + this1.x * b.zx - this1.y * b.yz - this1.xy * b.xyz, this1.xy * b.s + this1.y * b.x - this1.x * b.y + this1.xyz * b.z + this1.s * b.xy + this1.yz * b.zx - this1.zx * b.yz + this1.z * b.xyz, this1.zx * b.s - this1.z * b.x + this1.xyz * b.y + this1.x * b.z - this1.yz * b.xy + this1.s * b.zx + this1.xy * b.yz + this1.y * b.xyz, this1.yz * b.s + this1.xyz * b.x + this1.z * b.y - this1.y * b.z + this1.zx * b.xy - this1.xy * b.zx + this1.s * b.yz + this1.x * b.xyz, this1.xyz * b.s + this1.yz * b.x + this1.zx * b.y + this1.xy * b.z + this1.z * b.xy + this1.y * b.zx + this1.x * b.yz + this1.s * b.xyz);
		return cast this2;
	}
}