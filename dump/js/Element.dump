@:realPath("js.html.DOMElement") @:used @:native("Element")
extern class Element extends Node {

	var namespaceURI(default,null):String;

	var prefix(default,null):String;

	var localName(default,null):String;

	var tagName(default,null):String;

	var id:String;

	var className:String;

	var classList(default,null):DOMTokenList;

	var attributes(default,null):NamedNodeMap;

	var title:String;

	var lang:String;

	var dir:String;

	var dataset(default,null):DOMStringMap;

	var innerText:String;

	var itemScope:Bool;

	var itemType(default,null):DOMTokenList;

	var itemId:String;

	var itemRef(default,null):DOMTokenList;

	var itemProp(default,null):DOMTokenList;

	var properties(default,null):HTMLPropertiesCollection;

	var itemValue:Dynamic;

	var hidden:Bool;

	var tabIndex:Int;

	var accessKey:String;

	var accessKeyLabel(default,null):String;

	var draggable:Bool;

	var contentEditable:String;

	var isContentEditable(default,null):Bool;

	var contextMenu(default,null):HTMLMenuElement;

	var spellcheck:Bool;

	var style(default,null):CSSStyleDeclaration;

	var oncopy:haxe.Function;

	var oncut:haxe.Function;

	var onpaste:haxe.Function;

	var offsetParent(default,null):HTMLElement;

	var offsetTop(default,null):Int;

	var offsetLeft(default,null):Int;

	var offsetWidth(default,null):Int;

	var offsetHeight(default,null):Int;

	var scrollTop:Int;

	var scrollLeft:Int;

	var scrollWidth(default,null):Int;

	var scrollHeight(default,null):Int;

	var clientTop(default,null):Int;

	var clientLeft(default,null):Int;

	var clientWidth(default,null):Int;

	var clientHeight(default,null):Int;

	var scrollTopMax(default,null):Int;

	var scrollLeftMax(default,null):Int;

	var innerHTML:String;

	var outerHTML:String;

	var shadowRoot(default,null):ShadowRoot;

	var assignedSlot(default,null):HTMLSlotElement;

	var slot:String;

	var onabort:haxe.Function;

	var onblur:haxe.Function;

	var onfocus:haxe.Function;

	var onauxclick:haxe.Function;

	var oncanplay:haxe.Function;

	var oncanplaythrough:haxe.Function;

	var onchange:haxe.Function;

	var onclick:haxe.Function;

	var onclose:haxe.Function;

	var oncontextmenu:haxe.Function;

	var ondblclick:haxe.Function;

	var ondrag:haxe.Function;

	var ondragend:haxe.Function;

	var ondragenter:haxe.Function;

	var ondragexit:haxe.Function;

	var ondragleave:haxe.Function;

	var ondragover:haxe.Function;

	var ondragstart:haxe.Function;

	var ondrop:haxe.Function;

	var ondurationchange:haxe.Function;

	var onemptied:haxe.Function;

	var onended:haxe.Function;

	var oninput:haxe.Function;

	var oninvalid:haxe.Function;

	var onkeydown:haxe.Function;

	var onkeypress:haxe.Function;

	var onkeyup:haxe.Function;

	var onload:haxe.Function;

	var onloadeddata:haxe.Function;

	var onloadedmetadata:haxe.Function;

	var onloadend:haxe.Function;

	var onloadstart:haxe.Function;

	var onmousedown:haxe.Function;

	var onmouseenter:haxe.Function;

	var onmouseleave:haxe.Function;

	var onmousemove:haxe.Function;

	var onmouseout:haxe.Function;

	var onmouseover:haxe.Function;

	var onmouseup:haxe.Function;

	var onwheel:haxe.Function;

	var onpause:haxe.Function;

	var onplay:haxe.Function;

	var onplaying:haxe.Function;

	var onprogress:haxe.Function;

	var onratechange:haxe.Function;

	var onreset:haxe.Function;

	var onresize:haxe.Function;

	var onscroll:haxe.Function;

	var onseeked:haxe.Function;

	var onseeking:haxe.Function;

	var onselect:haxe.Function;

	var onshow:haxe.Function;

	var onstalled:haxe.Function;

	var onsubmit:haxe.Function;

	var onsuspend:haxe.Function;

	var ontimeupdate:haxe.Function;

	var onvolumechange:haxe.Function;

	var onwaiting:haxe.Function;

	var onselectstart:haxe.Function;

	var ontoggle:haxe.Function;

	var onpointercancel:haxe.Function;

	var onpointerdown:haxe.Function;

	var onpointerup:haxe.Function;

	var onpointermove:haxe.Function;

	var onpointerout:haxe.Function;

	var onpointerover:haxe.Function;

	var onpointerenter:haxe.Function;

	var onpointerleave:haxe.Function;

	var ongotpointercapture:haxe.Function;

	var onlostpointercapture:haxe.Function;

	var onanimationcancel:haxe.Function;

	var onanimationend:haxe.Function;

	var onanimationiteration:haxe.Function;

	var onanimationstart:haxe.Function;

	var ontransitioncancel:haxe.Function;

	var ontransitionend:haxe.Function;

	var ontransitionrun:haxe.Function;

	var ontransitionstart:haxe.Function;

	var onwebkitanimationend:haxe.Function;

	var onwebkitanimationiteration:haxe.Function;

	var onwebkitanimationstart:haxe.Function;

	var onwebkittransitionend:haxe.Function;

	var previousElementSibling(default,null):HTMLElement;

	var nextElementSibling(default,null):HTMLElement;

	var onerror:haxe.Function;

	var children(default,null):HTMLCollection;

	var firstElementChild(default,null):HTMLElement;

	var lastElementChild(default,null):HTMLElement;

	var childElementCount(default,null):Int;

	var ontouchstart:haxe.Function;

	var ontouchend:haxe.Function;

	var ontouchmove:haxe.Function;

	var ontouchcancel:haxe.Function;

	@:pure
	function getAttributeNames():Array<String>;

	@:pure
	function getAttribute(name:String):String;

	@:pure
	function getAttributeNS(namespace:String, localName:String):String;

	function toggleAttribute(name:String, force:Null<Bool>):Bool;

	function setAttribute(name:String, value:String):Void;

	function setAttributeNS(namespace:String, name:String, value:String):Void;

	function removeAttribute(name:String):Void;

	function removeAttributeNS(namespace:String, localName:String):Void;

	@:pure
	function hasAttribute(name:String):Bool;

	@:pure
	function hasAttributeNS(namespace:String, localName:String):Bool;

	@:pure
	function hasAttributes():Bool;

	@:pure
	function closest(selector:String):HTMLElement;

	@:pure
	function matches(selector:String):Bool;

	@:pure
	function webkitMatchesSelector(selector:String):Bool;

	@:pure
	function getElementsByTagName(localName:String):HTMLCollection;

	@:pure
	function getElementsByTagNameNS(namespace:String, localName:String):HTMLCollection;

	@:pure
	function getElementsByClassName(classNames:String):HTMLCollection;

	@:pure
	function insertAdjacentElement(where:String, element:HTMLElement):HTMLElement;

	function insertAdjacentText(where:String, data:String):Void;

	function setPointerCapture(pointerId:Int):Void;

	function releasePointerCapture(pointerId:Int):Void;

	function hasPointerCapture(pointerId:Int):Bool;

	@:value({ retargetToElement : false })
	function setCapture(retargetToElement:Bool):Void;

	function releaseCapture():Void;

	function getAttributeNode(name:String):Attr;

	function setAttributeNode(newAttr:Attr):Attr;

	function removeAttributeNode(oldAttr:Attr):Attr;

	function getAttributeNodeNS(namespaceURI:String, localName:String):Attr;

	function setAttributeNodeNS(newAttr:Attr):Attr;

	function click():Void;

	function focus():Void;

	function blur():Void;

	function getClientRects():DOMRectList;

	function getBoundingClientRect():DOMRect;

	function scrollIntoView(arg:Null<Bool>):Void;

	function scrollIntoView(arg:Null<js.html.ScrollIntoViewOptions>):Void;

	function scroll(options:Null<js.html.ScrollToOptions>):Void;

	function scroll(x:Float, y:Float):Void;

	function scrollTo(options:Null<js.html.ScrollToOptions>):Void;

	function scrollTo(x:Float, y:Float):Void;

	function scrollBy(options:Null<js.html.ScrollToOptions>):Void;

	function scrollBy(x:Float, y:Float):Void;

	function insertAdjacentHTML(position:String, text:String):Void;

	@:pure
	function querySelector(selectors:String):HTMLElement;

	@:pure
	function querySelectorAll(selectors:String):NodeList;

	function attachShadow(shadowRootInitDict:js.html.ShadowRootInit):ShadowRoot;

	function requestFullscreen():Void;

	function requestPointerLock():Void;

	function animate(keyframes:Dynamic, options:Null<Float>):Animation;

	function animate(keyframes:Dynamic, options:Null<js.html.KeyframeAnimationOptions>):Animation;

	function getAnimations(filter:Null<js.html.AnimationFilter>):Array<Animation>;

	function before(nodes:haxe.extern.Rest<Node>):Void;

	function before(nodes:haxe.extern.Rest<String>):Void;

	function after(nodes:haxe.extern.Rest<Node>):Void;

	function after(nodes:haxe.extern.Rest<String>):Void;

	function replaceWith(nodes:haxe.extern.Rest<Node>):Void;

	function replaceWith(nodes:haxe.extern.Rest<String>):Void;

	function remove():Void;

	function convertQuadFromNode(quad:DOMQuad, from:Text, options:Null<js.html.ConvertCoordinateOptions>):DOMQuad;

	function convertQuadFromNode(quad:DOMQuad, from:HTMLElement, options:Null<js.html.ConvertCoordinateOptions>):DOMQuad;

	function convertQuadFromNode(quad:DOMQuad, from:HTMLDocument, options:Null<js.html.ConvertCoordinateOptions>):DOMQuad;

	function convertRectFromNode(rect:DOMRectReadOnly, from:Text, options:Null<js.html.ConvertCoordinateOptions>):DOMQuad;

	function convertRectFromNode(rect:DOMRectReadOnly, from:HTMLElement, options:Null<js.html.ConvertCoordinateOptions>):DOMQuad;

	function convertRectFromNode(rect:DOMRectReadOnly, from:HTMLDocument, options:Null<js.html.ConvertCoordinateOptions>):DOMQuad;

	function convertPointFromNode(point:js.html.DOMPointInit, from:Text, options:Null<js.html.ConvertCoordinateOptions>):DOMPoint;

	function convertPointFromNode(point:js.html.DOMPointInit, from:HTMLElement, options:Null<js.html.ConvertCoordinateOptions>):DOMPoint;

	function convertPointFromNode(point:js.html.DOMPointInit, from:HTMLDocument, options:Null<js.html.ConvertCoordinateOptions>):DOMPoint;

	function prepend(nodes:haxe.extern.Rest<Node>):Void;

	function prepend(nodes:haxe.extern.Rest<String>):Void;

	function append(nodes:haxe.extern.Rest<Node>):Void;

	function append(nodes:haxe.extern.Rest<String>):Void;
}