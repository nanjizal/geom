@:keep @:directlyUsed @:used
class haxe.Timer {

	@:has_untyped
	public function new(time_ms:Int) {
		var me = this;
		this.id = setInterval(function() {
			me.run();
		}, time_ms);
	}

	var id:Null<Int>;

	@:has_untyped
	public function stop() {
		if ((this.id == null)) return;
		clearInterval(this.id);
		this.id = null;
	}

	public dynamic function run() {}

	public static function delay(f:Void -> Void, time_ms:Int) {
		var t = new haxe.Timer(time_ms);
		t.run = function() {
			t.stop();
			f();
		};
		return t;
	}

	public static function stamp() {
		return HxOverrides.now() / 1000;
	}
}