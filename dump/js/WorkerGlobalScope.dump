@:realPath("js.html.WorkerGlobalScope") @:native("WorkerGlobalScope")
extern class WorkerGlobalScope extends EventTarget {

	var self(default,null):WorkerGlobalScope;

	var location(default,null):WorkerLocation;

	var navigator(default,null):WorkerNavigator;

	var onerror:(haxe.extern.EitherType<Event, String>, String, Int, Int, Dynamic) -> Dynamic;

	var onoffline:haxe.Function;

	var ononline:haxe.Function;

	var performance(default,null):Performance;

	var crypto(default,null):Crypto;

	var origin(default,null):String;

	var isSecureContext(default,null):Bool;

	var indexedDB(default,null):IDBFactory;

	var caches(default,null):CacheStorage;

	function importScripts(urls:haxe.extern.Rest<String>):Void;

	function dump(str:Null<String>):Void;

	function btoa(btoa:String):String;

	function atob(atob:String):String;

	@:value({ timeout : 0 })
	function setTimeout(handler:String, timeout:Int, unused:haxe.extern.Rest<Dynamic>):Int;

	@:value({ timeout : 0 })
	function setTimeout(handler:haxe.Function, timeout:Int, arguments:haxe.extern.Rest<Dynamic>):Int;

	@:value({ handle : 0 })
	function clearTimeout(handle:Int):Void;

	@:value({ timeout : 0 })
	function setInterval(handler:String, timeout:Int, unused:haxe.extern.Rest<Dynamic>):Int;

	@:value({ timeout : 0 })
	function setInterval(handler:haxe.Function, timeout:Int, arguments:haxe.extern.Rest<Dynamic>):Int;

	@:value({ handle : 0 })
	function clearInterval(handle:Int):Void;

	function createImageBitmap(aImage:HTMLImageElement, aOffset:Int, aLength:Int, aFormat:js.html.ImageBitmapFormat, aLayout:Array<js.html.ChannelPixelLayout>):Promise<ImageBitmap>;

	function createImageBitmap(aImage:HTMLVideoElement):Promise<ImageBitmap>;

	function createImageBitmap(aImage:HTMLCanvasElement):Promise<ImageBitmap>;

	function createImageBitmap(aImage:Blob):Promise<ImageBitmap>;

	function createImageBitmap(aImage:ImageData):Promise<ImageBitmap>;

	function createImageBitmap(aImage:CanvasRenderingContext2D):Promise<ImageBitmap>;

	function createImageBitmap(aImage:ImageBitmap):Promise<ImageBitmap>;

	function createImageBitmap(aImage:js.lib.ArrayBufferView):Promise<ImageBitmap>;

	function createImageBitmap(aImage:ArrayBuffer):Promise<ImageBitmap>;

	function createImageBitmap(aImage:HTMLVideoElement, aSx:Int, aSy:Int, aSw:Int, aSh:Int):Promise<ImageBitmap>;

	function createImageBitmap(aImage:HTMLCanvasElement, aSx:Int, aSy:Int, aSw:Int, aSh:Int):Promise<ImageBitmap>;

	function createImageBitmap(aImage:Blob, aSx:Int, aSy:Int, aSw:Int, aSh:Int):Promise<ImageBitmap>;

	function createImageBitmap(aImage:ImageData, aSx:Int, aSy:Int, aSw:Int, aSh:Int):Promise<ImageBitmap>;

	function createImageBitmap(aImage:CanvasRenderingContext2D, aSx:Int, aSy:Int, aSw:Int, aSh:Int):Promise<ImageBitmap>;

	function createImageBitmap(aImage:ImageBitmap, aSx:Int, aSy:Int, aSw:Int, aSh:Int):Promise<ImageBitmap>;

	function createImageBitmap(aImage:js.lib.ArrayBufferView, aSx:Int, aSy:Int, aSw:Int, aSh:Int):Promise<ImageBitmap>;

	function createImageBitmap(aImage:ArrayBuffer, aSx:Int, aSy:Int, aSw:Int, aSh:Int):Promise<ImageBitmap>;

	function createImageBitmap(aImage:HTMLVideoElement, aOffset:Int, aLength:Int, aFormat:js.html.ImageBitmapFormat, aLayout:Array<js.html.ChannelPixelLayout>):Promise<ImageBitmap>;

	function createImageBitmap(aImage:HTMLCanvasElement, aOffset:Int, aLength:Int, aFormat:js.html.ImageBitmapFormat, aLayout:Array<js.html.ChannelPixelLayout>):Promise<ImageBitmap>;

	function createImageBitmap(aImage:Blob, aOffset:Int, aLength:Int, aFormat:js.html.ImageBitmapFormat, aLayout:Array<js.html.ChannelPixelLayout>):Promise<ImageBitmap>;

	function createImageBitmap(aImage:ImageData, aOffset:Int, aLength:Int, aFormat:js.html.ImageBitmapFormat, aLayout:Array<js.html.ChannelPixelLayout>):Promise<ImageBitmap>;

	function createImageBitmap(aImage:CanvasRenderingContext2D, aOffset:Int, aLength:Int, aFormat:js.html.ImageBitmapFormat, aLayout:Array<js.html.ChannelPixelLayout>):Promise<ImageBitmap>;

	function createImageBitmap(aImage:ImageBitmap, aOffset:Int, aLength:Int, aFormat:js.html.ImageBitmapFormat, aLayout:Array<js.html.ChannelPixelLayout>):Promise<ImageBitmap>;

	function createImageBitmap(aImage:js.lib.ArrayBufferView, aOffset:Int, aLength:Int, aFormat:js.html.ImageBitmapFormat, aLayout:Array<js.html.ChannelPixelLayout>):Promise<ImageBitmap>;

	function createImageBitmap(aImage:ArrayBuffer, aOffset:Int, aLength:Int, aFormat:js.html.ImageBitmapFormat, aLayout:Array<js.html.ChannelPixelLayout>):Promise<ImageBitmap>;

	function createImageBitmap(aImage:HTMLImageElement):Promise<ImageBitmap>;

	function createImageBitmap(aImage:HTMLImageElement, aSx:Int, aSy:Int, aSw:Int, aSh:Int):Promise<ImageBitmap>;

	function fetch(input:Request, init:Null<js.html.RequestInit>):Promise<Response>;

	function fetch(input:String, init:Null<js.html.RequestInit>):Promise<Response>;
}