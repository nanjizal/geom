@:realPath("js.html.MediaElement") @:native("HTMLMediaElement")
extern class HTMLMediaElement extends HTMLElement {

	var error(default,null):MediaError;

	var src:String;

	var currentSrc(default,null):String;

	var crossOrigin:String;

	var networkState(default,null):Int;

	var preload:String;

	var buffered(default,null):TimeRanges;

	var readyState(default,null):Int;

	var seeking(default,null):Bool;

	var currentTime:Float;

	var duration(default,null):Float;

	var paused(default,null):Bool;

	var defaultPlaybackRate:Float;

	var playbackRate:Float;

	var played(default,null):TimeRanges;

	var seekable(default,null):TimeRanges;

	var ended(default,null):Bool;

	var autoplay:Bool;

	var loop:Bool;

	var controls:Bool;

	var volume:Float;

	var muted:Bool;

	var defaultMuted:Bool;

	var audioTracks(default,null):AudioTrackList;

	var videoTracks(default,null):VideoTrackList;

	var textTracks(default,null):TextTrackList;

	var srcObject:MediaStream;

	var mediaKeys(default,null):MediaKeys;

	var onencrypted:haxe.Function;

	var onwaitingforkey:haxe.Function;

	function load():Void;

	function canPlayType(type:String):String;

	function fastSeek(time:Float):Void;

	function play():Promise<Void>;

	function pause():Void;

	@:value({ language : "", label : "" })
	function addTextTrack(kind:js.html.TextTrackKind, label:String, language:String):TextTrack;

	function setMediaKeys(mediaKeys:MediaKeys):Promise<Void>;

	@:value(0)
	static inline var NETWORK_EMPTY:Int = 0;

	@:value(1)
	static inline var NETWORK_IDLE:Int = 1;

	@:value(2)
	static inline var NETWORK_LOADING:Int = 2;

	@:value(3)
	static inline var NETWORK_NO_SOURCE:Int = 3;

	@:value(0)
	static inline var HAVE_NOTHING:Int = 0;

	@:value(1)
	static inline var HAVE_METADATA:Int = 1;

	@:value(2)
	static inline var HAVE_CURRENT_DATA:Int = 2;

	@:value(3)
	static inline var HAVE_FUTURE_DATA:Int = 3;

	@:value(4)
	static inline var HAVE_ENOUGH_DATA:Int = 4;
}