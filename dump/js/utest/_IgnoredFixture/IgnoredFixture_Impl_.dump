@:directlyUsed @:used
private class utest._IgnoredFixture.IgnoredFixture_Impl_ {

	public static function NotIgnored() {
		var this1 = null;
		return cast this1;
	}

	@:value({ reason : null })
	public static function Ignored(reason:Null<String> = null) {
		var this1 = if ((reason != null)) reason else "";
		return cast this1;
	}

	@:impl
	public static var isIgnored(get,never):Bool;

	@:impl
	public static var ignoreReason(get,never):String;

	@:impl @:noCompletion
	public static inline function _new(reason:String) {
		var this1 = reason;
		return cast this1;
	}

	@:impl
	static inline function get_isIgnored(this1:String) {
		return this1 != null;
	}

	@:impl
	static inline function get_ignoreReason(this1:String) {
		return this1;
	}
}