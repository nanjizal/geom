@:directlyUsed @:used
class geom.constraints.Precision {

	public static function floatToStringPrecision(n:Float, prec:Int) {
		if ((n == 0)) {
			var ` = [];
			{
				var `1 = 0;
				var `2 = prec;
				while ((`1 < `2)) {
					var i = `1 ++;
					`.push("0");
				};
			};
			return "0." + `.join("");
		};
		var minusSign = n < 0.0;
		n = Math.abs(n);
		var intPart = Math.floor(n);
		var p = Math.pow(10, prec);
		var fracPart = Math.round(p * (n - intPart));
		var buf = new StringBuf();
		if ((minusSign)) buf.addChar(45);
		buf.add(Std.string(intPart));
		if ((fracPart == 0)) {
			buf.addChar(46);
			{
				var ` = 0;
				var `1 = prec;
				while ((` < `1)) {
					var i = ` ++;
					buf.addChar(48);
				};
			};
		} else {
			buf.addChar(46);
			p /= 10;
			var nZeros = 0;
			while ((fracPart < p)) {
				p /= 10;
				buf.addChar(48);
			};
			buf.add(fracPart);
		};
		return buf.toString();
	}

	public static inline function max4(f0:Float, f1:Float, f2:Float, f3:Float) {
		return Math.round(Math.max(Math.max(Math.max(f0, f1), f2), f3));
	}

	public static inline function max3(f0:Float, f1:Float, f2:Float) {
		return Math.round(Math.max(Math.max(f0, f1), f2));
	}
}